// symdefs.hpp
//
// Copyright (C) 2006-2011 Peter Graves <gnooth@gmail.com>
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

// Common Lisp external symbols
DEFINE_SYMBOL(and_allow_other_keys, PACKAGE_CL, "&ALLOW-OTHER-KEYS");
DEFINE_SYMBOL(and_aux, PACKAGE_CL, "&AUX");
DEFINE_SYMBOL(and_body, PACKAGE_CL, "&BODY");
DEFINE_SYMBOL(and_environment, PACKAGE_CL, "&ENVIRONMENT");
DEFINE_SYMBOL(and_key, PACKAGE_CL, "&KEY");
DEFINE_SYMBOL(and_optional, PACKAGE_CL, "&OPTIONAL");
DEFINE_SYMBOL(and_rest, PACKAGE_CL, "&REST");
DEFINE_SYMBOL(and_whole, PACKAGE_CL, "&WHOLE");
DEFINE_SYMBOL(star, PACKAGE_CL, "*");
DEFINE_SYMBOL(star_star, PACKAGE_CL, "**");
DEFINE_SYMBOL(star_star_star, PACKAGE_CL, "***");
DEFINE_SYMBOL(break_on_signals, PACKAGE_CL, "*BREAK-ON-SIGNALS*");
DEFINE_SYMBOL(_compile_file_pathname_, PACKAGE_CL, "*COMPILE-FILE-PATHNAME*");
DEFINE_SYMBOL(compile_file_truename, PACKAGE_CL, "*COMPILE-FILE-TRUENAME*");
DEFINE_SYMBOL(compile_print, PACKAGE_CL, "*COMPILE-PRINT*");
DEFINE_SYMBOL(compile_verbose, PACKAGE_CL, "*COMPILE-VERBOSE*");
DEFINE_SYMBOL(debug_io, PACKAGE_CL, "*DEBUG-IO*");
DEFINE_SYMBOL(debugger_hook, PACKAGE_CL, "*DEBUGGER-HOOK*");
DEFINE_SYMBOL(default_pathname_defaults, PACKAGE_CL, "*DEFAULT-PATHNAME-DEFAULTS*");
DEFINE_SYMBOL(error_output, PACKAGE_CL, "*ERROR-OUTPUT*");
DEFINE_SYMBOL(features, PACKAGE_CL, "*FEATURES*");
DEFINE_SYMBOL(gensym_counter, PACKAGE_CL, "*GENSYM-COUNTER*");
DEFINE_SYMBOL(load_pathname, PACKAGE_CL, "*LOAD-PATHNAME*");
DEFINE_SYMBOL(load_print, PACKAGE_CL, "*LOAD-PRINT*");
DEFINE_SYMBOL(load_truename, PACKAGE_CL, "*LOAD-TRUENAME*");
DEFINE_SYMBOL(load_verbose, PACKAGE_CL, "*LOAD-VERBOSE*");
DEFINE_SYMBOL(macroexpand_hook, PACKAGE_CL, "*MACROEXPAND-HOOK*");
DEFINE_SYMBOL(modules, PACKAGE_CL, "*MODULES*");
DEFINE_SYMBOL(current_package, PACKAGE_CL, "*PACKAGE*");
DEFINE_SYMBOL(print_array, PACKAGE_CL, "*PRINT-ARRAY*");
DEFINE_SYMBOL(print_base, PACKAGE_CL, "*PRINT-BASE*");
DEFINE_SYMBOL(print_case, PACKAGE_CL, "*PRINT-CASE*");
DEFINE_SYMBOL(print_circle, PACKAGE_CL, "*PRINT-CIRCLE*");
DEFINE_SYMBOL(print_escape, PACKAGE_CL, "*PRINT-ESCAPE*");
DEFINE_SYMBOL(print_gensym, PACKAGE_CL, "*PRINT-GENSYM*");
DEFINE_SYMBOL(print_length, PACKAGE_CL, "*PRINT-LENGTH*");
DEFINE_SYMBOL(print_level, PACKAGE_CL, "*PRINT-LEVEL*");
DEFINE_SYMBOL(print_lines, PACKAGE_CL, "*PRINT-LINES*");
DEFINE_SYMBOL(print_miser_width, PACKAGE_CL, "*PRINT-MISER-WIDTH*");
DEFINE_SYMBOL(print_pprint_dispatch, PACKAGE_CL, "*PRINT-PPRINT-DISPATCH*");
DEFINE_SYMBOL(print_pretty, PACKAGE_CL, "*PRINT-PRETTY*");
DEFINE_SYMBOL(print_radix, PACKAGE_CL, "*PRINT-RADIX*");
DEFINE_SYMBOL(print_readably, PACKAGE_CL, "*PRINT-READABLY*");
DEFINE_SYMBOL(print_right_margin, PACKAGE_CL, "*PRINT-RIGHT-MARGIN*");
DEFINE_SYMBOL(query_io, PACKAGE_CL, "*QUERY-IO*");
DEFINE_SYMBOL(_random_state_, PACKAGE_CL, "*RANDOM-STATE*");
DEFINE_SYMBOL(read_base, PACKAGE_CL, "*READ-BASE*");
DEFINE_SYMBOL(read_default_float_format, PACKAGE_CL, "*READ-DEFAULT-FLOAT-FORMAT*");
DEFINE_SYMBOL(read_eval, PACKAGE_CL, "*READ-EVAL*");
DEFINE_SYMBOL(read_suppress, PACKAGE_CL, "*READ-SUPPRESS*");
DEFINE_SYMBOL(current_readtable, PACKAGE_CL, "*READTABLE*");
DEFINE_SYMBOL(standard_input, PACKAGE_CL, "*STANDARD-INPUT*");
DEFINE_SYMBOL(standard_output, PACKAGE_CL, "*STANDARD-OUTPUT*");
DEFINE_SYMBOL(terminal_io, PACKAGE_CL, "*TERMINAL-IO*");
DEFINE_SYMBOL(trace_output, PACKAGE_CL, "*TRACE-OUTPUT*");
DEFINE_SYMBOL(plus, PACKAGE_CL, "+");
DEFINE_SYMBOL(plus_plus, PACKAGE_CL, "++");
DEFINE_SYMBOL(plus_plus_plus, PACKAGE_CL, "+++");
DEFINE_SYMBOL(minus, PACKAGE_CL, "-");
DEFINE_SYMBOL(slash, PACKAGE_CL, "/");
DEFINE_SYMBOL(slash_slash, PACKAGE_CL, "//");
DEFINE_SYMBOL(slash_slash_slash, PACKAGE_CL, "///");
DEFINE_SYMBOL(not_equals, PACKAGE_CL, "/=");
DEFINE_SYMBOL(one_plus, PACKAGE_CL, "1+");
DEFINE_SYMBOL(one_minus, PACKAGE_CL, "1-");
DEFINE_SYMBOL(lt, PACKAGE_CL, "<");
DEFINE_SYMBOL(le, PACKAGE_CL, "<=");
DEFINE_SYMBOL(equals, PACKAGE_CL, "=");
DEFINE_SYMBOL(gt, PACKAGE_CL, ">");
DEFINE_SYMBOL(ge, PACKAGE_CL, ">=");
DEFINE_SYMBOL(abort, PACKAGE_CL, "ABORT");
DEFINE_SYMBOL(abs, PACKAGE_CL, "ABS");
DEFINE_SYMBOL(acons, PACKAGE_CL, "ACONS");
DEFINE_SYMBOL(acos, PACKAGE_CL, "ACOS");
DEFINE_SYMBOL(acosh, PACKAGE_CL, "ACOSH");
DEFINE_SYMBOL(add_method, PACKAGE_CL, "ADD-METHOD");
DEFINE_SYMBOL(adjoin, PACKAGE_CL, "ADJOIN");
DEFINE_SYMBOL(adjust_array, PACKAGE_CL, "ADJUST-ARRAY");
DEFINE_SYMBOL(adjustable_array_p, PACKAGE_CL, "ADJUSTABLE-ARRAY-P");
DEFINE_SYMBOL(allocate_instance, PACKAGE_CL, "ALLOCATE-INSTANCE");
DEFINE_SYMBOL(alpha_char_p, PACKAGE_CL, "ALPHA-CHAR-P");
DEFINE_SYMBOL(alphanumericp, PACKAGE_CL, "ALPHANUMERICP");
DEFINE_SYMBOL(and, PACKAGE_CL, "AND");
DEFINE_SYMBOL(append, PACKAGE_CL, "APPEND");
DEFINE_SYMBOL(apply, PACKAGE_CL, "APPLY");
DEFINE_SYMBOL(apropos, PACKAGE_CL, "APROPOS");
DEFINE_SYMBOL(apropos_list, PACKAGE_CL, "APROPOS-LIST");
DEFINE_SYMBOL(aref, PACKAGE_CL, "AREF");
DEFINE_SYMBOL(arithmetic_error, PACKAGE_CL, "ARITHMETIC-ERROR");
DEFINE_SYMBOL(arithmetic_error_operands, PACKAGE_CL, "ARITHMETIC-ERROR-OPERANDS");
DEFINE_SYMBOL(arithmetic_error_operation, PACKAGE_CL, "ARITHMETIC-ERROR-OPERATION");
DEFINE_SYMBOL(array, PACKAGE_CL, "ARRAY");
DEFINE_SYMBOL(array_dimension, PACKAGE_CL, "ARRAY-DIMENSION");
DEFINE_SYMBOL(array_dimension_limit, PACKAGE_CL, "ARRAY-DIMENSION-LIMIT");
DEFINE_SYMBOL(array_dimensions, PACKAGE_CL, "ARRAY-DIMENSIONS");
DEFINE_SYMBOL(array_displacement, PACKAGE_CL, "ARRAY-DISPLACEMENT");
DEFINE_SYMBOL(array_element_type, PACKAGE_CL, "ARRAY-ELEMENT-TYPE");
DEFINE_SYMBOL(array_has_fill_pointer_p, PACKAGE_CL, "ARRAY-HAS-FILL-POINTER-P");
DEFINE_SYMBOL(array_in_bounds_p, PACKAGE_CL, "ARRAY-IN-BOUNDS-P");
DEFINE_SYMBOL(array_rank, PACKAGE_CL, "ARRAY-RANK");
DEFINE_SYMBOL(array_rank_limit, PACKAGE_CL, "ARRAY-RANK-LIMIT");
DEFINE_SYMBOL(array_row_major_index, PACKAGE_CL, "ARRAY-ROW-MAJOR-INDEX");
DEFINE_SYMBOL(array_total_size, PACKAGE_CL, "ARRAY-TOTAL-SIZE");
DEFINE_SYMBOL(array_total_size_limit, PACKAGE_CL, "ARRAY-TOTAL-SIZE-LIMIT");
DEFINE_SYMBOL(arrayp, PACKAGE_CL, "ARRAYP");
DEFINE_SYMBOL(ash, PACKAGE_CL, "ASH");
DEFINE_SYMBOL(asin, PACKAGE_CL, "ASIN");
DEFINE_SYMBOL(asinh, PACKAGE_CL, "ASINH");
DEFINE_SYMBOL(assert, PACKAGE_CL, "ASSERT");
DEFINE_SYMBOL(assoc, PACKAGE_CL, "ASSOC");
DEFINE_SYMBOL(assoc_if, PACKAGE_CL, "ASSOC-IF");
DEFINE_SYMBOL(assoc_if_not, PACKAGE_CL, "ASSOC-IF-NOT");
DEFINE_SYMBOL(atan, PACKAGE_CL, "ATAN");
DEFINE_SYMBOL(atanh, PACKAGE_CL, "ATANH");
DEFINE_SYMBOL(atom, PACKAGE_CL, "ATOM");
DEFINE_SYMBOL(base_char, PACKAGE_CL, "BASE-CHAR");
DEFINE_SYMBOL(base_string, PACKAGE_CL, "BASE-STRING");
DEFINE_SYMBOL(bignum, PACKAGE_CL, "BIGNUM");
DEFINE_SYMBOL(bit, PACKAGE_CL, "BIT");
DEFINE_SYMBOL(bit_and, PACKAGE_CL, "BIT-AND");
DEFINE_SYMBOL(bit_andc1, PACKAGE_CL, "BIT-ANDC1");
DEFINE_SYMBOL(bit_andc2, PACKAGE_CL, "BIT-ANDC2");
DEFINE_SYMBOL(bit_eqv, PACKAGE_CL, "BIT-EQV");
DEFINE_SYMBOL(bit_ior, PACKAGE_CL, "BIT-IOR");
DEFINE_SYMBOL(bit_nand, PACKAGE_CL, "BIT-NAND");
DEFINE_SYMBOL(bit_nor, PACKAGE_CL, "BIT-NOR");
DEFINE_SYMBOL(bit_not, PACKAGE_CL, "BIT-NOT");
DEFINE_SYMBOL(bit_orc1, PACKAGE_CL, "BIT-ORC1");
DEFINE_SYMBOL(bit_orc2, PACKAGE_CL, "BIT-ORC2");
DEFINE_SYMBOL(bit_vector, PACKAGE_CL, "BIT-VECTOR");
DEFINE_SYMBOL(bit_vector_p, PACKAGE_CL, "BIT-VECTOR-P");
DEFINE_SYMBOL(bit_xor, PACKAGE_CL, "BIT-XOR");
DEFINE_SYMBOL(block, PACKAGE_CL, "BLOCK");
DEFINE_SYMBOL(boole, PACKAGE_CL, "BOOLE");
DEFINE_SYMBOL(boole_1, PACKAGE_CL, "BOOLE-1");
DEFINE_SYMBOL(boole_2, PACKAGE_CL, "BOOLE-2");
DEFINE_SYMBOL(boole_and, PACKAGE_CL, "BOOLE-AND");
DEFINE_SYMBOL(boole_andc1, PACKAGE_CL, "BOOLE-ANDC1");
DEFINE_SYMBOL(boole_andc2, PACKAGE_CL, "BOOLE-ANDC2");
DEFINE_SYMBOL(boole_c1, PACKAGE_CL, "BOOLE-C1");
DEFINE_SYMBOL(boole_c2, PACKAGE_CL, "BOOLE-C2");
DEFINE_SYMBOL(boole_clr, PACKAGE_CL, "BOOLE-CLR");
DEFINE_SYMBOL(boole_eqv, PACKAGE_CL, "BOOLE-EQV");
DEFINE_SYMBOL(boole_ior, PACKAGE_CL, "BOOLE-IOR");
DEFINE_SYMBOL(boole_nand, PACKAGE_CL, "BOOLE-NAND");
DEFINE_SYMBOL(boole_nor, PACKAGE_CL, "BOOLE-NOR");
DEFINE_SYMBOL(boole_orc1, PACKAGE_CL, "BOOLE-ORC1");
DEFINE_SYMBOL(boole_orc2, PACKAGE_CL, "BOOLE-ORC2");
DEFINE_SYMBOL(boole_set, PACKAGE_CL, "BOOLE-SET");
DEFINE_SYMBOL(boole_xor, PACKAGE_CL, "BOOLE-XOR");
DEFINE_SYMBOL(boolean, PACKAGE_CL, "BOOLEAN");
DEFINE_SYMBOL(both_case_p, PACKAGE_CL, "BOTH-CASE-P");
DEFINE_SYMBOL(boundp, PACKAGE_CL, "BOUNDP");
DEFINE_SYMBOL(break, PACKAGE_CL, "BREAK");
DEFINE_SYMBOL(broadcast_stream, PACKAGE_CL, "BROADCAST-STREAM");
DEFINE_SYMBOL(broadcast_stream_streams, PACKAGE_CL, "BROADCAST-STREAM-STREAMS");
DEFINE_SYMBOL(built_in_class, PACKAGE_CL, "BUILT-IN-CLASS");
DEFINE_SYMBOL(butlast, PACKAGE_CL, "BUTLAST");
DEFINE_SYMBOL(byte, PACKAGE_CL, "BYTE");
DEFINE_SYMBOL(byte_position, PACKAGE_CL, "BYTE-POSITION");
DEFINE_SYMBOL(byte_size, PACKAGE_CL, "BYTE-SIZE");
DEFINE_SYMBOL(caaaar, PACKAGE_CL, "CAAAAR");
DEFINE_SYMBOL(caaadr, PACKAGE_CL, "CAAADR");
DEFINE_SYMBOL(caaar, PACKAGE_CL, "CAAAR");
DEFINE_SYMBOL(caadar, PACKAGE_CL, "CAADAR");
DEFINE_SYMBOL(caaddr, PACKAGE_CL, "CAADDR");
DEFINE_SYMBOL(caadr, PACKAGE_CL, "CAADR");
DEFINE_SYMBOL(caar, PACKAGE_CL, "CAAR");
DEFINE_SYMBOL(cadaar, PACKAGE_CL, "CADAAR");
DEFINE_SYMBOL(cadadr, PACKAGE_CL, "CADADR");
DEFINE_SYMBOL(cadar, PACKAGE_CL, "CADAR");
DEFINE_SYMBOL(caddar, PACKAGE_CL, "CADDAR");
DEFINE_SYMBOL(cadddr, PACKAGE_CL, "CADDDR");
DEFINE_SYMBOL(caddr, PACKAGE_CL, "CADDR");
DEFINE_SYMBOL(cadr, PACKAGE_CL, "CADR");
DEFINE_SYMBOL(call_arguments_limit, PACKAGE_CL, "CALL-ARGUMENTS-LIMIT");
DEFINE_SYMBOL(call_method, PACKAGE_CL, "CALL-METHOD");
DEFINE_SYMBOL(call_next_method, PACKAGE_CL, "CALL-NEXT-METHOD");
DEFINE_SYMBOL(car, PACKAGE_CL, "CAR");
DEFINE_SYMBOL(case, PACKAGE_CL, "CASE");
DEFINE_SYMBOL(catch, PACKAGE_CL, "CATCH");
DEFINE_SYMBOL(ccase, PACKAGE_CL, "CCASE");
DEFINE_SYMBOL(cdaaar, PACKAGE_CL, "CDAAAR");
DEFINE_SYMBOL(cdaadr, PACKAGE_CL, "CDAADR");
DEFINE_SYMBOL(cdaar, PACKAGE_CL, "CDAAR");
DEFINE_SYMBOL(cdadar, PACKAGE_CL, "CDADAR");
DEFINE_SYMBOL(cdaddr, PACKAGE_CL, "CDADDR");
DEFINE_SYMBOL(cdadr, PACKAGE_CL, "CDADR");
DEFINE_SYMBOL(cdar, PACKAGE_CL, "CDAR");
DEFINE_SYMBOL(cddaar, PACKAGE_CL, "CDDAAR");
DEFINE_SYMBOL(cddadr, PACKAGE_CL, "CDDADR");
DEFINE_SYMBOL(cddar, PACKAGE_CL, "CDDAR");
DEFINE_SYMBOL(cdddar, PACKAGE_CL, "CDDDAR");
DEFINE_SYMBOL(cddddr, PACKAGE_CL, "CDDDDR");
DEFINE_SYMBOL(cdddr, PACKAGE_CL, "CDDDR");
DEFINE_SYMBOL(cddr, PACKAGE_CL, "CDDR");
DEFINE_SYMBOL(cdr, PACKAGE_CL, "CDR");
DEFINE_SYMBOL(ceiling, PACKAGE_CL, "CEILING");
DEFINE_SYMBOL(cell_error, PACKAGE_CL, "CELL-ERROR");
DEFINE_SYMBOL(cell_error_name, PACKAGE_CL, "CELL-ERROR-NAME");
DEFINE_SYMBOL(cerror, PACKAGE_CL, "CERROR");
DEFINE_SYMBOL(change_class, PACKAGE_CL, "CHANGE-CLASS");
DEFINE_SYMBOL(char, PACKAGE_CL, "CHAR");
DEFINE_SYMBOL(char_code, PACKAGE_CL, "CHAR-CODE");
DEFINE_SYMBOL(char_code_limit, PACKAGE_CL, "CHAR-CODE-LIMIT");
DEFINE_SYMBOL(char_downcase, PACKAGE_CL, "CHAR-DOWNCASE");
DEFINE_SYMBOL(char_equal, PACKAGE_CL, "CHAR-EQUAL");
DEFINE_SYMBOL(char_greaterp, PACKAGE_CL, "CHAR-GREATERP");
DEFINE_SYMBOL(char_int, PACKAGE_CL, "CHAR-INT");
DEFINE_SYMBOL(char_lessp, PACKAGE_CL, "CHAR-LESSP");
DEFINE_SYMBOL(char_name, PACKAGE_CL, "CHAR-NAME");
DEFINE_SYMBOL(char_not_equal, PACKAGE_CL, "CHAR-NOT-EQUAL");
DEFINE_SYMBOL(char_not_greaterp, PACKAGE_CL, "CHAR-NOT-GREATERP");
DEFINE_SYMBOL(char_not_lessp, PACKAGE_CL, "CHAR-NOT-LESSP");
DEFINE_SYMBOL(char_upcase, PACKAGE_CL, "CHAR-UPCASE");
DEFINE_SYMBOL(char_ne, PACKAGE_CL, "CHAR/=");
DEFINE_SYMBOL(char_lt, PACKAGE_CL, "CHAR<");
DEFINE_SYMBOL(char_le, PACKAGE_CL, "CHAR<=");
DEFINE_SYMBOL(char_e, PACKAGE_CL, "CHAR=");
DEFINE_SYMBOL(char_gt, PACKAGE_CL, "CHAR>");
DEFINE_SYMBOL(char_ge, PACKAGE_CL, "CHAR>=");
DEFINE_SYMBOL(character, PACKAGE_CL, "CHARACTER");
DEFINE_SYMBOL(characterp, PACKAGE_CL, "CHARACTERP");
DEFINE_SYMBOL(check_type, PACKAGE_CL, "CHECK-TYPE");
DEFINE_SYMBOL(cis, PACKAGE_CL, "CIS");
DEFINE_SYMBOL(class, PACKAGE_CL, "CLASS");
DEFINE_SYMBOL(class_name, PACKAGE_CL, "CLASS-NAME");
DEFINE_SYMBOL(class_of, PACKAGE_CL, "CLASS-OF");
DEFINE_SYMBOL(clear_input, PACKAGE_CL, "CLEAR-INPUT");
DEFINE_SYMBOL(clear_output, PACKAGE_CL, "CLEAR-OUTPUT");
DEFINE_SYMBOL(close, PACKAGE_CL, "CLOSE");
DEFINE_SYMBOL(clrhash, PACKAGE_CL, "CLRHASH");
DEFINE_SYMBOL(code_char, PACKAGE_CL, "CODE-CHAR");
DEFINE_SYMBOL(coerce, PACKAGE_CL, "COERCE");
DEFINE_SYMBOL(compilation_speed, PACKAGE_CL, "COMPILATION-SPEED");
DEFINE_SYMBOL(compile, PACKAGE_CL, "COMPILE");
DEFINE_SYMBOL(compile_file, PACKAGE_CL, "COMPILE-FILE");
DEFINE_SYMBOL(compile_file_pathname, PACKAGE_CL, "COMPILE-FILE-PATHNAME");
DEFINE_SYMBOL(compiled_function, PACKAGE_CL, "COMPILED-FUNCTION");
DEFINE_SYMBOL(compiled_function_p, PACKAGE_CL, "COMPILED-FUNCTION-P");
DEFINE_SYMBOL(compiler_macro, PACKAGE_CL, "COMPILER-MACRO");
DEFINE_SYMBOL(compiler_macro_function, PACKAGE_CL, "COMPILER-MACRO-FUNCTION");
DEFINE_SYMBOL(complement, PACKAGE_CL, "COMPLEMENT");
DEFINE_SYMBOL(complex, PACKAGE_CL, "COMPLEX");
DEFINE_SYMBOL(complexp, PACKAGE_CL, "COMPLEXP");
DEFINE_SYMBOL(compute_applicable_methods, PACKAGE_CL, "COMPUTE-APPLICABLE-METHODS");
DEFINE_SYMBOL(compute_restarts, PACKAGE_CL, "COMPUTE-RESTARTS");
DEFINE_SYMBOL(concatenate, PACKAGE_CL, "CONCATENATE");
DEFINE_SYMBOL(concatenated_stream, PACKAGE_CL, "CONCATENATED-STREAM");
DEFINE_SYMBOL(concatenated_stream_streams, PACKAGE_CL, "CONCATENATED-STREAM-STREAMS");
DEFINE_SYMBOL(cond, PACKAGE_CL, "COND");
DEFINE_SYMBOL(condition, PACKAGE_CL, "CONDITION");
DEFINE_SYMBOL(conjugate, PACKAGE_CL, "CONJUGATE");
DEFINE_SYMBOL(cons, PACKAGE_CL, "CONS");
DEFINE_SYMBOL(consp, PACKAGE_CL, "CONSP");
DEFINE_SYMBOL(constantly, PACKAGE_CL, "CONSTANTLY");
DEFINE_SYMBOL(constantp, PACKAGE_CL, "CONSTANTP");
DEFINE_SYMBOL(continue, PACKAGE_CL, "CONTINUE");
DEFINE_SYMBOL(control_error, PACKAGE_CL, "CONTROL-ERROR");
DEFINE_SYMBOL(copy_alist, PACKAGE_CL, "COPY-ALIST");
DEFINE_SYMBOL(copy_list, PACKAGE_CL, "COPY-LIST");
DEFINE_SYMBOL(copy_pprint_dispatch, PACKAGE_CL, "COPY-PPRINT-DISPATCH");
DEFINE_SYMBOL(copy_readtable, PACKAGE_CL, "COPY-READTABLE");
DEFINE_SYMBOL(copy_seq, PACKAGE_CL, "COPY-SEQ");
DEFINE_SYMBOL(copy_structure, PACKAGE_CL, "COPY-STRUCTURE");
DEFINE_SYMBOL(copy_symbol, PACKAGE_CL, "COPY-SYMBOL");
DEFINE_SYMBOL(copy_tree, PACKAGE_CL, "COPY-TREE");
DEFINE_SYMBOL(cos, PACKAGE_CL, "COS");
DEFINE_SYMBOL(cosh, PACKAGE_CL, "COSH");
DEFINE_SYMBOL(count, PACKAGE_CL, "COUNT");
DEFINE_SYMBOL(count_if, PACKAGE_CL, "COUNT-IF");
DEFINE_SYMBOL(count_if_not, PACKAGE_CL, "COUNT-IF-NOT");
DEFINE_SYMBOL(ctypecase, PACKAGE_CL, "CTYPECASE");
DEFINE_SYMBOL(debug, PACKAGE_CL, "DEBUG");
DEFINE_SYMBOL(decf, PACKAGE_CL, "DECF");
DEFINE_SYMBOL(declaim, PACKAGE_CL, "DECLAIM");
DEFINE_SYMBOL(declaration, PACKAGE_CL, "DECLARATION");
DEFINE_SYMBOL(declare, PACKAGE_CL, "DECLARE");
DEFINE_SYMBOL(decode_float, PACKAGE_CL, "DECODE-FLOAT");
DEFINE_SYMBOL(decode_universal_time, PACKAGE_CL, "DECODE-UNIVERSAL-TIME");
DEFINE_SYMBOL(defclass, PACKAGE_CL, "DEFCLASS");
DEFINE_SYMBOL(defconstant, PACKAGE_CL, "DEFCONSTANT");
DEFINE_SYMBOL(defgeneric, PACKAGE_CL, "DEFGENERIC");
DEFINE_SYMBOL(define_compiler_macro, PACKAGE_CL, "DEFINE-COMPILER-MACRO");
DEFINE_SYMBOL(define_condition, PACKAGE_CL, "DEFINE-CONDITION");
DEFINE_SYMBOL(define_method_combination, PACKAGE_CL, "DEFINE-METHOD-COMBINATION");
DEFINE_SYMBOL(define_modify_macro, PACKAGE_CL, "DEFINE-MODIFY-MACRO");
DEFINE_SYMBOL(define_setf_expander, PACKAGE_CL, "DEFINE-SETF-EXPANDER");
DEFINE_SYMBOL(define_symbol_macro, PACKAGE_CL, "DEFINE-SYMBOL-MACRO");
DEFINE_SYMBOL(defmacro, PACKAGE_CL, "DEFMACRO");
DEFINE_SYMBOL(defmethod, PACKAGE_CL, "DEFMETHOD");
DEFINE_SYMBOL(defpackage, PACKAGE_CL, "DEFPACKAGE");
DEFINE_SYMBOL(defparameter, PACKAGE_CL, "DEFPARAMETER");
DEFINE_SYMBOL(defsetf, PACKAGE_CL, "DEFSETF");
DEFINE_SYMBOL(defstruct, PACKAGE_CL, "DEFSTRUCT");
DEFINE_SYMBOL(deftype, PACKAGE_CL, "DEFTYPE");
DEFINE_SYMBOL(defun, PACKAGE_CL, "DEFUN");
DEFINE_SYMBOL(defvar, PACKAGE_CL, "DEFVAR");
DEFINE_SYMBOL(delete, PACKAGE_CL, "DELETE");
DEFINE_SYMBOL(delete_duplicates, PACKAGE_CL, "DELETE-DUPLICATES");
DEFINE_SYMBOL(delete_file, PACKAGE_CL, "DELETE-FILE");
DEFINE_SYMBOL(delete_if, PACKAGE_CL, "DELETE-IF");
DEFINE_SYMBOL(delete_if_not, PACKAGE_CL, "DELETE-IF-NOT");
DEFINE_SYMBOL(delete_package, PACKAGE_CL, "DELETE-PACKAGE");
DEFINE_SYMBOL(denominator, PACKAGE_CL, "DENOMINATOR");
DEFINE_SYMBOL(deposit_field, PACKAGE_CL, "DEPOSIT-FIELD");
DEFINE_SYMBOL(describe, PACKAGE_CL, "DESCRIBE");
DEFINE_SYMBOL(describe_object, PACKAGE_CL, "DESCRIBE-OBJECT");
DEFINE_SYMBOL(destructuring_bind, PACKAGE_CL, "DESTRUCTURING-BIND");
DEFINE_SYMBOL(digit_char, PACKAGE_CL, "DIGIT-CHAR");
DEFINE_SYMBOL(digit_char_p, PACKAGE_CL, "DIGIT-CHAR-P");
DEFINE_SYMBOL(directory, PACKAGE_CL, "DIRECTORY");
DEFINE_SYMBOL(directory_namestring, PACKAGE_CL, "DIRECTORY-NAMESTRING");
DEFINE_SYMBOL(disassemble, PACKAGE_CL, "DISASSEMBLE");
DEFINE_SYMBOL(division_by_zero, PACKAGE_CL, "DIVISION-BY-ZERO");
DEFINE_SYMBOL(do, PACKAGE_CL, "DO");
DEFINE_SYMBOL(do_star, PACKAGE_CL, "DO*");
DEFINE_SYMBOL(do_all_symbols, PACKAGE_CL, "DO-ALL-SYMBOLS");
DEFINE_SYMBOL(do_external_symbols, PACKAGE_CL, "DO-EXTERNAL-SYMBOLS");
DEFINE_SYMBOL(do_symbols, PACKAGE_CL, "DO-SYMBOLS");
DEFINE_SYMBOL(documentation, PACKAGE_CL, "DOCUMENTATION");
DEFINE_SYMBOL(dolist, PACKAGE_CL, "DOLIST");
DEFINE_SYMBOL(dotimes, PACKAGE_CL, "DOTIMES");
DEFINE_SYMBOL(double_float, PACKAGE_CL, "DOUBLE-FLOAT");
DEFINE_SYMBOL(double_float_epsilon, PACKAGE_CL, "DOUBLE-FLOAT-EPSILON");
DEFINE_SYMBOL(double_float_negative_epsilon, PACKAGE_CL, "DOUBLE-FLOAT-NEGATIVE-EPSILON");
DEFINE_SYMBOL(dpb, PACKAGE_CL, "DPB");
DEFINE_SYMBOL(dribble, PACKAGE_CL, "DRIBBLE");
DEFINE_SYMBOL(dynamic_extent, PACKAGE_CL, "DYNAMIC-EXTENT");
DEFINE_SYMBOL(ecase, PACKAGE_CL, "ECASE");
DEFINE_SYMBOL(echo_stream, PACKAGE_CL, "ECHO-STREAM");
DEFINE_SYMBOL(echo_stream_input_stream, PACKAGE_CL, "ECHO-STREAM-INPUT-STREAM");
DEFINE_SYMBOL(echo_stream_output_stream, PACKAGE_CL, "ECHO-STREAM-OUTPUT-STREAM");
DEFINE_SYMBOL(ed, PACKAGE_CL, "ED");
DEFINE_SYMBOL(eighth, PACKAGE_CL, "EIGHTH");
DEFINE_SYMBOL(elt, PACKAGE_CL, "ELT");
DEFINE_SYMBOL(encode_universal_time, PACKAGE_CL, "ENCODE-UNIVERSAL-TIME");
DEFINE_SYMBOL(end_of_file, PACKAGE_CL, "END-OF-FILE");
DEFINE_SYMBOL(endp, PACKAGE_CL, "ENDP");
DEFINE_SYMBOL(enough_namestring, PACKAGE_CL, "ENOUGH-NAMESTRING");
DEFINE_SYMBOL(ensure_directories_exist, PACKAGE_CL, "ENSURE-DIRECTORIES-EXIST");
DEFINE_SYMBOL(ensure_generic_function, PACKAGE_CL, "ENSURE-GENERIC-FUNCTION");
DEFINE_SYMBOL(eq, PACKAGE_CL, "EQ");
DEFINE_SYMBOL(eql, PACKAGE_CL, "EQL");
DEFINE_SYMBOL(equal, PACKAGE_CL, "EQUAL");
DEFINE_SYMBOL(equalp, PACKAGE_CL, "EQUALP");
DEFINE_SYMBOL(error, PACKAGE_CL, "ERROR");
DEFINE_SYMBOL(etypecase, PACKAGE_CL, "ETYPECASE");
DEFINE_SYMBOL(eval, PACKAGE_CL, "EVAL");
DEFINE_SYMBOL(eval_when, PACKAGE_CL, "EVAL-WHEN");
DEFINE_SYMBOL(evenp, PACKAGE_CL, "EVENP");
DEFINE_SYMBOL(every, PACKAGE_CL, "EVERY");
DEFINE_SYMBOL(exp, PACKAGE_CL, "EXP");
DEFINE_SYMBOL(export, PACKAGE_CL, "EXPORT");
DEFINE_SYMBOL(expt, PACKAGE_CL, "EXPT");
DEFINE_SYMBOL(extended_char, PACKAGE_CL, "EXTENDED-CHAR");
DEFINE_SYMBOL(fboundp, PACKAGE_CL, "FBOUNDP");
DEFINE_SYMBOL(fceiling, PACKAGE_CL, "FCEILING");
DEFINE_SYMBOL(fdefinition, PACKAGE_CL, "FDEFINITION");
DEFINE_SYMBOL(ffloor, PACKAGE_CL, "FFLOOR");
DEFINE_SYMBOL(fifth, PACKAGE_CL, "FIFTH");
DEFINE_SYMBOL(file_author, PACKAGE_CL, "FILE-AUTHOR");
DEFINE_SYMBOL(file_error, PACKAGE_CL, "FILE-ERROR");
DEFINE_SYMBOL(file_error_pathname, PACKAGE_CL, "FILE-ERROR-PATHNAME");
DEFINE_SYMBOL(file_length, PACKAGE_CL, "FILE-LENGTH");
DEFINE_SYMBOL(file_namestring, PACKAGE_CL, "FILE-NAMESTRING");
DEFINE_SYMBOL(file_position, PACKAGE_CL, "FILE-POSITION");
DEFINE_SYMBOL(file_stream, PACKAGE_CL, "FILE-STREAM");
DEFINE_SYMBOL(file_string_length, PACKAGE_CL, "FILE-STRING-LENGTH");
DEFINE_SYMBOL(file_write_date, PACKAGE_CL, "FILE-WRITE-DATE");
DEFINE_SYMBOL(fill, PACKAGE_CL, "FILL");
DEFINE_SYMBOL(fill_pointer, PACKAGE_CL, "FILL-POINTER");
DEFINE_SYMBOL(find, PACKAGE_CL, "FIND");
DEFINE_SYMBOL(find_all_symbols, PACKAGE_CL, "FIND-ALL-SYMBOLS");
DEFINE_SYMBOL(find_class, PACKAGE_CL, "FIND-CLASS");
DEFINE_SYMBOL(find_if, PACKAGE_CL, "FIND-IF");
DEFINE_SYMBOL(find_if_not, PACKAGE_CL, "FIND-IF-NOT");
DEFINE_SYMBOL(find_method, PACKAGE_CL, "FIND-METHOD");
DEFINE_SYMBOL(find_package, PACKAGE_CL, "FIND-PACKAGE");
DEFINE_SYMBOL(find_restart, PACKAGE_CL, "FIND-RESTART");
DEFINE_SYMBOL(find_symbol, PACKAGE_CL, "FIND-SYMBOL");
DEFINE_SYMBOL(finish_output, PACKAGE_CL, "FINISH-OUTPUT");
DEFINE_SYMBOL(first, PACKAGE_CL, "FIRST");
DEFINE_SYMBOL(fixnum, PACKAGE_CL, "FIXNUM");
DEFINE_SYMBOL(flet, PACKAGE_CL, "FLET");
DEFINE_SYMBOL(float, PACKAGE_CL, "FLOAT");
DEFINE_SYMBOL(float_digits, PACKAGE_CL, "FLOAT-DIGITS");
DEFINE_SYMBOL(float_precision, PACKAGE_CL, "FLOAT-PRECISION");
DEFINE_SYMBOL(float_radix, PACKAGE_CL, "FLOAT-RADIX");
DEFINE_SYMBOL(float_sign, PACKAGE_CL, "FLOAT-SIGN");
DEFINE_SYMBOL(floating_point_inexact, PACKAGE_CL, "FLOATING-POINT-INEXACT");
DEFINE_SYMBOL(floating_point_invalid_operation, PACKAGE_CL, "FLOATING-POINT-INVALID-OPERATION");
DEFINE_SYMBOL(floating_point_overflow, PACKAGE_CL, "FLOATING-POINT-OVERFLOW");
DEFINE_SYMBOL(floating_point_underflow, PACKAGE_CL, "FLOATING-POINT-UNDERFLOW");
DEFINE_SYMBOL(floatp, PACKAGE_CL, "FLOATP");
DEFINE_SYMBOL(floor, PACKAGE_CL, "FLOOR");
DEFINE_SYMBOL(fmakunbound, PACKAGE_CL, "FMAKUNBOUND");
DEFINE_SYMBOL(force_output, PACKAGE_CL, "FORCE-OUTPUT");
DEFINE_SYMBOL(format, PACKAGE_CL, "FORMAT");
DEFINE_SYMBOL(formatter, PACKAGE_CL, "FORMATTER");
DEFINE_SYMBOL(fourth, PACKAGE_CL, "FOURTH");
DEFINE_SYMBOL(fresh_line, PACKAGE_CL, "FRESH-LINE");
DEFINE_SYMBOL(fround, PACKAGE_CL, "FROUND");
DEFINE_SYMBOL(ftruncate, PACKAGE_CL, "FTRUNCATE");
DEFINE_SYMBOL(ftype, PACKAGE_CL, "FTYPE");
DEFINE_SYMBOL(funcall, PACKAGE_CL, "FUNCALL");
DEFINE_SYMBOL(function, PACKAGE_CL, "FUNCTION");
DEFINE_SYMBOL(function_keywords, PACKAGE_CL, "FUNCTION-KEYWORDS");
DEFINE_SYMBOL(function_lambda_expression, PACKAGE_CL, "FUNCTION-LAMBDA-EXPRESSION");
DEFINE_SYMBOL(functionp, PACKAGE_CL, "FUNCTIONP");
DEFINE_SYMBOL(gcd, PACKAGE_CL, "GCD");
DEFINE_SYMBOL(generic_function, PACKAGE_CL, "GENERIC-FUNCTION");
DEFINE_SYMBOL(gensym, PACKAGE_CL, "GENSYM");
DEFINE_SYMBOL(gentemp, PACKAGE_CL, "GENTEMP");
DEFINE_SYMBOL(get, PACKAGE_CL, "GET");
DEFINE_SYMBOL(get_decoded_time, PACKAGE_CL, "GET-DECODED-TIME");
DEFINE_SYMBOL(get_dispatch_macro_character, PACKAGE_CL, "GET-DISPATCH-MACRO-CHARACTER");
DEFINE_SYMBOL(get_internal_real_time, PACKAGE_CL, "GET-INTERNAL-REAL-TIME");
DEFINE_SYMBOL(get_internal_run_time, PACKAGE_CL, "GET-INTERNAL-RUN-TIME");
DEFINE_SYMBOL(get_macro_character, PACKAGE_CL, "GET-MACRO-CHARACTER");
DEFINE_SYMBOL(get_output_stream_string, PACKAGE_CL, "GET-OUTPUT-STREAM-STRING");
DEFINE_SYMBOL(get_properties, PACKAGE_CL, "GET-PROPERTIES");
DEFINE_SYMBOL(get_setf_expansion, PACKAGE_CL, "GET-SETF-EXPANSION");
DEFINE_SYMBOL(get_universal_time, PACKAGE_CL, "GET-UNIVERSAL-TIME");
DEFINE_SYMBOL(getf, PACKAGE_CL, "GETF");
DEFINE_SYMBOL(gethash, PACKAGE_CL, "GETHASH");
DEFINE_SYMBOL(go, PACKAGE_CL, "GO");
DEFINE_SYMBOL(graphic_char_p, PACKAGE_CL, "GRAPHIC-CHAR-P");
DEFINE_SYMBOL(handler_bind, PACKAGE_CL, "HANDLER-BIND");
DEFINE_SYMBOL(handler_case, PACKAGE_CL, "HANDLER-CASE");
DEFINE_SYMBOL(hash_table, PACKAGE_CL, "HASH-TABLE");
DEFINE_SYMBOL(hash_table_count, PACKAGE_CL, "HASH-TABLE-COUNT");
DEFINE_SYMBOL(hash_table_p, PACKAGE_CL, "HASH-TABLE-P");
DEFINE_SYMBOL(hash_table_rehash_size, PACKAGE_CL, "HASH-TABLE-REHASH-SIZE");
DEFINE_SYMBOL(hash_table_rehash_threshold, PACKAGE_CL, "HASH-TABLE-REHASH-THRESHOLD");
DEFINE_SYMBOL(hash_table_size, PACKAGE_CL, "HASH-TABLE-SIZE");
DEFINE_SYMBOL(hash_table_test, PACKAGE_CL, "HASH-TABLE-TEST");
DEFINE_SYMBOL(host_namestring, PACKAGE_CL, "HOST-NAMESTRING");
DEFINE_SYMBOL(identity, PACKAGE_CL, "IDENTITY");
DEFINE_SYMBOL(if, PACKAGE_CL, "IF");
DEFINE_SYMBOL(ignorable, PACKAGE_CL, "IGNORABLE");
DEFINE_SYMBOL(ignore, PACKAGE_CL, "IGNORE");
DEFINE_SYMBOL(ignore_errors, PACKAGE_CL, "IGNORE-ERRORS");
DEFINE_SYMBOL(imagpart, PACKAGE_CL, "IMAGPART");
DEFINE_SYMBOL(import, PACKAGE_CL, "IMPORT");
DEFINE_SYMBOL(in_package, PACKAGE_CL, "IN-PACKAGE");
DEFINE_SYMBOL(incf, PACKAGE_CL, "INCF");
DEFINE_SYMBOL(initialize_instance, PACKAGE_CL, "INITIALIZE-INSTANCE");
DEFINE_SYMBOL(inline, PACKAGE_CL, "INLINE");
DEFINE_SYMBOL(input_stream_p, PACKAGE_CL, "INPUT-STREAM-P");
DEFINE_SYMBOL(inspect, PACKAGE_CL, "INSPECT");
DEFINE_SYMBOL(integer, PACKAGE_CL, "INTEGER");
DEFINE_SYMBOL(integer_decode_float, PACKAGE_CL, "INTEGER-DECODE-FLOAT");
DEFINE_SYMBOL(integer_length, PACKAGE_CL, "INTEGER-LENGTH");
DEFINE_SYMBOL(integerp, PACKAGE_CL, "INTEGERP");
DEFINE_SYMBOL(interactive_stream_p, PACKAGE_CL, "INTERACTIVE-STREAM-P");
DEFINE_SYMBOL(intern, PACKAGE_CL, "INTERN");
DEFINE_SYMBOL(internal_time_units_per_second, PACKAGE_CL, "INTERNAL-TIME-UNITS-PER-SECOND");
DEFINE_SYMBOL(intersection, PACKAGE_CL, "INTERSECTION");
DEFINE_SYMBOL(invalid_method_error, PACKAGE_CL, "INVALID-METHOD-ERROR");
DEFINE_SYMBOL(invoke_debugger, PACKAGE_CL, "INVOKE-DEBUGGER");
DEFINE_SYMBOL(invoke_restart, PACKAGE_CL, "INVOKE-RESTART");
DEFINE_SYMBOL(invoke_restart_interactively, PACKAGE_CL, "INVOKE-RESTART-INTERACTIVELY");
DEFINE_SYMBOL(isqrt, PACKAGE_CL, "ISQRT");
DEFINE_SYMBOL(keyword, PACKAGE_CL, "KEYWORD");
DEFINE_SYMBOL(keywordp, PACKAGE_CL, "KEYWORDP");
DEFINE_SYMBOL(labels, PACKAGE_CL, "LABELS");
DEFINE_SYMBOL(lambda, PACKAGE_CL, "LAMBDA");
DEFINE_SYMBOL(lambda_list_keywords, PACKAGE_CL, "LAMBDA-LIST-KEYWORDS");
DEFINE_SYMBOL(lambda_parameters_limit, PACKAGE_CL, "LAMBDA-PARAMETERS-LIMIT");
DEFINE_SYMBOL(last, PACKAGE_CL, "LAST");
DEFINE_SYMBOL(lcm, PACKAGE_CL, "LCM");
DEFINE_SYMBOL(ldb, PACKAGE_CL, "LDB");
DEFINE_SYMBOL(ldb_test, PACKAGE_CL, "LDB-TEST");
DEFINE_SYMBOL(ldiff, PACKAGE_CL, "LDIFF");
DEFINE_SYMBOL(least_negative_double_float, PACKAGE_CL, "LEAST-NEGATIVE-DOUBLE-FLOAT");
DEFINE_SYMBOL(least_negative_long_float, PACKAGE_CL, "LEAST-NEGATIVE-LONG-FLOAT");
DEFINE_SYMBOL(least_negative_normalized_double_float, PACKAGE_CL, "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT");
DEFINE_SYMBOL(least_negative_normalized_long_float, PACKAGE_CL, "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT");
DEFINE_SYMBOL(least_negative_normalized_short_float, PACKAGE_CL, "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT");
DEFINE_SYMBOL(least_negative_normalized_single_float, PACKAGE_CL, "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT");
DEFINE_SYMBOL(least_negative_short_float, PACKAGE_CL, "LEAST-NEGATIVE-SHORT-FLOAT");
DEFINE_SYMBOL(least_negative_single_float, PACKAGE_CL, "LEAST-NEGATIVE-SINGLE-FLOAT");
DEFINE_SYMBOL(least_positive_double_float, PACKAGE_CL, "LEAST-POSITIVE-DOUBLE-FLOAT");
DEFINE_SYMBOL(least_positive_long_float, PACKAGE_CL, "LEAST-POSITIVE-LONG-FLOAT");
DEFINE_SYMBOL(least_positive_normalized_double_float, PACKAGE_CL, "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT");
DEFINE_SYMBOL(least_positive_normalized_long_float, PACKAGE_CL, "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT");
DEFINE_SYMBOL(least_positive_normalized_short_float, PACKAGE_CL, "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT");
DEFINE_SYMBOL(least_positive_normalized_single_float, PACKAGE_CL, "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT");
DEFINE_SYMBOL(least_positive_short_float, PACKAGE_CL, "LEAST-POSITIVE-SHORT-FLOAT");
DEFINE_SYMBOL(least_positive_single_float, PACKAGE_CL, "LEAST-POSITIVE-SINGLE-FLOAT");
DEFINE_SYMBOL(length, PACKAGE_CL, "LENGTH");
DEFINE_SYMBOL(let, PACKAGE_CL, "LET");
DEFINE_SYMBOL(let_star, PACKAGE_CL, "LET*");
DEFINE_SYMBOL(lisp_implementation_type, PACKAGE_CL, "LISP-IMPLEMENTATION-TYPE");
DEFINE_SYMBOL(lisp_implementation_version, PACKAGE_CL, "LISP-IMPLEMENTATION-VERSION");
DEFINE_SYMBOL(list, PACKAGE_CL, "LIST");
DEFINE_SYMBOL(list_star, PACKAGE_CL, "LIST*");
DEFINE_SYMBOL(list_all_packages, PACKAGE_CL, "LIST-ALL-PACKAGES");
DEFINE_SYMBOL(list_length, PACKAGE_CL, "LIST-LENGTH");
DEFINE_SYMBOL(listen, PACKAGE_CL, "LISTEN");
DEFINE_SYMBOL(listp, PACKAGE_CL, "LISTP");
DEFINE_SYMBOL(load, PACKAGE_CL, "LOAD");
DEFINE_SYMBOL(load_logical_pathname_translations, PACKAGE_CL, "LOAD-LOGICAL-PATHNAME-TRANSLATIONS");
DEFINE_SYMBOL(load_time_value, PACKAGE_CL, "LOAD-TIME-VALUE");
DEFINE_SYMBOL(locally, PACKAGE_CL, "LOCALLY");
DEFINE_SYMBOL(log, PACKAGE_CL, "LOG");
DEFINE_SYMBOL(logand, PACKAGE_CL, "LOGAND");
DEFINE_SYMBOL(logandc1, PACKAGE_CL, "LOGANDC1");
DEFINE_SYMBOL(logandc2, PACKAGE_CL, "LOGANDC2");
DEFINE_SYMBOL(logbitp, PACKAGE_CL, "LOGBITP");
DEFINE_SYMBOL(logcount, PACKAGE_CL, "LOGCOUNT");
DEFINE_SYMBOL(logeqv, PACKAGE_CL, "LOGEQV");
DEFINE_SYMBOL(logical_pathname, PACKAGE_CL, "LOGICAL-PATHNAME");
DEFINE_SYMBOL(logical_pathname_translations, PACKAGE_CL, "LOGICAL-PATHNAME-TRANSLATIONS");
DEFINE_SYMBOL(logior, PACKAGE_CL, "LOGIOR");
DEFINE_SYMBOL(lognand, PACKAGE_CL, "LOGNAND");
DEFINE_SYMBOL(lognor, PACKAGE_CL, "LOGNOR");
DEFINE_SYMBOL(lognot, PACKAGE_CL, "LOGNOT");
DEFINE_SYMBOL(logorc1, PACKAGE_CL, "LOGORC1");
DEFINE_SYMBOL(logorc2, PACKAGE_CL, "LOGORC2");
DEFINE_SYMBOL(logtest, PACKAGE_CL, "LOGTEST");
DEFINE_SYMBOL(logxor, PACKAGE_CL, "LOGXOR");
DEFINE_SYMBOL(long_float, PACKAGE_CL, "LONG-FLOAT");
DEFINE_SYMBOL(long_float_epsilon, PACKAGE_CL, "LONG-FLOAT-EPSILON");
DEFINE_SYMBOL(long_float_negative_epsilon, PACKAGE_CL, "LONG-FLOAT-NEGATIVE-EPSILON");
DEFINE_SYMBOL(long_site_name, PACKAGE_CL, "LONG-SITE-NAME");
DEFINE_SYMBOL(loop, PACKAGE_CL, "LOOP");
DEFINE_SYMBOL(loop_finish, PACKAGE_CL, "LOOP-FINISH");
DEFINE_SYMBOL(lower_case_p, PACKAGE_CL, "LOWER-CASE-P");
DEFINE_SYMBOL(machine_instance, PACKAGE_CL, "MACHINE-INSTANCE");
DEFINE_SYMBOL(machine_type, PACKAGE_CL, "MACHINE-TYPE");
DEFINE_SYMBOL(machine_version, PACKAGE_CL, "MACHINE-VERSION");
DEFINE_SYMBOL(macro_function, PACKAGE_CL, "MACRO-FUNCTION");
DEFINE_SYMBOL(macroexpand, PACKAGE_CL, "MACROEXPAND");
DEFINE_SYMBOL(macroexpand_1, PACKAGE_CL, "MACROEXPAND-1");
DEFINE_SYMBOL(macrolet, PACKAGE_CL, "MACROLET");
DEFINE_SYMBOL(make_array, PACKAGE_CL, "MAKE-ARRAY");
DEFINE_SYMBOL(make_broadcast_stream, PACKAGE_CL, "MAKE-BROADCAST-STREAM");
DEFINE_SYMBOL(make_concatenated_stream, PACKAGE_CL, "MAKE-CONCATENATED-STREAM");
DEFINE_SYMBOL(make_condition, PACKAGE_CL, "MAKE-CONDITION");
DEFINE_SYMBOL(make_dispatch_macro_character, PACKAGE_CL, "MAKE-DISPATCH-MACRO-CHARACTER");
DEFINE_SYMBOL(make_echo_stream, PACKAGE_CL, "MAKE-ECHO-STREAM");
DEFINE_SYMBOL(make_hash_table, PACKAGE_CL, "MAKE-HASH-TABLE");
DEFINE_SYMBOL(make_instance, PACKAGE_CL, "MAKE-INSTANCE");
DEFINE_SYMBOL(make_instances_obsolete, PACKAGE_CL, "MAKE-INSTANCES-OBSOLETE");
DEFINE_SYMBOL(make_list, PACKAGE_CL, "MAKE-LIST");
DEFINE_SYMBOL(make_load_form, PACKAGE_CL, "MAKE-LOAD-FORM");
DEFINE_SYMBOL(make_load_form_saving_slots, PACKAGE_CL, "MAKE-LOAD-FORM-SAVING-SLOTS");
DEFINE_SYMBOL(make_method, PACKAGE_CL, "MAKE-METHOD");
DEFINE_SYMBOL(make_package, PACKAGE_CL, "MAKE-PACKAGE");
DEFINE_SYMBOL(make_pathname, PACKAGE_CL, "MAKE-PATHNAME");
DEFINE_SYMBOL(make_random_state, PACKAGE_CL, "MAKE-RANDOM-STATE");
DEFINE_SYMBOL(make_sequence, PACKAGE_CL, "MAKE-SEQUENCE");
DEFINE_SYMBOL(make_string, PACKAGE_CL, "MAKE-STRING");
DEFINE_SYMBOL(make_string_input_stream, PACKAGE_CL, "MAKE-STRING-INPUT-STREAM");
DEFINE_SYMBOL(make_string_output_stream, PACKAGE_CL, "MAKE-STRING-OUTPUT-STREAM");
DEFINE_SYMBOL(make_symbol, PACKAGE_CL, "MAKE-SYMBOL");
DEFINE_SYMBOL(make_synonym_stream, PACKAGE_CL, "MAKE-SYNONYM-STREAM");
DEFINE_SYMBOL(make_two_way_stream, PACKAGE_CL, "MAKE-TWO-WAY-STREAM");
DEFINE_SYMBOL(makunbound, PACKAGE_CL, "MAKUNBOUND");
DEFINE_SYMBOL(map, PACKAGE_CL, "MAP");
DEFINE_SYMBOL(map_into, PACKAGE_CL, "MAP-INTO");
DEFINE_SYMBOL(mapc, PACKAGE_CL, "MAPC");
DEFINE_SYMBOL(mapcan, PACKAGE_CL, "MAPCAN");
DEFINE_SYMBOL(mapcar, PACKAGE_CL, "MAPCAR");
DEFINE_SYMBOL(mapcon, PACKAGE_CL, "MAPCON");
DEFINE_SYMBOL(maphash, PACKAGE_CL, "MAPHASH");
DEFINE_SYMBOL(mapl, PACKAGE_CL, "MAPL");
DEFINE_SYMBOL(maplist, PACKAGE_CL, "MAPLIST");
DEFINE_SYMBOL(mask_field, PACKAGE_CL, "MASK-FIELD");
DEFINE_SYMBOL(max, PACKAGE_CL, "MAX");
DEFINE_SYMBOL(member, PACKAGE_CL, "MEMBER");
DEFINE_SYMBOL(member_if, PACKAGE_CL, "MEMBER-IF");
DEFINE_SYMBOL(member_if_not, PACKAGE_CL, "MEMBER-IF-NOT");
DEFINE_SYMBOL(merge, PACKAGE_CL, "MERGE");
DEFINE_SYMBOL(merge_pathnames, PACKAGE_CL, "MERGE-PATHNAMES");
DEFINE_SYMBOL(method, PACKAGE_CL, "METHOD");
DEFINE_SYMBOL(method_combination, PACKAGE_CL, "METHOD-COMBINATION");
DEFINE_SYMBOL(method_combination_error, PACKAGE_CL, "METHOD-COMBINATION-ERROR");
DEFINE_SYMBOL(method_qualifiers, PACKAGE_CL, "METHOD-QUALIFIERS");
DEFINE_SYMBOL(min, PACKAGE_CL, "MIN");
DEFINE_SYMBOL(minusp, PACKAGE_CL, "MINUSP");
DEFINE_SYMBOL(mismatch, PACKAGE_CL, "MISMATCH");
DEFINE_SYMBOL(mod, PACKAGE_CL, "MOD");
DEFINE_SYMBOL(most_negative_double_float, PACKAGE_CL, "MOST-NEGATIVE-DOUBLE-FLOAT");
DEFINE_SYMBOL(most_negative_fixnum, PACKAGE_CL, "MOST-NEGATIVE-FIXNUM");
DEFINE_SYMBOL(most_negative_long_float, PACKAGE_CL, "MOST-NEGATIVE-LONG-FLOAT");
DEFINE_SYMBOL(most_negative_short_float, PACKAGE_CL, "MOST-NEGATIVE-SHORT-FLOAT");
DEFINE_SYMBOL(most_negative_single_float, PACKAGE_CL, "MOST-NEGATIVE-SINGLE-FLOAT");
DEFINE_SYMBOL(most_positive_double_float, PACKAGE_CL, "MOST-POSITIVE-DOUBLE-FLOAT");
DEFINE_SYMBOL(most_positive_fixnum, PACKAGE_CL, "MOST-POSITIVE-FIXNUM");
DEFINE_SYMBOL(most_positive_long_float, PACKAGE_CL, "MOST-POSITIVE-LONG-FLOAT");
DEFINE_SYMBOL(most_positive_short_float, PACKAGE_CL, "MOST-POSITIVE-SHORT-FLOAT");
DEFINE_SYMBOL(most_positive_single_float, PACKAGE_CL, "MOST-POSITIVE-SINGLE-FLOAT");
DEFINE_SYMBOL(muffle_warning, PACKAGE_CL, "MUFFLE-WARNING");
DEFINE_SYMBOL(multiple_value_bind, PACKAGE_CL, "MULTIPLE-VALUE-BIND");
DEFINE_SYMBOL(multiple_value_call, PACKAGE_CL, "MULTIPLE-VALUE-CALL");
DEFINE_SYMBOL(multiple_value_list, PACKAGE_CL, "MULTIPLE-VALUE-LIST");
DEFINE_SYMBOL(multiple_value_prog1, PACKAGE_CL, "MULTIPLE-VALUE-PROG1");
DEFINE_SYMBOL(multiple_value_setq, PACKAGE_CL, "MULTIPLE-VALUE-SETQ");
DEFINE_SYMBOL(multiple_values_limit, PACKAGE_CL, "MULTIPLE-VALUES-LIMIT");
DEFINE_SYMBOL(name_char, PACKAGE_CL, "NAME-CHAR");
DEFINE_SYMBOL(namestring, PACKAGE_CL, "NAMESTRING");
DEFINE_SYMBOL(nbutlast, PACKAGE_CL, "NBUTLAST");
DEFINE_SYMBOL(nconc, PACKAGE_CL, "NCONC");
DEFINE_SYMBOL(next_method_p, PACKAGE_CL, "NEXT-METHOD-P");
DEFINE_SYMBOL(nintersection, PACKAGE_CL, "NINTERSECTION");
DEFINE_SYMBOL(ninth, PACKAGE_CL, "NINTH");
DEFINE_SYMBOL(no_applicable_method, PACKAGE_CL, "NO-APPLICABLE-METHOD");
DEFINE_SYMBOL(no_next_method, PACKAGE_CL, "NO-NEXT-METHOD");
DEFINE_SYMBOL(not, PACKAGE_CL, "NOT");
DEFINE_SYMBOL(notany, PACKAGE_CL, "NOTANY");
DEFINE_SYMBOL(notevery, PACKAGE_CL, "NOTEVERY");
DEFINE_SYMBOL(notinline, PACKAGE_CL, "NOTINLINE");
DEFINE_SYMBOL(nreconc, PACKAGE_CL, "NRECONC");
DEFINE_SYMBOL(nreverse, PACKAGE_CL, "NREVERSE");
DEFINE_SYMBOL(nset_difference, PACKAGE_CL, "NSET-DIFFERENCE");
DEFINE_SYMBOL(nset_exclusive_or, PACKAGE_CL, "NSET-EXCLUSIVE-OR");
DEFINE_SYMBOL(nstring_capitalize, PACKAGE_CL, "NSTRING-CAPITALIZE");
DEFINE_SYMBOL(nstring_downcase, PACKAGE_CL, "NSTRING-DOWNCASE");
DEFINE_SYMBOL(nstring_upcase, PACKAGE_CL, "NSTRING-UPCASE");
DEFINE_SYMBOL(nsublis, PACKAGE_CL, "NSUBLIS");
DEFINE_SYMBOL(nsubst, PACKAGE_CL, "NSUBST");
DEFINE_SYMBOL(nsubst_if, PACKAGE_CL, "NSUBST-IF");
DEFINE_SYMBOL(nsubst_if_not, PACKAGE_CL, "NSUBST-IF-NOT");
DEFINE_SYMBOL(nsubstitute, PACKAGE_CL, "NSUBSTITUTE");
DEFINE_SYMBOL(nsubstitute_if, PACKAGE_CL, "NSUBSTITUTE-IF");
DEFINE_SYMBOL(nsubstitute_if_not, PACKAGE_CL, "NSUBSTITUTE-IF-NOT");
DEFINE_SYMBOL(nth, PACKAGE_CL, "NTH");
DEFINE_SYMBOL(nth_value, PACKAGE_CL, "NTH-VALUE");
DEFINE_SYMBOL(nthcdr, PACKAGE_CL, "NTHCDR");
DEFINE_SYMBOL(null, PACKAGE_CL, "NULL");
DEFINE_SYMBOL(number, PACKAGE_CL, "NUMBER");
DEFINE_SYMBOL(numberp, PACKAGE_CL, "NUMBERP");
DEFINE_SYMBOL(numerator, PACKAGE_CL, "NUMERATOR");
DEFINE_SYMBOL(nunion, PACKAGE_CL, "NUNION");
DEFINE_SYMBOL(oddp, PACKAGE_CL, "ODDP");
DEFINE_SYMBOL(open, PACKAGE_CL, "OPEN");
DEFINE_SYMBOL(open_stream_p, PACKAGE_CL, "OPEN-STREAM-P");
DEFINE_SYMBOL(optimize, PACKAGE_CL, "OPTIMIZE");
DEFINE_SYMBOL(or, PACKAGE_CL, "OR");
DEFINE_SYMBOL(otherwise, PACKAGE_CL, "OTHERWISE");
DEFINE_SYMBOL(output_stream_p, PACKAGE_CL, "OUTPUT-STREAM-P");
DEFINE_SYMBOL(package, PACKAGE_CL, "PACKAGE");
DEFINE_SYMBOL(package_error, PACKAGE_CL, "PACKAGE-ERROR");
DEFINE_SYMBOL(package_error_package, PACKAGE_CL, "PACKAGE-ERROR-PACKAGE");
DEFINE_SYMBOL(package_name, PACKAGE_CL, "PACKAGE-NAME");
DEFINE_SYMBOL(package_nicknames, PACKAGE_CL, "PACKAGE-NICKNAMES");
DEFINE_SYMBOL(package_shadowing_symbols, PACKAGE_CL, "PACKAGE-SHADOWING-SYMBOLS");
DEFINE_SYMBOL(package_use_list, PACKAGE_CL, "PACKAGE-USE-LIST");
DEFINE_SYMBOL(package_used_by_list, PACKAGE_CL, "PACKAGE-USED-BY-LIST");
DEFINE_SYMBOL(packagep, PACKAGE_CL, "PACKAGEP");
DEFINE_SYMBOL(pairlis, PACKAGE_CL, "PAIRLIS");
DEFINE_SYMBOL(parse_error, PACKAGE_CL, "PARSE-ERROR");
DEFINE_SYMBOL(parse_integer, PACKAGE_CL, "PARSE-INTEGER");
DEFINE_SYMBOL(parse_namestring, PACKAGE_CL, "PARSE-NAMESTRING");
DEFINE_SYMBOL(pathname, PACKAGE_CL, "PATHNAME");
DEFINE_SYMBOL(pathname_device, PACKAGE_CL, "PATHNAME-DEVICE");
DEFINE_SYMBOL(pathname_directory, PACKAGE_CL, "PATHNAME-DIRECTORY");
DEFINE_SYMBOL(pathname_host, PACKAGE_CL, "PATHNAME-HOST");
DEFINE_SYMBOL(pathname_match_p, PACKAGE_CL, "PATHNAME-MATCH-P");
DEFINE_SYMBOL(pathname_name, PACKAGE_CL, "PATHNAME-NAME");
DEFINE_SYMBOL(pathname_type, PACKAGE_CL, "PATHNAME-TYPE");
DEFINE_SYMBOL(pathname_version, PACKAGE_CL, "PATHNAME-VERSION");
DEFINE_SYMBOL(pathnamep, PACKAGE_CL, "PATHNAMEP");
DEFINE_SYMBOL(peek_char, PACKAGE_CL, "PEEK-CHAR");
DEFINE_SYMBOL(phase, PACKAGE_CL, "PHASE");
DEFINE_SYMBOL(pi, PACKAGE_CL, "PI");
DEFINE_SYMBOL(plusp, PACKAGE_CL, "PLUSP");
DEFINE_SYMBOL(pop, PACKAGE_CL, "POP");
DEFINE_SYMBOL(position, PACKAGE_CL, "POSITION");
DEFINE_SYMBOL(position_if, PACKAGE_CL, "POSITION-IF");
DEFINE_SYMBOL(position_if_not, PACKAGE_CL, "POSITION-IF-NOT");
DEFINE_SYMBOL(pprint, PACKAGE_CL, "PPRINT");
DEFINE_SYMBOL(pprint_dispatch, PACKAGE_CL, "PPRINT-DISPATCH");
DEFINE_SYMBOL(pprint_exit_if_list_exhausted, PACKAGE_CL, "PPRINT-EXIT-IF-LIST-EXHAUSTED");
DEFINE_SYMBOL(pprint_fill, PACKAGE_CL, "PPRINT-FILL");
DEFINE_SYMBOL(pprint_indent, PACKAGE_CL, "PPRINT-INDENT");
DEFINE_SYMBOL(pprint_linear, PACKAGE_CL, "PPRINT-LINEAR");
DEFINE_SYMBOL(pprint_logical_block, PACKAGE_CL, "PPRINT-LOGICAL-BLOCK");
DEFINE_SYMBOL(pprint_newline, PACKAGE_CL, "PPRINT-NEWLINE");
DEFINE_SYMBOL(pprint_pop, PACKAGE_CL, "PPRINT-POP");
DEFINE_SYMBOL(pprint_tab, PACKAGE_CL, "PPRINT-TAB");
DEFINE_SYMBOL(pprint_tabular, PACKAGE_CL, "PPRINT-TABULAR");
DEFINE_SYMBOL(prin1, PACKAGE_CL, "PRIN1");
DEFINE_SYMBOL(prin1_to_string, PACKAGE_CL, "PRIN1-TO-STRING");
DEFINE_SYMBOL(princ, PACKAGE_CL, "PRINC");
DEFINE_SYMBOL(princ_to_string, PACKAGE_CL, "PRINC-TO-STRING");
DEFINE_SYMBOL(print, PACKAGE_CL, "PRINT");
DEFINE_SYMBOL(print_not_readable, PACKAGE_CL, "PRINT-NOT-READABLE");
DEFINE_SYMBOL(print_not_readable_object, PACKAGE_CL, "PRINT-NOT-READABLE-OBJECT");
DEFINE_SYMBOL(print_object, PACKAGE_CL, "PRINT-OBJECT");
DEFINE_SYMBOL(print_unreadable_object, PACKAGE_CL, "PRINT-UNREADABLE-OBJECT");
DEFINE_SYMBOL(probe_file, PACKAGE_CL, "PROBE-FILE");
DEFINE_SYMBOL(proclaim, PACKAGE_CL, "PROCLAIM");
DEFINE_SYMBOL(prog, PACKAGE_CL, "PROG");
DEFINE_SYMBOL(prog_star, PACKAGE_CL, "PROG*");
DEFINE_SYMBOL(prog1, PACKAGE_CL, "PROG1");
DEFINE_SYMBOL(prog2, PACKAGE_CL, "PROG2");
DEFINE_SYMBOL(progn, PACKAGE_CL, "PROGN");
DEFINE_SYMBOL(program_error, PACKAGE_CL, "PROGRAM-ERROR");
DEFINE_SYMBOL(progv, PACKAGE_CL, "PROGV");
DEFINE_SYMBOL(provide, PACKAGE_CL, "PROVIDE");
DEFINE_SYMBOL(psetf, PACKAGE_CL, "PSETF");
DEFINE_SYMBOL(psetq, PACKAGE_CL, "PSETQ");
DEFINE_SYMBOL(push, PACKAGE_CL, "PUSH");
DEFINE_SYMBOL(pushnew, PACKAGE_CL, "PUSHNEW");
DEFINE_SYMBOL(quote, PACKAGE_CL, "QUOTE");
DEFINE_SYMBOL(random, PACKAGE_CL, "RANDOM");
DEFINE_SYMBOL(random_state, PACKAGE_CL, "RANDOM-STATE");
DEFINE_SYMBOL(random_state_p, PACKAGE_CL, "RANDOM-STATE-P");
DEFINE_SYMBOL(rassoc, PACKAGE_CL, "RASSOC");
DEFINE_SYMBOL(rassoc_if, PACKAGE_CL, "RASSOC-IF");
DEFINE_SYMBOL(rassoc_if_not, PACKAGE_CL, "RASSOC-IF-NOT");
DEFINE_SYMBOL(ratio, PACKAGE_CL, "RATIO");
DEFINE_SYMBOL(rational, PACKAGE_CL, "RATIONAL");
DEFINE_SYMBOL(rationalize, PACKAGE_CL, "RATIONALIZE");
DEFINE_SYMBOL(rationalp, PACKAGE_CL, "RATIONALP");
DEFINE_SYMBOL(read, PACKAGE_CL, "READ");
DEFINE_SYMBOL(read_byte, PACKAGE_CL, "READ-BYTE");
DEFINE_SYMBOL(read_char, PACKAGE_CL, "READ-CHAR");
DEFINE_SYMBOL(read_char_no_hang, PACKAGE_CL, "READ-CHAR-NO-HANG");
DEFINE_SYMBOL(read_delimited_list, PACKAGE_CL, "READ-DELIMITED-LIST");
DEFINE_SYMBOL(read_from_string, PACKAGE_CL, "READ-FROM-STRING");
DEFINE_SYMBOL(read_line, PACKAGE_CL, "READ-LINE");
DEFINE_SYMBOL(read_preserving_whitespace, PACKAGE_CL, "READ-PRESERVING-WHITESPACE");
DEFINE_SYMBOL(read_sequence, PACKAGE_CL, "READ-SEQUENCE");
DEFINE_SYMBOL(reader_error, PACKAGE_CL, "READER-ERROR");
DEFINE_SYMBOL(readtable, PACKAGE_CL, "READTABLE");
DEFINE_SYMBOL(readtable_case, PACKAGE_CL, "READTABLE-CASE");
DEFINE_SYMBOL(readtablep, PACKAGE_CL, "READTABLEP");
DEFINE_SYMBOL(real, PACKAGE_CL, "REAL");
DEFINE_SYMBOL(realp, PACKAGE_CL, "REALP");
DEFINE_SYMBOL(realpart, PACKAGE_CL, "REALPART");
DEFINE_SYMBOL(reduce, PACKAGE_CL, "REDUCE");
DEFINE_SYMBOL(reinitialize_instance, PACKAGE_CL, "REINITIALIZE-INSTANCE");
DEFINE_SYMBOL(rem, PACKAGE_CL, "REM");
DEFINE_SYMBOL(remf, PACKAGE_CL, "REMF");
DEFINE_SYMBOL(remhash, PACKAGE_CL, "REMHASH");
DEFINE_SYMBOL(remove, PACKAGE_CL, "REMOVE");
DEFINE_SYMBOL(remove_duplicates, PACKAGE_CL, "REMOVE-DUPLICATES");
DEFINE_SYMBOL(remove_if, PACKAGE_CL, "REMOVE-IF");
DEFINE_SYMBOL(remove_if_not, PACKAGE_CL, "REMOVE-IF-NOT");
DEFINE_SYMBOL(remove_method, PACKAGE_CL, "REMOVE-METHOD");
DEFINE_SYMBOL(remprop, PACKAGE_CL, "REMPROP");
DEFINE_SYMBOL(rename_file, PACKAGE_CL, "RENAME-FILE");
DEFINE_SYMBOL(rename_package, PACKAGE_CL, "RENAME-PACKAGE");
DEFINE_SYMBOL(replace, PACKAGE_CL, "REPLACE");
DEFINE_SYMBOL(require, PACKAGE_CL, "REQUIRE");
DEFINE_SYMBOL(rest, PACKAGE_CL, "REST");
DEFINE_SYMBOL(restart, PACKAGE_CL, "RESTART");
DEFINE_SYMBOL(restart_bind, PACKAGE_CL, "RESTART-BIND");
DEFINE_SYMBOL(restart_case, PACKAGE_CL, "RESTART-CASE");
DEFINE_SYMBOL(restart_name, PACKAGE_CL, "RESTART-NAME");
DEFINE_SYMBOL(return, PACKAGE_CL, "RETURN");
DEFINE_SYMBOL(return_from, PACKAGE_CL, "RETURN-FROM");
DEFINE_SYMBOL(revappend, PACKAGE_CL, "REVAPPEND");
DEFINE_SYMBOL(reverse, PACKAGE_CL, "REVERSE");
DEFINE_SYMBOL(room, PACKAGE_CL, "ROOM");
DEFINE_SYMBOL(rotatef, PACKAGE_CL, "ROTATEF");
DEFINE_SYMBOL(round, PACKAGE_CL, "ROUND");
DEFINE_SYMBOL(row_major_aref, PACKAGE_CL, "ROW-MAJOR-AREF");
DEFINE_SYMBOL(rplaca, PACKAGE_CL, "RPLACA");
DEFINE_SYMBOL(rplacd, PACKAGE_CL, "RPLACD");
DEFINE_SYMBOL(safety, PACKAGE_CL, "SAFETY");
DEFINE_SYMBOL(satisfies, PACKAGE_CL, "SATISFIES");
DEFINE_SYMBOL(sbit, PACKAGE_CL, "SBIT");
DEFINE_SYMBOL(scale_float, PACKAGE_CL, "SCALE-FLOAT");
DEFINE_SYMBOL(schar, PACKAGE_CL, "SCHAR");
DEFINE_SYMBOL(search, PACKAGE_CL, "SEARCH");
DEFINE_SYMBOL(second, PACKAGE_CL, "SECOND");
DEFINE_SYMBOL(sequence, PACKAGE_CL, "SEQUENCE");
DEFINE_SYMBOL(serious_condition, PACKAGE_CL, "SERIOUS-CONDITION");
DEFINE_SYMBOL(set, PACKAGE_CL, "SET");
DEFINE_SYMBOL(set_difference, PACKAGE_CL, "SET-DIFFERENCE");
DEFINE_SYMBOL(set_dispatch_macro_character, PACKAGE_CL, "SET-DISPATCH-MACRO-CHARACTER");
DEFINE_SYMBOL(set_exclusive_or, PACKAGE_CL, "SET-EXCLUSIVE-OR");
DEFINE_SYMBOL(set_macro_character, PACKAGE_CL, "SET-MACRO-CHARACTER");
DEFINE_SYMBOL(set_pprint_dispatch, PACKAGE_CL, "SET-PPRINT-DISPATCH");
DEFINE_SYMBOL(set_syntax_from_char, PACKAGE_CL, "SET-SYNTAX-FROM-CHAR");
DEFINE_SYMBOL(setf, PACKAGE_CL, "SETF");
DEFINE_SYMBOL(setq, PACKAGE_CL, "SETQ");
DEFINE_SYMBOL(seventh, PACKAGE_CL, "SEVENTH");
DEFINE_SYMBOL(shadow, PACKAGE_CL, "SHADOW");
DEFINE_SYMBOL(shadowing_import, PACKAGE_CL, "SHADOWING-IMPORT");
DEFINE_SYMBOL(shared_initialize, PACKAGE_CL, "SHARED-INITIALIZE");
DEFINE_SYMBOL(shiftf, PACKAGE_CL, "SHIFTF");
DEFINE_SYMBOL(short_float, PACKAGE_CL, "SHORT-FLOAT");
DEFINE_SYMBOL(short_float_epsilon, PACKAGE_CL, "SHORT-FLOAT-EPSILON");
DEFINE_SYMBOL(short_float_negative_epsilon, PACKAGE_CL, "SHORT-FLOAT-NEGATIVE-EPSILON");
DEFINE_SYMBOL(short_site_name, PACKAGE_CL, "SHORT-SITE-NAME");
DEFINE_SYMBOL(signal, PACKAGE_CL, "SIGNAL");
DEFINE_SYMBOL(signed_byte, PACKAGE_CL, "SIGNED-BYTE");
DEFINE_SYMBOL(signum, PACKAGE_CL, "SIGNUM");
DEFINE_SYMBOL(simple_array, PACKAGE_CL, "SIMPLE-ARRAY");
DEFINE_SYMBOL(simple_base_string, PACKAGE_CL, "SIMPLE-BASE-STRING");
DEFINE_SYMBOL(simple_bit_vector, PACKAGE_CL, "SIMPLE-BIT-VECTOR");
DEFINE_SYMBOL(simple_bit_vector_p, PACKAGE_CL, "SIMPLE-BIT-VECTOR-P");
DEFINE_SYMBOL(simple_condition, PACKAGE_CL, "SIMPLE-CONDITION");
DEFINE_SYMBOL(simple_condition_format_arguments, PACKAGE_CL, "SIMPLE-CONDITION-FORMAT-ARGUMENTS");
DEFINE_SYMBOL(simple_condition_format_control, PACKAGE_CL, "SIMPLE-CONDITION-FORMAT-CONTROL");
DEFINE_SYMBOL(simple_error, PACKAGE_CL, "SIMPLE-ERROR");
DEFINE_SYMBOL(simple_string, PACKAGE_CL, "SIMPLE-STRING");
DEFINE_SYMBOL(simple_string_p, PACKAGE_CL, "SIMPLE-STRING-P");
DEFINE_SYMBOL(simple_type_error, PACKAGE_CL, "SIMPLE-TYPE-ERROR");
DEFINE_SYMBOL(simple_vector, PACKAGE_CL, "SIMPLE-VECTOR");
DEFINE_SYMBOL(simple_vector_p, PACKAGE_CL, "SIMPLE-VECTOR-P");
DEFINE_SYMBOL(simple_warning, PACKAGE_CL, "SIMPLE-WARNING");
DEFINE_SYMBOL(sin, PACKAGE_CL, "SIN");
DEFINE_SYMBOL(single_float, PACKAGE_CL, "SINGLE-FLOAT");
DEFINE_SYMBOL(single_float_epsilon, PACKAGE_CL, "SINGLE-FLOAT-EPSILON");
DEFINE_SYMBOL(single_float_negative_epsilon, PACKAGE_CL, "SINGLE-FLOAT-NEGATIVE-EPSILON");
DEFINE_SYMBOL(sinh, PACKAGE_CL, "SINH");
DEFINE_SYMBOL(sixth, PACKAGE_CL, "SIXTH");
DEFINE_SYMBOL(sleep, PACKAGE_CL, "SLEEP");
DEFINE_SYMBOL(slot_boundp, PACKAGE_CL, "SLOT-BOUNDP");
DEFINE_SYMBOL(slot_exists_p, PACKAGE_CL, "SLOT-EXISTS-P");
DEFINE_SYMBOL(slot_makunbound, PACKAGE_CL, "SLOT-MAKUNBOUND");
DEFINE_SYMBOL(slot_missing, PACKAGE_CL, "SLOT-MISSING");
DEFINE_SYMBOL(slot_unbound, PACKAGE_CL, "SLOT-UNBOUND");
DEFINE_SYMBOL(slot_value, PACKAGE_CL, "SLOT-VALUE");
DEFINE_SYMBOL(software_type, PACKAGE_CL, "SOFTWARE-TYPE");
DEFINE_SYMBOL(software_version, PACKAGE_CL, "SOFTWARE-VERSION");
DEFINE_SYMBOL(some, PACKAGE_CL, "SOME");
DEFINE_SYMBOL(sort, PACKAGE_CL, "SORT");
DEFINE_SYMBOL(space, PACKAGE_CL, "SPACE");
DEFINE_SYMBOL(special, PACKAGE_CL, "SPECIAL");
DEFINE_SYMBOL(special_operator_p, PACKAGE_CL, "SPECIAL-OPERATOR-P");
DEFINE_SYMBOL(speed, PACKAGE_CL, "SPEED");
DEFINE_SYMBOL(sqrt, PACKAGE_CL, "SQRT");
DEFINE_SYMBOL(stable_sort, PACKAGE_CL, "STABLE-SORT");
DEFINE_SYMBOL(standard, PACKAGE_CL, "STANDARD");
DEFINE_SYMBOL(standard_char, PACKAGE_CL, "STANDARD-CHAR");
DEFINE_SYMBOL(standard_char_p, PACKAGE_CL, "STANDARD-CHAR-P");
DEFINE_SYMBOL(standard_class, PACKAGE_CL, "STANDARD-CLASS");
DEFINE_SYMBOL(standard_generic_function, PACKAGE_CL, "STANDARD-GENERIC-FUNCTION");
DEFINE_SYMBOL(standard_method, PACKAGE_CL, "STANDARD-METHOD");
DEFINE_SYMBOL(standard_object, PACKAGE_CL, "STANDARD-OBJECT");
DEFINE_SYMBOL(step, PACKAGE_CL, "STEP");
DEFINE_SYMBOL(storage_condition, PACKAGE_CL, "STORAGE-CONDITION");
DEFINE_SYMBOL(store_value, PACKAGE_CL, "STORE-VALUE");
DEFINE_SYMBOL(stream, PACKAGE_CL, "STREAM");
DEFINE_SYMBOL(stream_element_type, PACKAGE_CL, "STREAM-ELEMENT-TYPE");
DEFINE_SYMBOL(stream_error, PACKAGE_CL, "STREAM-ERROR");
DEFINE_SYMBOL(stream_error_stream, PACKAGE_CL, "STREAM-ERROR-STREAM");
DEFINE_SYMBOL(stream_external_format, PACKAGE_CL, "STREAM-EXTERNAL-FORMAT");
DEFINE_SYMBOL(streamp, PACKAGE_CL, "STREAMP");
DEFINE_SYMBOL(string, PACKAGE_CL, "STRING");
DEFINE_SYMBOL(string_capitalize, PACKAGE_CL, "STRING-CAPITALIZE");
DEFINE_SYMBOL(string_downcase, PACKAGE_CL, "STRING-DOWNCASE");
DEFINE_SYMBOL(string_equal, PACKAGE_CL, "STRING-EQUAL");
DEFINE_SYMBOL(string_greaterp, PACKAGE_CL, "STRING-GREATERP");
DEFINE_SYMBOL(string_left_trim, PACKAGE_CL, "STRING-LEFT-TRIM");
DEFINE_SYMBOL(string_lessp, PACKAGE_CL, "STRING-LESSP");
DEFINE_SYMBOL(string_not_equal, PACKAGE_CL, "STRING-NOT-EQUAL");
DEFINE_SYMBOL(string_not_greaterp, PACKAGE_CL, "STRING-NOT-GREATERP");
DEFINE_SYMBOL(string_not_lessp, PACKAGE_CL, "STRING-NOT-LESSP");
DEFINE_SYMBOL(string_right_trim, PACKAGE_CL, "STRING-RIGHT-TRIM");
DEFINE_SYMBOL(string_stream, PACKAGE_CL, "STRING-STREAM");
DEFINE_SYMBOL(string_trim, PACKAGE_CL, "STRING-TRIM");
DEFINE_SYMBOL(string_upcase, PACKAGE_CL, "STRING-UPCASE");
DEFINE_SYMBOL(string_ne, PACKAGE_CL, "STRING/=");
DEFINE_SYMBOL(string_lt, PACKAGE_CL, "STRING<");
DEFINE_SYMBOL(string_le, PACKAGE_CL, "STRING<=");
DEFINE_SYMBOL(string_equals, PACKAGE_CL, "STRING=");
DEFINE_SYMBOL(string_gt, PACKAGE_CL, "STRING>");
DEFINE_SYMBOL(string_ge, PACKAGE_CL, "STRING>=");
DEFINE_SYMBOL(stringp, PACKAGE_CL, "STRINGP");
DEFINE_SYMBOL(structure, PACKAGE_CL, "STRUCTURE");
DEFINE_SYMBOL(structure_class, PACKAGE_CL, "STRUCTURE-CLASS");
DEFINE_SYMBOL(structure_object, PACKAGE_CL, "STRUCTURE-OBJECT");
DEFINE_SYMBOL(style_warning, PACKAGE_CL, "STYLE-WARNING");
DEFINE_SYMBOL(sublis, PACKAGE_CL, "SUBLIS");
DEFINE_SYMBOL(subseq, PACKAGE_CL, "SUBSEQ");
DEFINE_SYMBOL(subsetp, PACKAGE_CL, "SUBSETP");
DEFINE_SYMBOL(subst, PACKAGE_CL, "SUBST");
DEFINE_SYMBOL(subst_if, PACKAGE_CL, "SUBST-IF");
DEFINE_SYMBOL(subst_if_not, PACKAGE_CL, "SUBST-IF-NOT");
DEFINE_SYMBOL(substitute, PACKAGE_CL, "SUBSTITUTE");
DEFINE_SYMBOL(substitute_if, PACKAGE_CL, "SUBSTITUTE-IF");
DEFINE_SYMBOL(substitute_if_not, PACKAGE_CL, "SUBSTITUTE-IF-NOT");
DEFINE_SYMBOL(subtypep, PACKAGE_CL, "SUBTYPEP");
DEFINE_SYMBOL(svref, PACKAGE_CL, "SVREF");
DEFINE_SYMBOL(sxhash, PACKAGE_CL, "SXHASH");
DEFINE_SYMBOL(symbol, PACKAGE_CL, "SYMBOL");
DEFINE_SYMBOL(symbol_function, PACKAGE_CL, "SYMBOL-FUNCTION");
DEFINE_SYMBOL(symbol_macrolet, PACKAGE_CL, "SYMBOL-MACROLET");
DEFINE_SYMBOL(symbol_name, PACKAGE_CL, "SYMBOL-NAME");
DEFINE_SYMBOL(symbol_package, PACKAGE_CL, "SYMBOL-PACKAGE");
DEFINE_SYMBOL(symbol_plist, PACKAGE_CL, "SYMBOL-PLIST");
DEFINE_SYMBOL(symbol_value, PACKAGE_CL, "SYMBOL-VALUE");
DEFINE_SYMBOL(symbolp, PACKAGE_CL, "SYMBOLP");
DEFINE_SYMBOL(synonym_stream, PACKAGE_CL, "SYNONYM-STREAM");
DEFINE_SYMBOL(synonym_stream_symbol, PACKAGE_CL, "SYNONYM-STREAM-SYMBOL");
DEFINE_SYMBOL(t, PACKAGE_CL, "T");
DEFINE_SYMBOL(tagbody, PACKAGE_CL, "TAGBODY");
DEFINE_SYMBOL(tailp, PACKAGE_CL, "TAILP");
DEFINE_SYMBOL(tan, PACKAGE_CL, "TAN");
DEFINE_SYMBOL(tanh, PACKAGE_CL, "TANH");
DEFINE_SYMBOL(tenth, PACKAGE_CL, "TENTH");
DEFINE_SYMBOL(terpri, PACKAGE_CL, "TERPRI");
DEFINE_SYMBOL(the, PACKAGE_CL, "THE");
DEFINE_SYMBOL(third, PACKAGE_CL, "THIRD");
DEFINE_SYMBOL(throw, PACKAGE_CL, "THROW");
DEFINE_SYMBOL(time, PACKAGE_CL, "TIME");
DEFINE_SYMBOL(trace, PACKAGE_CL, "TRACE");
DEFINE_SYMBOL(translate_logical_pathname, PACKAGE_CL, "TRANSLATE-LOGICAL-PATHNAME");
DEFINE_SYMBOL(translate_pathname, PACKAGE_CL, "TRANSLATE-PATHNAME");
DEFINE_SYMBOL(tree_equal, PACKAGE_CL, "TREE-EQUAL");
DEFINE_SYMBOL(truename, PACKAGE_CL, "TRUENAME");
DEFINE_SYMBOL(truncate, PACKAGE_CL, "TRUNCATE");
DEFINE_SYMBOL(two_way_stream, PACKAGE_CL, "TWO-WAY-STREAM");
DEFINE_SYMBOL(two_way_stream_input_stream, PACKAGE_CL, "TWO-WAY-STREAM-INPUT-STREAM");
DEFINE_SYMBOL(two_way_stream_output_stream, PACKAGE_CL, "TWO-WAY-STREAM-OUTPUT-STREAM");
DEFINE_SYMBOL(type, PACKAGE_CL, "TYPE");
DEFINE_SYMBOL(type_error, PACKAGE_CL, "TYPE-ERROR");
DEFINE_SYMBOL(type_error_datum, PACKAGE_CL, "TYPE-ERROR-DATUM");
DEFINE_SYMBOL(type_error_expected_type, PACKAGE_CL, "TYPE-ERROR-EXPECTED-TYPE");
DEFINE_SYMBOL(type_of, PACKAGE_CL, "TYPE-OF");
DEFINE_SYMBOL(typecase, PACKAGE_CL, "TYPECASE");
DEFINE_SYMBOL(typep, PACKAGE_CL, "TYPEP");
DEFINE_SYMBOL(unbound_slot, PACKAGE_CL, "UNBOUND-SLOT");
DEFINE_SYMBOL(unbound_slot_instance, PACKAGE_CL, "UNBOUND-SLOT-INSTANCE");
DEFINE_SYMBOL(unbound_variable, PACKAGE_CL, "UNBOUND-VARIABLE");
DEFINE_SYMBOL(undefined_function, PACKAGE_CL, "UNDEFINED-FUNCTION");
DEFINE_SYMBOL(unexport, PACKAGE_CL, "UNEXPORT");
DEFINE_SYMBOL(unintern, PACKAGE_CL, "UNINTERN");
DEFINE_SYMBOL(union, PACKAGE_CL, "UNION");
DEFINE_SYMBOL(unless, PACKAGE_CL, "UNLESS");
DEFINE_SYMBOL(unread_char, PACKAGE_CL, "UNREAD-CHAR");
DEFINE_SYMBOL(unsigned_byte, PACKAGE_CL, "UNSIGNED-BYTE");
DEFINE_SYMBOL(untrace, PACKAGE_CL, "UNTRACE");
DEFINE_SYMBOL(unuse_package, PACKAGE_CL, "UNUSE-PACKAGE");
DEFINE_SYMBOL(unwind_protect, PACKAGE_CL, "UNWIND-PROTECT");
DEFINE_SYMBOL(update_instance_for_different_class, PACKAGE_CL, "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS");
DEFINE_SYMBOL(update_instance_for_redefined_class, PACKAGE_CL, "UPDATE-INSTANCE-FOR-REDEFINED-CLASS");
DEFINE_SYMBOL(upgraded_array_element_type, PACKAGE_CL, "UPGRADED-ARRAY-ELEMENT-TYPE");
DEFINE_SYMBOL(upgraded_complex_part_type, PACKAGE_CL, "UPGRADED-COMPLEX-PART-TYPE");
DEFINE_SYMBOL(upper_case_p, PACKAGE_CL, "UPPER-CASE-P");
DEFINE_SYMBOL(use_package, PACKAGE_CL, "USE-PACKAGE");
DEFINE_SYMBOL(use_value, PACKAGE_CL, "USE-VALUE");
DEFINE_SYMBOL(user_homedir_pathname, PACKAGE_CL, "USER-HOMEDIR-PATHNAME");
DEFINE_SYMBOL(values, PACKAGE_CL, "VALUES");
DEFINE_SYMBOL(values_list, PACKAGE_CL, "VALUES-LIST");
DEFINE_SYMBOL(variable, PACKAGE_CL, "VARIABLE");
DEFINE_SYMBOL(vector, PACKAGE_CL, "VECTOR");
DEFINE_SYMBOL(vector_pop, PACKAGE_CL, "VECTOR-POP");
DEFINE_SYMBOL(vector_push, PACKAGE_CL, "VECTOR-PUSH");
DEFINE_SYMBOL(vector_push_extend, PACKAGE_CL, "VECTOR-PUSH-EXTEND");
DEFINE_SYMBOL(vectorp, PACKAGE_CL, "VECTORP");
DEFINE_SYMBOL(warn, PACKAGE_CL, "WARN");
DEFINE_SYMBOL(warning, PACKAGE_CL, "WARNING");
DEFINE_SYMBOL(when, PACKAGE_CL, "WHEN");
DEFINE_SYMBOL(wild_pathname_p, PACKAGE_CL, "WILD-PATHNAME-P");
DEFINE_SYMBOL(with_accessors, PACKAGE_CL, "WITH-ACCESSORS");
DEFINE_SYMBOL(with_compilation_unit, PACKAGE_CL, "WITH-COMPILATION-UNIT");
DEFINE_SYMBOL(with_condition_restarts, PACKAGE_CL, "WITH-CONDITION-RESTARTS");
DEFINE_SYMBOL(with_hash_table_iterator, PACKAGE_CL, "WITH-HASH-TABLE-ITERATOR");
DEFINE_SYMBOL(with_input_from_string, PACKAGE_CL, "WITH-INPUT-FROM-STRING");
DEFINE_SYMBOL(with_open_file, PACKAGE_CL, "WITH-OPEN-FILE");
DEFINE_SYMBOL(with_open_stream, PACKAGE_CL, "WITH-OPEN-STREAM");
DEFINE_SYMBOL(with_output_to_string, PACKAGE_CL, "WITH-OUTPUT-TO-STRING");
DEFINE_SYMBOL(with_package_iterator, PACKAGE_CL, "WITH-PACKAGE-ITERATOR");
DEFINE_SYMBOL(with_simple_restart, PACKAGE_CL, "WITH-SIMPLE-RESTART");
DEFINE_SYMBOL(with_slots, PACKAGE_CL, "WITH-SLOTS");
DEFINE_SYMBOL(with_standard_io_syntax, PACKAGE_CL, "WITH-STANDARD-IO-SYNTAX");
DEFINE_SYMBOL(write, PACKAGE_CL, "WRITE");
DEFINE_SYMBOL(write_byte, PACKAGE_CL, "WRITE-BYTE");
DEFINE_SYMBOL(write_char, PACKAGE_CL, "WRITE-CHAR");
DEFINE_SYMBOL(write_line, PACKAGE_CL, "WRITE-LINE");
DEFINE_SYMBOL(write_sequence, PACKAGE_CL, "WRITE-SEQUENCE");
DEFINE_SYMBOL(write_string, PACKAGE_CL, "WRITE-STRING");
DEFINE_SYMBOL(write_to_string, PACKAGE_CL, "WRITE-TO-STRING");
DEFINE_SYMBOL(y_or_n_p, PACKAGE_CL, "Y-OR-N-P");
DEFINE_SYMBOL(yes_or_no_p, PACKAGE_CL, "YES-OR-NO-P");
DEFINE_SYMBOL(zerop, PACKAGE_CL, "ZEROP");

// EXT
DEFINE_SYMBOL(accept_connection, PACKAGE_EXT, "ACCEPT-CONNECTION");
DEFINE_SYMBOL(assq, PACKAGE_EXT, "ASSQ");
DEFINE_SYMBOL(assql, PACKAGE_EXT, "ASSQL");
DEFINE_SYMBOL(autoload, PACKAGE_EXT, "AUTOLOAD");
DEFINE_SYMBOL(autoload_macro, PACKAGE_EXT, "AUTOLOAD-MACRO");
DEFINE_SYMBOL(autoload_verbose, PACKAGE_EXT, "*AUTOLOAD-VERBOSE*");
DEFINE_SYMBOL(autoloadp, PACKAGE_EXT, "AUTOLOADP");
DEFINE_SYMBOL(aver, PACKAGE_EXT, "AVER");
DEFINE_SYMBOL(backtrace, PACKAGE_EXT, "BACKTRACE");
DEFINE_SYMBOL(backtrace_as_list, PACKAGE_EXT, "BACKTRACE-AS-LIST");
DEFINE_SYMBOL(bignump, PACKAGE_EXT, "BIGNUMP");
DEFINE_SYMBOL(character_designator, PACKAGE_EXT, "CHARACTER-DESIGNATOR");
DEFINE_SYMBOL(charpos, PACKAGE_EXT, "CHARPOS"); // boot.lisp
DEFINE_SYMBOL(chdir, PACKAGE_EXT, "CHDIR");
DEFINE_SYMBOL(classp, PACKAGE_EXT, "CLASSP");
DEFINE_SYMBOL(closure, PACKAGE_EXT, "CLOSURE"); // REVIEW
DEFINE_SYMBOL(closurep, PACKAGE_EXT, "CLOSUREP"); // REVIEW
DEFINE_SYMBOL(closure_environment, PACKAGE_EXT, "CLOSURE-ENVIRONMENT"); // REVIEW
DEFINE_SYMBOL(compile_file_if_needed, PACKAGE_EXT, "COMPILE-FILE-IF-NEEDED"); // compile-file.lisp
DEFINE_SYMBOL(compile_system, PACKAGE_EXT, "COMPILE-SYSTEM");
DEFINE_SYMBOL(compiler_error, PACKAGE_EXT, "COMPILER-ERROR");
DEFINE_SYMBOL(compiler_unsupported_feature_error, PACKAGE_EXT, "COMPILER-UNSUPPORTED-FEATURE-ERROR");
DEFINE_SYMBOL(condition_broadcast, PACKAGE_EXT, "CONDITION-BROADCAST");
DEFINE_SYMBOL(condition_notify, PACKAGE_EXT, "CONDITION-NOTIFY");
DEFINE_SYMBOL(condition_variable, PACKAGE_EXT, "CONDITION-VARIABLE");
DEFINE_SYMBOL(condition_wait, PACKAGE_EXT, "CONDITION-WAIT");
DEFINE_SYMBOL(copy_file, PACKAGE_EXT, "COPY-FILE");
DEFINE_SYMBOL(current_directory, PACKAGE_EXT, "CURRENT-DIRECTORY");
DEFINE_SYMBOL(current_thread, PACKAGE_EXT, "CURRENT-THREAD");
DEFINE_SYMBOL(debug_condition, PACKAGE_EXT, "*DEBUG-CONDITION*");
DEFINE_SYMBOL(debug_level, PACKAGE_EXT, "*DEBUG-LEVEL*");
DEFINE_SYMBOL(describe_compiler_policy, PACKAGE_EXT, "DESCRIBE-COMPILER-POLICY"); // describe-compiler-policy.lisp
DEFINE_SYMBOL(environment_variables, PACKAGE_EXT, "ENVIRONMENT-VARIABLES"); // REVIEW
DEFINE_SYMBOL(exit, PACKAGE_EXT, "EXIT");
DEFINE_SYMBOL(featurep, PACKAGE_EXT, "FEATUREP"); // featurep.lisp
DEFINE_SYMBOL(file_directory_p, PACKAGE_EXT, "FILE-DIRECTORY-P");
DEFINE_SYMBOL(fixnump, PACKAGE_EXT, "FIXNUMP");
DEFINE_SYMBOL(function_designator, PACKAGE_EXT, "FUNCTION-DESIGNATOR");
DEFINE_SYMBOL(gc, PACKAGE_EXT, "GC");
DEFINE_SYMBOL(get_mutex, PACKAGE_EXT, "GET-MUTEX");
DEFINE_SYMBOL(getenv, PACKAGE_EXT, "GETENV");
DEFINE_SYMBOL(getpid, PACKAGE_EXT, "GETPID");
DEFINE_SYMBOL(invoke_debugger_hook, PACKAGE_EXT, "*INVOKE-DEBUGGER-HOOK*");
DEFINE_SYMBOL(load_path, PACKAGE_EXT, "*LOAD-PATH*");
DEFINE_SYMBOL(local_port, PACKAGE_EXT, "LOCAL-PORT");
DEFINE_SYMBOL(make_condition_variable, PACKAGE_EXT, "MAKE-CONDITION-VARIABLE");
DEFINE_SYMBOL(make_mutex, PACKAGE_EXT, "MAKE-MUTEX");
DEFINE_SYMBOL(make_slime_input_stream, PACKAGE_EXT, "MAKE-SLIME-INPUT-STREAM");
DEFINE_SYMBOL(make_slime_output_stream, PACKAGE_EXT, "MAKE-SLIME-OUTPUT-STREAM");
DEFINE_SYMBOL(make_socket, PACKAGE_EXT, "MAKE-SOCKET");
DEFINE_SYMBOL(make_thread, PACKAGE_EXT, "MAKE-THREAD");
DEFINE_SYMBOL(memq, PACKAGE_EXT, "MEMQ");
DEFINE_SYMBOL(memql, PACKAGE_EXT, "MEMQL");
DEFINE_SYMBOL(mutex, PACKAGE_EXT, "MUTEX");
DEFINE_SYMBOL(neq, PACKAGE_EXT, "NEQ");
DEFINE_SYMBOL(quit, PACKAGE_EXT, "QUIT");
DEFINE_SYMBOL(precompile, PACKAGE_EXT, "PRECOMPILE");
DEFINE_SYMBOL(print_structure, PACKAGE_EXT, "*PRINT-STRUCTURE*");
DEFINE_SYMBOL(probe_directory, PACKAGE_EXT, "PROBE-DIRECTORY");
DEFINE_SYMBOL(rebuild_lisp, PACKAGE_EXT, "REBUILD-LISP");
DEFINE_SYMBOL(release_mutex, PACKAGE_EXT, "RELEASE-MUTEX");
DEFINE_SYMBOL(reset, PACKAGE_EXT, "RESET");
DEFINE_SYMBOL(resolve, PACKAGE_EXT, "RESOLVE");
DEFINE_SYMBOL(run_shell_command, PACKAGE_EXT, "RUN-SHELL-COMMAND");
DEFINE_SYMBOL(saved_backtrace, PACKAGE_EXT, "*SAVED-BACKTRACE*");
DEFINE_SYMBOL(sequencep, PACKAGE_EXT, "SEQUENCEP");
DEFINE_SYMBOL(server_socket, PACKAGE_EXT, "SERVER-SOCKET");
DEFINE_SYMBOL(slime_input_stream, PACKAGE_EXT, "SLIME-INPUT-STREAM");
DEFINE_SYMBOL(slime_output_stream, PACKAGE_EXT, "SLIME-OUTPUT-STREAM");
DEFINE_SYMBOL(socket_stream, PACKAGE_EXT, "SOCKET-STREAM");
DEFINE_SYMBOL(source, PACKAGE_EXT, "SOURCE");
DEFINE_SYMBOL(source_file_position, PACKAGE_EXT, "SOURCE-FILE-POSITION");
DEFINE_SYMBOL(source_pathname, PACKAGE_EXT, "SOURCE-PATHNAME");
DEFINE_SYMBOL(special_operator, PACKAGE_EXT, "SPECIAL-OPERATOR");
DEFINE_SYMBOL(special_variable_p, PACKAGE_EXT, "SPECIAL-VARIABLE-P");
DEFINE_SYMBOL(string_designator, PACKAGE_EXT, "STRING-DESIGNATOR");
DEFINE_SYMBOL(subclassp, PACKAGE_EXT, "SUBCLASSP");
DEFINE_SYMBOL(thread, PACKAGE_EXT, "THREAD");
DEFINE_SYMBOL(thread_name, PACKAGE_EXT, "THREAD-NAME");
DEFINE_SYMBOL(threadp, PACKAGE_EXT, "THREADP");
DEFINE_SYMBOL(xcl_home, PACKAGE_EXT, "*XCL-HOME*");

// SYS
DEFINE_SYMBOL(adjust_array_internal, PACKAGE_SYS, "%ADJUST-ARRAY");
DEFINE_SYMBOL(address_of, PACKAGE_SYS, "ADDRESS-OF");
DEFINE_SYMBOL(all_threads, PACKAGE_SYS, "*ALL-THREADS*");
DEFINE_SYMBOL(allocate_funcallable_standard_instance, PACKAGE_SYS, "ALLOCATE-FUNCALLABLE-STANDARD-INSTANCE");
DEFINE_SYMBOL(allocate_instance_funcallable_standard_class, PACKAGE_SYS, "ALLOCATE-INSTANCE-FUNCALLABLE-STANDARD-CLASS");
DEFINE_SYMBOL(allocate_instance_standard_class, PACKAGE_SYS, "ALLOCATE-INSTANCE-STANDARD-CLASS");
DEFINE_SYMBOL(allocate_instance_standard_generic_function, PACKAGE_SYS, "ALLOCATE-INSTANCE-STANDARD-GENERIC-FUNCTION");
DEFINE_SYMBOL(allocate_standard_instance, PACKAGE_SYS, "ALLOCATE-STANDARD-INSTANCE");
DEFINE_SYMBOL(ansi_stream, PACKAGE_SYS, "ANSI-STREAM");
DEFINE_SYMBOL(ansi_stream_close, PACKAGE_SYS, "ANSI-STREAM-CLOSE");
DEFINE_SYMBOL(ansi_stream_element_type, PACKAGE_SYS, "ANSI-STREAM-ELEMENT-TYPE");
DEFINE_SYMBOL(ansi_stream_input_stream_p, PACKAGE_SYS, "ANSI-STREAM-INPUT-STREAM-P");
DEFINE_SYMBOL(ansi_stream_open_stream_p, PACKAGE_SYS, "ANSI-STREAM-OPEN-STREAM-P");
DEFINE_SYMBOL(ansi_stream_output_stream_p, PACKAGE_SYS, "ANSI-STREAM-OUTPUT-STREAM-P");
DEFINE_SYMBOL(ansi_stream_read_line, PACKAGE_SYS, "ANSI-STREAM-READ-LINE");
DEFINE_SYMBOL(ansi_stream_p, PACKAGE_SYS, "ANSI-STREAM-P");
DEFINE_SYMBOL(argv, PACKAGE_SYS, "*ARGV*");
DEFINE_SYMBOL(aset, PACKAGE_SYS, "ASET");
DEFINE_SYMBOL(atan_1, PACKAGE_SYS, "ATAN-1");
DEFINE_SYMBOL(autocompile, PACKAGE_SYS, "AUTOCOMPILE");
DEFINE_SYMBOL(autocompile_verbose, PACKAGE_SYS, "*AUTOCOMPILE-VERBOSE*");
DEFINE_SYMBOL(backquote, PACKAGE_SYS, "BACKQUOTE");
DEFINE_SYMBOL(bits_per_word, PACKAGE_SYS, "+BITS-PER-WORD+");
DEFINE_SYMBOL(builtin_typep, PACKAGE_SYS, "BUILTIN-TYPEP");
DEFINE_SYMBOL(bytes_per_word, PACKAGE_SYS, "+BYTES-PER-WORD+");
DEFINE_SYMBOL(canonicalize_logical_host, PACKAGE_SYS, "CANONICALIZE-LOGICAL-HOST");
DEFINE_SYMBOL(character_lowtag, PACKAGE_SYS, "+CHARACTER-LOWTAG+");
DEFINE_SYMBOL(character_shift, PACKAGE_SYS, "+CHARACTER-SHIFT+");
DEFINE_SYMBOL(ceiling_1, PACKAGE_SYS, "CEILING-1");
DEFINE_SYMBOL(ceiling_2, PACKAGE_SYS, "CEILING-2");
DEFINE_SYMBOL(check_fixnum_bounds, PACKAGE_SYS, "CHECK-FIXNUM-BOUNDS");
DEFINE_SYMBOL(check_subsequence, PACKAGE_SYS, "CHECK-SUBSEQUENCE");
DEFINE_SYMBOL(common_lisp_package, PACKAGE_SYS, "+COMMON-LISP-PACKAGE+");
DEFINE_SYMBOL(class_name_internal, PACKAGE_SYS, "%CLASS-NAME");
DEFINE_SYMBOL(closure_template_function, PACKAGE_SYS, "CLOSURE-TEMPLATE-FUNCTION");
DEFINE_SYMBOL(coerce_to_function, PACKAGE_SYS, "COERCE-TO-FUNCTION");
DEFINE_SYMBOL(comma, PACKAGE_SYS, "COMMA");
DEFINE_SYMBOL(comma_atsign, PACKAGE_SYS, "COMMA-ATSIGN");
DEFINE_SYMBOL(comma_dot, PACKAGE_SYS, "COMMA-DOT");
DEFINE_SYMBOL(_compilation_speed_, PACKAGE_SYS, "*COMPILATION-SPEED*");
DEFINE_SYMBOL(compiled_closure, PACKAGE_SYS, "COMPILED-CLOSURE");
DEFINE_SYMBOL(compiled_function_constants, PACKAGE_SYS, "COMPILED-FUNCTION-CONSTANTS");
DEFINE_SYMBOL(compiler_busy_p, PACKAGE_SYS, "*COMPILER-BUSY-P*");
DEFINE_SYMBOL(concatenate_to_string, PACKAGE_SYS, "CONCATENATE-TO-STRING");
DEFINE_SYMBOL(conditionp, PACKAGE_SYS, "CONDITIONP");
DEFINE_SYMBOL(copy_simple_bit_vector, PACKAGE_SYS, "COPY-SIMPLE-BIT-VECTOR");
DEFINE_SYMBOL(copy_string, PACKAGE_SYS, "COPY-STRING");
DEFINE_SYMBOL(copy_structure_slot_definition, PACKAGE_SYS, "COPY-STRUCTURE-SLOT-DEFINITION");
DEFINE_SYMBOL(copy_vector, PACKAGE_SYS, "COPY-VECTOR");
DEFINE_SYMBOL(crash, PACKAGE_SYS, "CRASH");
DEFINE_SYMBOL(create_new_file, PACKAGE_SYS, "CREATE-NEW-FILE");
DEFINE_SYMBOL(current_bp, PACKAGE_SYS, "CURRENT-BP");
DEFINE_SYMBOL(current_print_length, PACKAGE_SYS, "*CURRENT-PRINT-LENGTH*");
DEFINE_SYMBOL(current_print_level, PACKAGE_SYS, "*CURRENT-PRINT-LEVEL*");
DEFINE_SYMBOL(current_sp, PACKAGE_SYS, "CURRENT-SP");
DEFINE_SYMBOL(current_stack_as_list, PACKAGE_SYS, "CURRENT-STACK-AS-LIST");
DEFINE_SYMBOL(_debug_, PACKAGE_SYS, "*DEBUG*");
DEFINE_SYMBOL(default_time_zone, PACKAGE_SYS, "DEFAULT-TIME-ZONE");
DEFINE_SYMBOL(defconstant_internal, PACKAGE_SYS, "%DEFCONSTANT");
DEFINE_SYMBOL(defknown, PACKAGE_SYS, "DEFKNOWN");
DEFINE_SYMBOL(defpackage_internal, PACKAGE_SYS, "%DEFPACKAGE");
DEFINE_SYMBOL(defparameter_internal, PACKAGE_SYS, "%DEFPARAMETER");
DEFINE_SYMBOL(defstruct_default_constructor, PACKAGE_SYS, "DEFSTRUCT-DEFAULT-CONSTRUCTOR");
DEFINE_SYMBOL(defun_internal, PACKAGE_SYS, "%DEFUN");
DEFINE_SYMBOL(defvar_internal, PACKAGE_SYS, "%DEFVAR");
DEFINE_SYMBOL(delete_package_internal, PACKAGE_SYS, "%DELETE-PACKAGE");
DEFINE_SYMBOL(designator_input_stream, PACKAGE_SYS, "DESIGNATOR-INPUT-STREAM");
DEFINE_SYMBOL(designator_list, PACKAGE_SYS, "DESIGNATOR-LIST");
DEFINE_SYMBOL(designator_output_stream, PACKAGE_SYS, "DESIGNATOR-OUTPUT-STREAM");
DEFINE_SYMBOL(documentation_hash_table, PACKAGE_SYS, "+DOCUMENTATION-HASH-TABLE+");
DEFINE_SYMBOL(documentation_internal, PACKAGE_SYS, "%DOCUMENTATION");
DEFINE_SYMBOL(double_float_add_internal, PACKAGE_SYS, "%DOUBLE-FLOAT-+");
DEFINE_SYMBOL(double_float_high_bits, PACKAGE_SYS, "DOUBLE-FLOAT-HIGH-BITS");
DEFINE_SYMBOL(double_float_low_bits, PACKAGE_SYS, "DOUBLE-FLOAT-LOW-BITS");
DEFINE_SYMBOL(double_float_p, PACKAGE_SYS, "DOUBLE-FLOAT-P");
DEFINE_SYMBOL(double_float_subtract_internal, PACKAGE_SYS, "%DOUBLE-FLOAT--");
DEFINE_SYMBOL(enable_autocompile, PACKAGE_SYS, "*ENABLE-AUTOCOMPILE*");
DEFINE_SYMBOL(enable_gc, PACKAGE_SYS, "ENABLE-GC");
DEFINE_SYMBOL(environment, PACKAGE_SYS, "ENVIRONMENT");
DEFINE_SYMBOL(environment_add_function_definition, PACKAGE_SYS, "ENVIRONMENT-ADD-FUNCTION-DEFINITION");
DEFINE_SYMBOL(environment_add_macro_definition, PACKAGE_SYS, "ENVIRONMENT-ADD-MACRO-DEFINITION");
DEFINE_SYMBOL(environment_empty_p, PACKAGE_SYS, "ENVIRONMENT-EMPTY-P");
DEFINE_SYMBOL(equals_2, PACKAGE_SYS, "TWO-ARG-=");
DEFINE_SYMBOL(error_not_bit, PACKAGE_SYS, "ERROR-NOT-BIT");
DEFINE_SYMBOL(error_not_cons, PACKAGE_SYS, "ERROR-NOT-CONS");
DEFINE_SYMBOL(error_not_function, PACKAGE_SYS, "ERROR-NOT-FUNCTION");
DEFINE_SYMBOL(error_not_list, PACKAGE_SYS, "ERROR-NOT-LIST");
DEFINE_SYMBOL(error_not_simple_bit_vector, PACKAGE_SYS, "ERROR-NOT-SIMPLE-BIT-VECTOR");
DEFINE_SYMBOL(error_not_simple_string, PACKAGE_SYS, "ERROR-NOT-SIMPLE-STRING");
DEFINE_SYMBOL(error_not_simple_vector, PACKAGE_SYS, "ERROR-NOT-SIMPLE-VECTOR");
DEFINE_SYMBOL(error_not_vector, PACKAGE_SYS, "ERROR-NOT-VECTOR");
DEFINE_SYMBOL(every2, PACKAGE_SYS, "EVERY2");
DEFINE_SYMBOL(fasl_anonymous_package, PACKAGE_SYS, "*FASL-ANONYMOUS-PACKAGE*");
DEFINE_SYMBOL(fasl_read_backquote, PACKAGE_SYS, "FASL-READ-BACKQUOTE");
DEFINE_SYMBOL(fasl_read_comma, PACKAGE_SYS, "FASL-READ-COMMA");
DEFINE_SYMBOL(fasl_read_comment, PACKAGE_SYS, "FASL-READ-COMMENT");
DEFINE_SYMBOL(fasl_read_dispatch_char, PACKAGE_SYS, "FASL-READ-DISPATCH-CHAR");
DEFINE_SYMBOL(fasl_read_list, PACKAGE_SYS, "FASL-READ-LIST");
DEFINE_SYMBOL(fasl_read_quote, PACKAGE_SYS, "FASL-READ-QUOTE");
DEFINE_SYMBOL(fasl_read_right_paren, PACKAGE_SYS, "FASL-READ-RIGHT-PAREN");
DEFINE_SYMBOL(fasl_read_string, PACKAGE_SYS, "FASL-READ-STRING");
DEFINE_SYMBOL(fasl_readtable, PACKAGE_SYS, "*FASL-READTABLE*");
DEFINE_SYMBOL(fasl_sharp_a, PACKAGE_SYS, "FASL-SHARP-A");
DEFINE_SYMBOL(fasl_sharp_b, PACKAGE_SYS, "FASL-SHARP-B");
DEFINE_SYMBOL(fasl_sharp_backslash, PACKAGE_SYS, "FASL-SHARP-BACKSLASH");
DEFINE_SYMBOL(fasl_sharp_c, PACKAGE_SYS, "FASL-SHARP-C");
DEFINE_SYMBOL(fasl_sharp_colon, PACKAGE_SYS, "FASL-SHARP-COLON");
DEFINE_SYMBOL(fasl_sharp_dollar, PACKAGE_SYS, "FASL-SHARP-DOLLAR");
DEFINE_SYMBOL(fasl_sharp_dot, PACKAGE_SYS, "FASL-SHARP-DOT");
DEFINE_SYMBOL(fasl_sharp_illegal, PACKAGE_SYS, "FASL-SHARP-ILLEGAL");
DEFINE_SYMBOL(fasl_sharp_left_paren, PACKAGE_SYS, "FASL-SHARP-LEFT-PAREN");
DEFINE_SYMBOL(fasl_sharp_o, PACKAGE_SYS, "FASL-SHARP-O");
DEFINE_SYMBOL(fasl_sharp_p, PACKAGE_SYS, "FASL-SHARP-P");
DEFINE_SYMBOL(fasl_sharp_percent, PACKAGE_SYS, "FASL-SHARP-PERCENT");
DEFINE_SYMBOL(fasl_sharp_quote, PACKAGE_SYS, "FASL-SHARP-QUOTE");
DEFINE_SYMBOL(fasl_sharp_r, PACKAGE_SYS, "FASL-SHARP-R");
DEFINE_SYMBOL(fasl_sharp_s, PACKAGE_SYS, "FASL-SHARP-S");
DEFINE_SYMBOL(fasl_sharp_star, PACKAGE_SYS, "FASL-SHARP-STAR");
DEFINE_SYMBOL(fasl_sharp_vertical_bar, PACKAGE_SYS, "FASL-SHARP-VERTICAL-BAR");
DEFINE_SYMBOL(fasl_sharp_x, PACKAGE_SYS, "FASL-SHARP-X");
DEFINE_SYMBOL(fast_mapc2, PACKAGE_SYS, "FAST-MAPC2");
DEFINE_SYMBOL(fast_mapcar2, PACKAGE_SYS, "FAST-MAPCAR2");
DEFINE_SYMBOL(fdefinition_block_name, PACKAGE_SYS, "FDEFINITION-BLOCK-NAME");
DEFINE_SYMBOL(find_class_1, PACKAGE_SYS, "FIND-CLASS-1");
DEFINE_SYMBOL(find_eql, PACKAGE_SYS, "FIND-EQL");
DEFINE_SYMBOL(fixnum_shift, PACKAGE_SYS, "+FIXNUM-SHIFT+");
DEFINE_SYMBOL(fixnum_tag_mask, PACKAGE_SYS, "+FIXNUM-TAG-MASK+");
DEFINE_SYMBOL(fixnum_typep, PACKAGE_SYS, "FIXNUM-TYPEP");
DEFINE_SYMBOL(float_string, PACKAGE_SYS, "FLOAT-STRING");
DEFINE_SYMBOL(floor_1, PACKAGE_SYS, "FLOOR-1");
DEFINE_SYMBOL(floor_2, PACKAGE_SYS, "FLOOR-2");
DEFINE_SYMBOL(function_arity, PACKAGE_SYS, "FUNCTION-ARITY");
DEFINE_SYMBOL(function_call_count, PACKAGE_SYS, "FUNCTION-CALL-COUNT");
DEFINE_SYMBOL(function_code_address, PACKAGE_SYS, "FUNCTION-CODE-ADDRESS");
DEFINE_SYMBOL(function_code_size, PACKAGE_SYS, "FUNCTION-CODE-SIZE");
DEFINE_SYMBOL(function_name, PACKAGE_SYS, "FUNCTION-NAME");
DEFINE_SYMBOL(funcallable_instance_function, PACKAGE_SYS, "FUNCALLABLE-INSTANCE-FUNCTION");
DEFINE_SYMBOL(function_plist, PACKAGE_SYS, "FUNCTION-PLIST");
DEFINE_SYMBOL(gc_total_bytes, PACKAGE_SYS, "GC-TOTAL-BYTES");
DEFINE_SYMBOL(gc_total_cons_cells, PACKAGE_SYS, "GC-TOTAL-CONS-CELLS");
DEFINE_SYMBOL(gcd_2, PACKAGE_SYS, "TWO-ARG-GCD");
DEFINE_SYMBOL(ge_2, PACKAGE_SYS, "TWO-ARG->=");
DEFINE_SYMBOL(get2, PACKAGE_SYS, "GET2");
DEFINE_SYMBOL(get3, PACKAGE_SYS, "GET3");
DEFINE_SYMBOL(get_process_times, PACKAGE_SYS, "GET-PROCESS-TIMES");
DEFINE_SYMBOL(gethash2, PACKAGE_SYS, "GETHASH2");
DEFINE_SYMBOL(gethash2_1, PACKAGE_SYS, "GETHASH2-1");
DEFINE_SYMBOL(gethash3, PACKAGE_SYS, "GETHASH3");
DEFINE_SYMBOL(gt_2, PACKAGE_SYS, "TWO-ARG->");
DEFINE_SYMBOL(hash_table_entries, PACKAGE_SYS, "HASH-TABLE-ENTRIES");
DEFINE_SYMBOL(heap_free, PACKAGE_SYS, "HEAP-FREE");
DEFINE_SYMBOL(heap_size, PACKAGE_SYS, "HEAP-SIZE");
DEFINE_SYMBOL(heap_used, PACKAGE_SYS, "HEAP-USED");
DEFINE_SYMBOL(in_package_internal, PACKAGE_SYS, "%IN-PACKAGE");
DEFINE_SYMBOL(incq, PACKAGE_SYS, "INCQ");
DEFINE_SYMBOL(index, PACKAGE_SYS, "INDEX"); // type specifier
DEFINE_SYMBOL(init_fasl, PACKAGE_SYS, "INIT-FASL");
DEFINE_SYMBOL(int3, PACKAGE_SYS, "INT3");
DEFINE_SYMBOL(interactive_eval, PACKAGE_SYS, "INTERACTIVE-EVAL");
DEFINE_SYMBOL(interrupt_lisp, PACKAGE_SYS, "INTERRUPT-LISP");
DEFINE_SYMBOL(intersection_eql, PACKAGE_SYS, "INTERSECTION-EQL");
DEFINE_SYMBOL(iref, PACKAGE_SYS, "IREF");
DEFINE_SYMBOL(iset, PACKAGE_SYS, "ISET");
DEFINE_SYMBOL(invoke_debugger_internal, PACKAGE_SYS, "%INVOKE-DEBUGGER");
DEFINE_SYMBOL(kernel_function_p, PACKAGE_SYS, "KERNEL-FUNCTION-P");
DEFINE_SYMBOL(keyword_package, PACKAGE_SYS, "+KEYWORD-PACKAGE+");
DEFINE_SYMBOL(lambda_expression_p, PACKAGE_SYS, "LAMBDA-EXPRESSION-P");
DEFINE_SYMBOL(lambda_list_names, PACKAGE_SYS, "LAMBDA-LIST-NAMES");
DEFINE_SYMBOL(last1, PACKAGE_SYS, "LAST1");
DEFINE_SYMBOL(last_special_binding_offset, PACKAGE_SYS, "+LAST-SPECIAL-BINDING-OFFSET+");
DEFINE_SYMBOL(layout, PACKAGE_SYS, "LAYOUT");
DEFINE_SYMBOL(layout_class, PACKAGE_SYS, "LAYOUT-CLASS");
DEFINE_SYMBOL(layout_invalid_p, PACKAGE_SYS, "LAYOUT-INVALID-P");
DEFINE_SYMBOL(layout_slot_location, PACKAGE_SYS, "LAYOUT-SLOT-LOCATION");
DEFINE_SYMBOL(layout_slot_names, PACKAGE_SYS, "LAYOUT-SLOT-NAMES");
DEFINE_SYMBOL(le_2, PACKAGE_SYS, "TWO-ARG-<=");
DEFINE_SYMBOL(length_eql, PACKAGE_SYS, "LENGTH-EQL");
DEFINE_SYMBOL(lisp_object, PACKAGE_SYS, "LISP-OBJECT");
DEFINE_SYMBOL(list1, PACKAGE_SYS, "LIST1");
DEFINE_SYMBOL(list2, PACKAGE_SYS, "LIST2");
DEFINE_SYMBOL(list3, PACKAGE_SYS, "LIST3");
DEFINE_SYMBOL(list4, PACKAGE_SYS, "LIST4");
DEFINE_SYMBOL(list5, PACKAGE_SYS, "LIST5");
DEFINE_SYMBOL(list_delete_eq, PACKAGE_SYS, "LIST-DELETE-EQ");
DEFINE_SYMBOL(list_delete_eql, PACKAGE_SYS, "LIST-DELETE-EQL");
DEFINE_SYMBOL(list_directory, PACKAGE_SYS, "LIST-DIRECTORY");
DEFINE_SYMBOL(list_elt, PACKAGE_SYS, "LIST-ELT");
DEFINE_SYMBOL(list_find_eq, PACKAGE_SYS, "LIST-FIND-EQ");
DEFINE_SYMBOL(list_find_eql, PACKAGE_SYS, "LIST-FIND-EQL");
DEFINE_SYMBOL(list_lowtag, PACKAGE_SYS, "+LIST-LOWTAG+");
DEFINE_SYMBOL(list_position_eql, PACKAGE_SYS, "LIST-POSITION-EQL");
DEFINE_SYMBOL(load_stream, PACKAGE_SYS, "LOAD-STREAM");
DEFINE_SYMBOL(_load_stream_, PACKAGE_SYS, "*LOAD-STREAM*");
DEFINE_SYMBOL(load_system_file, PACKAGE_SYS, "LOAD-SYSTEM-FILE");
DEFINE_SYMBOL(logical_namestring_p, PACKAGE_SYS, "LOGICAL-NAMESTRING-P");
DEFINE_SYMBOL(logical_pathname_p, PACKAGE_SYS, "LOGICAL-PATHNAME-P");
DEFINE_SYMBOL(logical_pathname_translation_table, PACKAGE_SYS, "+LOGICAL-PATHNAME-TRANSLATION-TABLE+");
DEFINE_SYMBOL(lowtag_mask, PACKAGE_SYS, "+LOWTAG-MASK+");
DEFINE_SYMBOL(lt_2, PACKAGE_SYS, "TWO-ARG-<");
DEFINE_SYMBOL(macro, PACKAGE_SYS, "MACRO");
DEFINE_SYMBOL(make_array_internal, PACKAGE_SYS, "%MAKE-ARRAY");
DEFINE_SYMBOL(make_code_vector, PACKAGE_SYS, "MAKE-CODE-VECTOR");
DEFINE_SYMBOL(make_closure_template_function, PACKAGE_SYS, "MAKE-CLOSURE-TEMPLATE-FUNCTION");
DEFINE_SYMBOL(make_compiled_closure, PACKAGE_SYS, "MAKE-COMPILED-CLOSURE");
DEFINE_SYMBOL(make_compiled_function, PACKAGE_SYS, "MAKE-COMPILED-FUNCTION");
DEFINE_SYMBOL(make_condition_internal, PACKAGE_SYS, "%MAKE-CONDITION");
DEFINE_SYMBOL(make_environment, PACKAGE_SYS, "MAKE-ENVIRONMENT");
DEFINE_SYMBOL(make_expander_for_macrolet, PACKAGE_SYS, "MAKE-EXPANDER-FOR-MACROLET");
DEFINE_SYMBOL(make_file_stream, PACKAGE_SYS, "MAKE-FILE-STREAM");
DEFINE_SYMBOL(make_fill_pointer_output_stream, PACKAGE_SYS, "MAKE-FILL-POINTER-OUTPUT-STREAM");
DEFINE_SYMBOL(make_hash_table_internal, PACKAGE_SYS, "%MAKE-HASH-TABLE");
DEFINE_SYMBOL(make_instances_obsolete_internal, PACKAGE_SYS, "%MAKE-INSTANCES-OBSOLETE");
DEFINE_SYMBOL(make_keyword, PACKAGE_SYS, "MAKE-KEYWORD");
DEFINE_SYMBOL(make_layout, PACKAGE_SYS, "MAKE-LAYOUT");
DEFINE_SYMBOL(make_list_internal, PACKAGE_SYS, "%MAKE-LIST");
DEFINE_SYMBOL(make_logical_pathname, PACKAGE_SYS, "MAKE-LOGICAL-PATHNAME");
DEFINE_SYMBOL(make_macro, PACKAGE_SYS, "MAKE-MACRO");
DEFINE_SYMBOL(make_mutex_internal, PACKAGE_SYS, "%MAKE-MUTEX");
DEFINE_SYMBOL(make_package_internal, PACKAGE_SYS, "%MAKE-PACKAGE");
DEFINE_SYMBOL(make_primitive, PACKAGE_SYS, "MAKE-PRIMITIVE");
DEFINE_SYMBOL(make_restart_internal, PACKAGE_SYS, "%MAKE-RESTART");
DEFINE_SYMBOL(make_simple_vector, PACKAGE_SYS, "MAKE-SIMPLE-VECTOR");
DEFINE_SYMBOL(make_simple_bit_vector, PACKAGE_SYS, "MAKE-SIMPLE-BIT-VECTOR");
DEFINE_SYMBOL(make_socket_internal, PACKAGE_SYS, "%MAKE-SOCKET");
DEFINE_SYMBOL(make_string_internal, PACKAGE_SYS, "%MAKE-STRING");
DEFINE_SYMBOL(make_string_output_stream_internal, PACKAGE_SYS, "%MAKE-STRING-OUTPUT-STREAM");
DEFINE_SYMBOL(make_structure_class, PACKAGE_SYS, "MAKE-STRUCTURE-CLASS");
DEFINE_SYMBOL(make_structure_slot_definition_internal, PACKAGE_SYS, "%MAKE-STRUCTURE-SLOT-DEFINITION");
DEFINE_SYMBOL(make_symbol_macro, PACKAGE_SYS, "MAKE-SYMBOL-MACRO");
DEFINE_SYMBOL(make_thread_internal, PACKAGE_SYS, "%MAKE-THREAD");
DEFINE_SYMBOL(mapc2, PACKAGE_SYS, "MAPC2");
DEFINE_SYMBOL(mapcar2, PACKAGE_SYS, "MAPCAR2");
DEFINE_SYMBOL(maybe_load_system_file, PACKAGE_SYS, "MAYBE-LOAD-SYSTEM-FILE");
DEFINE_SYMBOL(member_internal, PACKAGE_SYS, "%MEMBER");
DEFINE_SYMBOL(mkdir, PACKAGE_SYS, "MKDIR");
DEFINE_SYMBOL(mref_32, PACKAGE_SYS, "MREF-32");
DEFINE_SYMBOL(mref_32_signed, PACKAGE_SYS, "MREF-32-SIGNED");
#ifdef __x86_64__
DEFINE_SYMBOL(mref_64, PACKAGE_SYS, "MREF-64");
#endif
DEFINE_SYMBOL(mref_8, PACKAGE_SYS, "MREF-8");
DEFINE_SYMBOL(mref_8_signed, PACKAGE_SYS, "MREF-8-SIGNED");
DEFINE_SYMBOL(negate, PACKAGE_SYS, "NEGATE");
DEFINE_SYMBOL(nil_vector, PACKAGE_SYS, "NIL-VECTOR");
DEFINE_SYMBOL(not_equals_2, PACKAGE_SYS, "TWO-ARG-/=");
DEFINE_SYMBOL(nstring_capitalize_internal, PACKAGE_SYS, "%NSTRING-CAPITALIZE");
DEFINE_SYMBOL(nstring_downcase_internal, PACKAGE_SYS, "%NSTRING-DOWNCASE");
DEFINE_SYMBOL(nstring_upcase_internal, PACKAGE_SYS, "%NSTRING-UPCASE");
DEFINE_SYMBOL(output_object, PACKAGE_SYS, "OUTPUT-OBJECT");
DEFINE_SYMBOL(package_external_symbols, PACKAGE_SYS, "PACKAGE-EXTERNAL-SYMBOLS");
DEFINE_SYMBOL(package_inherited_symbols, PACKAGE_SYS, "PACKAGE-INHERITED-SYMBOLS");
DEFINE_SYMBOL(package_internal_symbols, PACKAGE_SYS, "PACKAGE-INTERNAL-SYMBOLS");
DEFINE_SYMBOL(package_symbols, PACKAGE_SYS, "PACKAGE-SYMBOLS");
DEFINE_SYMBOL(parse_body, PACKAGE_SYS, "PARSE-BODY");
DEFINE_SYMBOL(parse_lambda_list, PACKAGE_SYS, "PARSE-LAMBDA-LIST");
DEFINE_SYMBOL(parse_namestring_internal, PACKAGE_SYS, "%PARSE-NAMESTRING");
DEFINE_SYMBOL(position_eql, PACKAGE_SYS, "POSITION-EQL");
DEFINE_SYMBOL(primitive_format, PACKAGE_SYS, "PRIMITIVE-FORMAT");
DEFINE_SYMBOL(print_fasl, PACKAGE_SYS, "*PRINT-FASL*");
DEFINE_SYMBOL(print_restart, PACKAGE_SYS, "PRINT-RESTART");
DEFINE_SYMBOL(proclaim_special, PACKAGE_SYS, "PROCLAIM-SPECIAL");
DEFINE_SYMBOL(psxhash, PACKAGE_SYS, "PSXHASH");
DEFINE_SYMBOL(put, PACKAGE_SYS, "PUT");
DEFINE_SYMBOL(putf, PACKAGE_SYS, "PUTF");
DEFINE_SYMBOL(puthash, PACKAGE_SYS, "PUTHASH");
DEFINE_SYMBOL(puthash3, PACKAGE_SYS, "PUTHASH3");
DEFINE_SYMBOL(puthash4, PACKAGE_SYS, "PUTHASH4");
DEFINE_SYMBOL(quoted_form_p, PACKAGE_SYS, "QUOTED-FORM-P");
DEFINE_SYMBOL(ratiop, PACKAGE_SYS, "RATIOP");
DEFINE_SYMBOL(read_8_bits, PACKAGE_SYS, "READ-8-BITS");
DEFINE_SYMBOL(read_backquote, PACKAGE_SYS, "READ-BACKQUOTE");   // REVIEW
DEFINE_SYMBOL(read_comma, PACKAGE_SYS, "READ-COMMA");           // REVIEW
DEFINE_SYMBOL(read_comment, PACKAGE_SYS, "READ-COMMENT");
DEFINE_SYMBOL(read_conditional, PACKAGE_SYS, "READ-CONDITIONAL");
DEFINE_SYMBOL(read_dispatch_char, PACKAGE_SYS, "READ-DISPATCH-CHAR");
DEFINE_SYMBOL(read_from_string_internal, PACKAGE_SYS, "%READ-FROM-STRING");
DEFINE_SYMBOL(read_list, PACKAGE_SYS, "READ-LIST");
DEFINE_SYMBOL(read_quote, PACKAGE_SYS, "READ-QUOTE");
DEFINE_SYMBOL(read_right_paren, PACKAGE_SYS, "READ-RIGHT-PAREN");
DEFINE_SYMBOL(read_string, PACKAGE_SYS, "READ-STRING");
DEFINE_SYMBOL(real_acos, PACKAGE_SYS, "REAL-ACOS");
DEFINE_SYMBOL(real_acosh, PACKAGE_SYS, "REAL-ACOSH");
DEFINE_SYMBOL(real_asin, PACKAGE_SYS, "REAL-ASIN");
DEFINE_SYMBOL(real_asinh, PACKAGE_SYS, "REAL-ASINH");
DEFINE_SYMBOL(real_atanh, PACKAGE_SYS, "REAL-ATANH");
DEFINE_SYMBOL(real_cosh, PACKAGE_SYS, "REAL-COSH");
DEFINE_SYMBOL(real_sinh, PACKAGE_SYS, "REAL-SINH");
DEFINE_SYMBOL(real_tanh, PACKAGE_SYS, "REAL-TANH");
DEFINE_SYMBOL(record_source_information, PACKAGE_SYS, "RECORD-SOURCE-INFORMATION");
DEFINE_SYMBOL(require_boolean, PACKAGE_SYS, "REQUIRE-BOOLEAN");
DEFINE_SYMBOL(require_character, PACKAGE_SYS, "REQUIRE-CHARACTER");
DEFINE_SYMBOL(require_cons, PACKAGE_SYS, "REQUIRE-CONS");
DEFINE_SYMBOL(require_fixnum, PACKAGE_SYS, "REQUIRE-FIXNUM");
DEFINE_SYMBOL(require_function, PACKAGE_SYS, "REQUIRE-FUNCTION");
DEFINE_SYMBOL(require_hash_table, PACKAGE_SYS, "REQUIRE-HASH-TABLE");
DEFINE_SYMBOL(require_integer, PACKAGE_SYS, "REQUIRE-INTEGER");
DEFINE_SYMBOL(require_keyword, PACKAGE_SYS, "REQUIRE-KEYWORD");
DEFINE_SYMBOL(require_list, PACKAGE_SYS, "REQUIRE-LIST");
DEFINE_SYMBOL(require_number, PACKAGE_SYS, "REQUIRE-NUMBER");
DEFINE_SYMBOL(require_simple_bit_vector, PACKAGE_SYS, "REQUIRE-SIMPLE-BIT-VECTOR");
DEFINE_SYMBOL(require_simple_string, PACKAGE_SYS, "REQUIRE-SIMPLE-STRING");
DEFINE_SYMBOL(require_simple_vector, PACKAGE_SYS, "REQUIRE-SIMPLE-VECTOR");
DEFINE_SYMBOL(require_stream, PACKAGE_SYS, "REQUIRE-STREAM");
DEFINE_SYMBOL(require_string, PACKAGE_SYS, "REQUIRE-STRING");
DEFINE_SYMBOL(require_structure_type, PACKAGE_SYS, "REQUIRE-STRUCTURE-TYPE");
DEFINE_SYMBOL(require_symbol, PACKAGE_SYS, "REQUIRE-SYMBOL");
DEFINE_SYMBOL(require_type, PACKAGE_SYS, "REQUIRE-TYPE");
DEFINE_SYMBOL(require_ub32, PACKAGE_SYS, "REQUIRE-UB32");
DEFINE_SYMBOL(require_unsigned_byte, PACKAGE_SYS, "REQUIRE-UNSIGNED-BYTE");
DEFINE_SYMBOL(require_vector, PACKAGE_SYS, "REQUIRE-VECTOR");
DEFINE_SYMBOL(restart_function, PACKAGE_SYS, "RESTART-FUNCTION");
DEFINE_SYMBOL(restart_report_function, PACKAGE_SYS, "RESTART-REPORT-FUNCTION");
DEFINE_SYMBOL(restart_interactive_function, PACKAGE_SYS, "RESTART-INTERACTIVE-FUNCTION");
DEFINE_SYMBOL(restart_test_function, PACKAGE_SYS, "RESTART-TEST-FUNCTION");
DEFINE_SYMBOL(row_major_aset, PACKAGE_SYS, "ROW-MAJOR-ASET");
DEFINE_SYMBOL(runtime_names, PACKAGE_SYS, "*RUNTIME-NAMES*");
DEFINE_SYMBOL(run_shell_command_internal, PACKAGE_SYS, "%RUN-SHELL-COMMAND");
DEFINE_SYMBOL(_safety_, PACKAGE_SYS, "*SAFETY*");
DEFINE_SYMBOL(saved_bp, PACKAGE_SYS, "*SAVED-BP*");
DEFINE_SYMBOL(saved_stack, PACKAGE_SYS, "*SAVED-STACK*");
DEFINE_SYMBOL(sbit1, PACKAGE_SYS, "SBIT1");
DEFINE_SYMBOL(set_char, PACKAGE_SYS, "SET-CHAR");
DEFINE_SYMBOL(set_charpos, PACKAGE_SYS, "SET-CHARPOS");
DEFINE_SYMBOL(set_documentation_internal, PACKAGE_SYS, "%SET-DOCUMENTATION");
DEFINE_SYMBOL(set_fdefinition, PACKAGE_SYS, "SET-FDEFINITION");
DEFINE_SYMBOL(set_fill_pointer, PACKAGE_SYS, "SET-FILL-POINTER");
DEFINE_SYMBOL(set_find_class, PACKAGE_SYS, "SET-FIND-CLASS");
DEFINE_SYMBOL(set_function_call_count, PACKAGE_SYS, "SET-FUNCTION-CALL-COUNT");
DEFINE_SYMBOL(set_function_code_size, PACKAGE_SYS, "SET-FUNCTION-CODE-SIZE");
DEFINE_SYMBOL(set_function_plist, PACKAGE_SYS, "SET-FUNCTION-PLIST");
DEFINE_SYMBOL(set_macro_function, PACKAGE_SYS, "SET-MACRO-FUNCTION");
DEFINE_SYMBOL(set_nth, PACKAGE_SYS, "SET-NTH");
DEFINE_SYMBOL(set_readtable_case, PACKAGE_SYS, "SET-READTABLE-CASE");
DEFINE_SYMBOL(set_sbit, PACKAGE_SYS, "SET-SBIT");
DEFINE_SYMBOL(set_sbit1, PACKAGE_SYS, "SET-SBIT1");
DEFINE_SYMBOL(set_schar, PACKAGE_SYS, "SET-SCHAR");
DEFINE_SYMBOL(set_slot_index, PACKAGE_SYS, "SET-SLOT-INDEX");
DEFINE_SYMBOL(set_slot_initform, PACKAGE_SYS, "SET-SLOT-INITFORM");
DEFINE_SYMBOL(set_slot_reader, PACKAGE_SYS, "SET-SLOT-READER");
DEFINE_SYMBOL(set_std_instance_layout, PACKAGE_SYS, "SET-STD-INSTANCE-LAYOUT");
DEFINE_SYMBOL(set_std_instance_slot_value, PACKAGE_SYS, "SET-STD-INSTANCE-SLOT-VALUE");
DEFINE_SYMBOL(set_symbol_function, PACKAGE_SYS, "SET-SYMBOL-FUNCTION");
DEFINE_SYMBOL(set_symbol_global_value, PACKAGE_SYS, "SET-SYMBOL-GLOBAL-VALUE");
DEFINE_SYMBOL(set_symbol_plist, PACKAGE_SYS, "SET-SYMBOL-PLIST");
DEFINE_SYMBOL(setcar, PACKAGE_SYS, "SETCAR");
DEFINE_SYMBOL(setcdr, PACKAGE_SYS, "SETCDR");
DEFINE_SYMBOL(setelt, PACKAGE_SYS, "SETELT");
DEFINE_SYMBOL(setf_function, PACKAGE_SYS, "SETF-FUNCTION");
DEFINE_SYMBOL(setf_function_name_p, PACKAGE_SYS, "SETF-FUNCTION-NAME-P");
DEFINE_SYMBOL(setf_inverse, PACKAGE_SYS, "SETF-INVERSE");
DEFINE_SYMBOL(sharp_a, PACKAGE_SYS, "SHARP-A");
DEFINE_SYMBOL(sharp_b, PACKAGE_SYS, "SHARP-B");
DEFINE_SYMBOL(sharp_backslash, PACKAGE_SYS, "SHARP-BACKSLASH");
DEFINE_SYMBOL(sharp_c, PACKAGE_SYS, "SHARP-C");
DEFINE_SYMBOL(sharp_colon, PACKAGE_SYS, "SHARP-COLON");
DEFINE_SYMBOL(sharp_dot, PACKAGE_SYS, "SHARP-DOT");
DEFINE_SYMBOL(sharp_illegal, PACKAGE_SYS, "SHARP-ILLEGAL");
DEFINE_SYMBOL(sharp_left_paren, PACKAGE_SYS, "SHARP-LEFT-PAREN");
DEFINE_SYMBOL(sharp_o, PACKAGE_SYS, "SHARP-O");
DEFINE_SYMBOL(sharp_p, PACKAGE_SYS, "SHARP-P");
DEFINE_SYMBOL(sharp_quote, PACKAGE_SYS, "SHARP-QUOTE");
DEFINE_SYMBOL(sharp_r, PACKAGE_SYS, "SHARP-R");
DEFINE_SYMBOL(sharp_s, PACKAGE_SYS, "SHARP-S");
DEFINE_SYMBOL(sharp_star, PACKAGE_SYS, "SHARP-STAR");
DEFINE_SYMBOL(sharp_vertical_bar, PACKAGE_SYS, "SHARP-VERTICAL-BAR");
DEFINE_SYMBOL(sharp_x, PACKAGE_SYS, "SHARP-X");
DEFINE_SYMBOL(print_control_frames, PACKAGE_SYS, "PRINT-CONTROL-FRAMES");
DEFINE_SYMBOL(simple_array_p, PACKAGE_SYS, "SIMPLE-ARRAY-P");
DEFINE_SYMBOL(simple_bit_vector_bit_and, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-AND");
DEFINE_SYMBOL(simple_bit_vector_bit_andc1, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-ANDC1");
DEFINE_SYMBOL(simple_bit_vector_bit_andc2, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-ANDC2");
DEFINE_SYMBOL(simple_bit_vector_data_offset, PACKAGE_SYS, "+SIMPLE-BIT-VECTOR-DATA-OFFSET+");
DEFINE_SYMBOL(simple_bit_vector_bit_eqv, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-EQV");
DEFINE_SYMBOL(simple_bit_vector_bit_ior, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-IOR");
DEFINE_SYMBOL(simple_bit_vector_bit_nand, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-NAND");
DEFINE_SYMBOL(simple_bit_vector_bit_nor, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-NOR");
DEFINE_SYMBOL(simple_bit_vector_bit_not, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-NOT");
DEFINE_SYMBOL(simple_bit_vector_bit_orc1, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-ORC1");
DEFINE_SYMBOL(simple_bit_vector_bit_orc2, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-ORC2");
DEFINE_SYMBOL(simple_bit_vector_bit_xor, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-BIT-XOR");
DEFINE_SYMBOL(simple_bit_vector_equal, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-EQUAL");
DEFINE_SYMBOL(simple_bit_vector_fill, PACKAGE_SYS, "SIMPLE-BIT-VECTOR-FILL");
DEFINE_SYMBOL(simple_bit_vector_widetag, PACKAGE_SYS, "+SIMPLE-BIT-VECTOR-WIDETAG+");
DEFINE_SYMBOL(simple_string_data_offset, PACKAGE_SYS, "+SIMPLE-STRING-DATA-OFFSET+");
DEFINE_SYMBOL(simple_string_widetag, PACKAGE_SYS, "+SIMPLE-STRING-WIDETAG+");
DEFINE_SYMBOL(simple_vector_data_offset, PACKAGE_SYS, "+SIMPLE-VECTOR-DATA-OFFSET+");
DEFINE_SYMBOL(simple_vector_widetag, PACKAGE_SYS, "+SIMPLE-VECTOR-WIDETAG+");
DEFINE_SYMBOL(single_float_bits, PACKAGE_SYS, "SINGLE-FLOAT-BITS");
DEFINE_SYMBOL(single_float_p, PACKAGE_SYS, "SINGLE-FLOAT-P");
DEFINE_SYMBOL(slot_index, PACKAGE_SYS, "SLOT-INDEX");
DEFINE_SYMBOL(slot_initform, PACKAGE_SYS, "SLOT-INITFORM");
DEFINE_SYMBOL(slot_name, PACKAGE_SYS, "SLOT-NAME");
DEFINE_SYMBOL(slot_read_only_p, PACKAGE_SYS, "SLOT-READ-ONLY-P");
DEFINE_SYMBOL(slot_reader, PACKAGE_SYS, "SLOT-READER");
DEFINE_SYMBOL(slot_type, PACKAGE_SYS, "SLOT-TYPE");
DEFINE_SYMBOL(source_file, PACKAGE_SYS, "*SOURCE-FILE*");
DEFINE_SYMBOL(source_internal, PACKAGE_SYS, "%SOURCE");
DEFINE_SYMBOL(source_position, PACKAGE_SYS, "*SOURCE-POSITION*");
DEFINE_SYMBOL(_space_, PACKAGE_SYS, "*SPACE*");
DEFINE_SYMBOL(special_bindings, PACKAGE_SYS, "SPECIAL-BINDINGS");
DEFINE_SYMBOL(_speed_, PACKAGE_SYS, "*SPEED*");
DEFINE_SYMBOL(standard_object_p, PACKAGE_SYS, "STANDARD-OBJECT-P");
DEFINE_SYMBOL(standard_readtable, PACKAGE_SYS, "*STANDARD-READTABLE*");
DEFINE_SYMBOL(std_instance_layout, PACKAGE_SYS, "STD-INSTANCE-LAYOUT");
DEFINE_SYMBOL(std_instance_slot_value, PACKAGE_SYS, "STD-INSTANCE-SLOT-VALUE");
DEFINE_SYMBOL(stream_charpos_internal, PACKAGE_SYS, "%STREAM-CHARPOS");
DEFINE_SYMBOL(stream_fresh_line_internal, PACKAGE_SYS, "%STREAM-FRESH-LINE");
DEFINE_SYMBOL(stream_princ_internal, PACKAGE_SYS, "%STREAM-PRINC");
DEFINE_SYMBOL(stream_read_byte_function, PACKAGE_SYS, "STREAM-READ-BYTE-FUNCTION");
DEFINE_SYMBOL(stream_read_internal, PACKAGE_SYS, "%STREAM-READ");
DEFINE_SYMBOL(stream_set_charpos_internal, PACKAGE_SYS, "%STREAM-SET-CHARPOS");
DEFINE_SYMBOL(stream_terpri_internal, PACKAGE_SYS, "%STREAM-TERPRI");
DEFINE_SYMBOL(stream_write_char_internal, PACKAGE_SYS, "%STREAM-WRITE-CHAR");
DEFINE_SYMBOL(stream_write_object_internal, PACKAGE_SYS, "%STREAM-WRITE-OBJECT");
DEFINE_SYMBOL(stream_write_string_internal, PACKAGE_SYS, "%STREAM-WRITE-STRING");
DEFINE_SYMBOL(string_capitalize_internal, PACKAGE_SYS, "%STRING-CAPITALIZE");
DEFINE_SYMBOL(string_cmp, PACKAGE_SYS, "STRING-CMP");
DEFINE_SYMBOL(string_compare, PACKAGE_SYS, "STRING-COMPARE");
DEFINE_SYMBOL(string_downcase_internal, PACKAGE_SYS, "%STRING-DOWNCASE");
DEFINE_SYMBOL(string_equal_internal, PACKAGE_SYS, "%STRING=");
DEFINE_SYMBOL(string_find, PACKAGE_SYS, "STRING-FIND");
DEFINE_SYMBOL(string_input_stream, PACKAGE_SYS, "STRING-INPUT-STREAM");
DEFINE_SYMBOL(string_input_stream_current, PACKAGE_SYS, "STRING-INPUT-STREAM-CURRENT");
DEFINE_SYMBOL(string_output_stream, PACKAGE_SYS, "STRING-OUTPUT-STREAM");
DEFINE_SYMBOL(string_upcase_internal, PACKAGE_SYS, "%STRING-UPCASE");
DEFINE_SYMBOL(structure_object_p, PACKAGE_SYS, "STRUCTURE-OBJECT-P");
DEFINE_SYMBOL(structure_ref, PACKAGE_SYS, "STRUCTURE-REF");
DEFINE_SYMBOL(structure_set, PACKAGE_SYS, "STRUCTURE-SET");
DEFINE_SYMBOL(structure_slot_definition, PACKAGE_SYS, "STRUCTURE-SLOT-DEFINITION");
DEFINE_SYMBOL(structure_slots_offset, PACKAGE_SYS, "+STRUCTURE-SLOTS-OFFSET+");
DEFINE_SYMBOL(structure_typep, PACKAGE_SYS, "STRUCTURE-TYPEP");
DEFINE_SYMBOL(subseq2, PACKAGE_SYS, "SUBSEQ2");
DEFINE_SYMBOL(subseq3, PACKAGE_SYS, "SUBSEQ3");
DEFINE_SYMBOL(subsetp_eql, PACKAGE_SYS, "SUBSETP-EQL");
DEFINE_SYMBOL(svset, PACKAGE_SYS, "SVSET");
DEFINE_SYMBOL(swap_slots, PACKAGE_SYS, "SWAP-SLOTS");
DEFINE_SYMBOL(symbol_flags, PACKAGE_SYS, "SYMBOL-FLAGS");
DEFINE_SYMBOL(symbol_global_value, PACKAGE_SYS, "SYMBOL-GLOBAL-VALUE");
DEFINE_SYMBOL(symbol_lowtag, PACKAGE_SYS, "+SYMBOL-LOWTAG+");
DEFINE_SYMBOL(symbol_name_offset, PACKAGE_SYS, "+SYMBOL-NAME-OFFSET+");
DEFINE_SYMBOL(symbol_package_offset, PACKAGE_SYS, "+SYMBOL-PACKAGE-OFFSET+");
DEFINE_SYMBOL(symbol_value_offset, PACKAGE_SYS, "+SYMBOL-VALUE-OFFSET+");
DEFINE_SYMBOL(system_package, PACKAGE_SYS, "+SYSTEM-PACKAGE+");
DEFINE_SYMBOL(traced_names, PACKAGE_SYS, "*TRACED-NAMES*");
DEFINE_SYMBOL(trace_redefined_update, PACKAGE_SYS, "TRACE-REDEFINED-UPDATE");
DEFINE_SYMBOL(truly_the, PACKAGE_SYS, "TRULY-THE");
DEFINE_SYMBOL(truncate_1, PACKAGE_SYS, "TRUNCATE-1");
DEFINE_SYMBOL(truncate_2, PACKAGE_SYS, "TRUNCATE-2");
DEFINE_SYMBOL(typed_object, PACKAGE_SYS, "TYPED-OBJECT"); // REVIEW check_typed_object()
DEFINE_SYMBOL(two_arg_append, PACKAGE_SYS, "TWO-ARG-APPEND");
DEFINE_SYMBOL(two_arg_char_e, PACKAGE_SYS, "TWO-ARG-CHAR=");
DEFINE_SYMBOL(two_arg_char_equal, PACKAGE_SYS, "TWO-ARG-CHAR-EQUAL");
DEFINE_SYMBOL(two_arg_char_ge, PACKAGE_SYS, "TWO-ARG-CHAR>=");
DEFINE_SYMBOL(two_arg_char_gt, PACKAGE_SYS, "TWO-ARG-CHAR>");
DEFINE_SYMBOL(two_arg_char_le, PACKAGE_SYS, "TWO-ARG-CHAR<=");
DEFINE_SYMBOL(two_arg_char_lt, PACKAGE_SYS, "TWO-ARG-CHAR<");
DEFINE_SYMBOL(two_arg_char_ne, PACKAGE_SYS, "TWO-ARG-CHAR/=");
DEFINE_SYMBOL(two_arg_logand, PACKAGE_SYS, "TWO-ARG-LOGAND");
DEFINE_SYMBOL(two_arg_logior, PACKAGE_SYS, "TWO-ARG-LOGIOR");
DEFINE_SYMBOL(two_arg_logxor, PACKAGE_SYS, "TWO-ARG-LOGXOR");
DEFINE_SYMBOL(two_arg_max, PACKAGE_SYS, "TWO-ARG-MAX");
DEFINE_SYMBOL(two_arg_min, PACKAGE_SYS, "TWO-ARG-MIN");
DEFINE_SYMBOL(two_arg_minus, PACKAGE_SYS, "TWO-ARG--");
DEFINE_SYMBOL(two_arg_operators, PACKAGE_SYS, "+TWO-ARG-OPERATORS+");
DEFINE_SYMBOL(two_arg_plus, PACKAGE_SYS, "TWO-ARG-+");
DEFINE_SYMBOL(two_arg_slash, PACKAGE_SYS, "TWO-ARG-/");
DEFINE_SYMBOL(two_arg_star, PACKAGE_SYS, "TWO-ARG-*");
DEFINE_SYMBOL(type_error_internal, PACKAGE_SYS, "%TYPE-ERROR");
DEFINE_SYMBOL(typed_object_lowtag, PACKAGE_SYS, "+TYPED-OBJECT-LOWTAG+");
DEFINE_SYMBOL(unbound_marker, PACKAGE_SYS, "+UNBOUND-MARKER+");
DEFINE_SYMBOL(untraced_function, PACKAGE_SYS, "UNTRACED-FUNCTION");
DEFINE_SYMBOL(uptime, PACKAGE_SYS, "UPTIME");
DEFINE_SYMBOL(upgraded_array_element_type_internal, PACKAGE_SYS, "%UPGRADED-ARRAY-ELEMENT-TYPE");
DEFINE_SYMBOL(valid_function_name_p, PACKAGE_SYS, "VALID-FUNCTION-NAME-P");
#ifdef __x86_64__
DEFINE_SYMBOL(value_to_ub64, PACKAGE_SYS, "VALUE-TO-UB64");
#else
DEFINE_SYMBOL(value_to_ub32, PACKAGE_SYS, "VALUE-TO-UB32");
#endif
DEFINE_SYMBOL(values_length_offset, PACKAGE_SYS, "+VALUES-LENGTH-OFFSET+");
DEFINE_SYMBOL(values_offset, PACKAGE_SYS, "+VALUES-OFFSET+");
DEFINE_SYMBOL(vector2, PACKAGE_SYS, "VECTOR2");
DEFINE_SYMBOL(vector3, PACKAGE_SYS, "VECTOR3");
DEFINE_SYMBOL(vector_capacity_offset, PACKAGE_SYS, "+VECTOR-CAPACITY-OFFSET+");
DEFINE_SYMBOL(vector_data, PACKAGE_SYS, "VECTOR-DATA");
DEFINE_SYMBOL(vector_elt_internal, PACKAGE_SYS, "%VECTOR-ELT");
DEFINE_SYMBOL(vector_length, PACKAGE_SYS, "VECTOR-LENGTH");
DEFINE_SYMBOL(vector_length_internal, PACKAGE_SYS, "%VECTOR-LENGTH");
DEFINE_SYMBOL(vector_position_eql, PACKAGE_SYS, "VECTOR-POSITION-EQL");
DEFINE_SYMBOL(vector_push_extend_2, PACKAGE_SYS, "VECTOR-PUSH-EXTEND-2");
DEFINE_SYMBOL(vector_push_extend_3, PACKAGE_SYS, "VECTOR-PUSH-EXTEND-3");
DEFINE_SYMBOL(vector_ref, PACKAGE_SYS, "VECTOR-REF");
DEFINE_SYMBOL(vector_set, PACKAGE_SYS, "VECTOR-SET");
DEFINE_SYMBOL(verify_call, PACKAGE_SYS, "VERIFY-CALL");
DEFINE_SYMBOL(whitespacep, PACKAGE_SYS, "WHITESPACEP");
DEFINE_SYMBOL(widetag_offset, PACKAGE_SYS, "+WIDETAG-OFFSET+");
DEFINE_SYMBOL(widetag_function_bit, PACKAGE_SYS, "+WIDETAG-FUNCTION-BIT+");
DEFINE_SYMBOL(widetag_stream_bit, PACKAGE_SYS, "+WIDETAG-STREAM-BIT+");
DEFINE_SYMBOL(widetag_vector_bit, PACKAGE_SYS, "+WIDETAG-VECTOR-BIT+");
DEFINE_SYMBOL(without_gcing, PACKAGE_SYS, "WITHOUT-GCING");
DEFINE_SYMBOL(write_8_bits, PACKAGE_SYS, "WRITE-8-BITS");
DEFINE_SYMBOL(write_string_internal, PACKAGE_SYS, "%WRITE-STRING");
DEFINE_SYMBOL(write_to_string_internal, PACKAGE_SYS, "%WRITE-TO-STRING");
DEFINE_SYMBOL(xcaddr, PACKAGE_SYS, "%CADDR");
DEFINE_SYMBOL(xcadr, PACKAGE_SYS, "%CADR");
DEFINE_SYMBOL(xcar, PACKAGE_SYS, "%CAR");
DEFINE_SYMBOL(xcddr, PACKAGE_SYS, "%CDDR");
DEFINE_SYMBOL(xcdr, PACKAGE_SYS, "%CDR");
DEFINE_SYMBOL(xclass_precedence_list, PACKAGE_SYS, "%CLASS-PRECEDENCE-LIST");
DEFINE_SYMBOL(xdpb, PACKAGE_SYS, "%DPB");
DEFINE_SYMBOL(xgethash2_1, PACKAGE_SYS, "%GETHASH2-1");
DEFINE_SYMBOL(xinspected_parts, PACKAGE_SYS, "%INSPECTED-PARTS");
DEFINE_SYMBOL(xldb, PACKAGE_SYS, "%LDB");
DEFINE_SYMBOL(xlist_length, PACKAGE_SYS, "%LIST-LENGTH");
DEFINE_SYMBOL(xmake_structure, PACKAGE_SYS, "%MAKE-STRUCTURE");
DEFINE_SYMBOL(xrplaca, PACKAGE_SYS, "%RPLACA");
DEFINE_SYMBOL(xrplacd, PACKAGE_SYS, "%RPLACD");
DEFINE_SYMBOL(xsbit1, PACKAGE_SYS, "%SBIT1");
DEFINE_SYMBOL(xschar, PACKAGE_SYS, "%SCHAR");
DEFINE_SYMBOL(xset_sbit1, PACKAGE_SYS, "%SET-SBIT1");
DEFINE_SYMBOL(xsetcar, PACKAGE_SYS, "%SETCAR");
DEFINE_SYMBOL(xsetcdr, PACKAGE_SYS, "%SETCDR");
DEFINE_SYMBOL(xstandard_char_p, PACKAGE_SYS, "%STANDARD-CHAR-P");
DEFINE_SYMBOL(xsvref, PACKAGE_SYS, "%SVREF");
DEFINE_SYMBOL(xsvset, PACKAGE_SYS, "%SVSET");
DEFINE_SYMBOL(xtypep, PACKAGE_SYS, "%TYPEP");
DEFINE_SYMBOL(xvector_ref, PACKAGE_SYS, "%VECTOR-REF");
DEFINE_SYMBOL(xvector_set, PACKAGE_SYS, "%VECTOR-SET");
DEFINE_SYMBOL(xwrite_8_bits, PACKAGE_SYS, "%WRITE-8-BITS");
DEFINE_SYMBOL(xxmake_structure, PACKAGE_SYS, "%%MAKE-STRUCTURE");

// standard-class slot names
// REVIEW
DEFINE_SYMBOL(direct_methods, PACKAGE_SYS, "DIRECT-METHODS");
DEFINE_SYMBOL(prototype, PACKAGE_SYS, "PROTOTYPE");
DEFINE_SYMBOL(name, PACKAGE_SYS, "NAME");
DEFINE_SYMBOL(precedence_list, PACKAGE_SYS, "PRECEDENCE-LIST");
DEFINE_SYMBOL(direct_superclasses, PACKAGE_SYS, "DIRECT-SUPERCLASSES");
DEFINE_SYMBOL(direct_subclasses, PACKAGE_SYS, "DIRECT-SUBCLASSES");
DEFINE_SYMBOL(direct_slots, PACKAGE_SYS, "DIRECT-SLOTS");
DEFINE_SYMBOL(slots, PACKAGE_SYS, "SLOTS");
DEFINE_SYMBOL(direct_default_initargs, PACKAGE_SYS, "DIRECT-DEFAULT-INITARGS");
DEFINE_SYMBOL(default_initargs, PACKAGE_SYS, "DEFAULT-INITARGS");
DEFINE_SYMBOL(finalized_p, PACKAGE_SYS, "FINALIZED-P");

// condition slot names
// REVIEW
DEFINE_SYMBOL(datum, PACKAGE_SYS, "DATUM");
DEFINE_SYMBOL(expected_type, PACKAGE_SYS, "EXPECTED-TYPE");
DEFINE_SYMBOL(format_arguments, PACKAGE_SYS, "FORMAT-ARGUMENTS");
DEFINE_SYMBOL(format_control, PACKAGE_SYS, "FORMAT-CONTROL");
DEFINE_SYMBOL(instance, PACKAGE_SYS, "INSTANCE");
DEFINE_SYMBOL(object, PACKAGE_SYS, "OBJECT");
DEFINE_SYMBOL(operands, PACKAGE_SYS, "OPERANDS");
DEFINE_SYMBOL(operation, PACKAGE_SYS, "OPERATION");

// backquote.lisp
DEFINE_SYMBOL(backquote_count, PACKAGE_SYS, "*BACKQUOTE-COUNT*");
DEFINE_SYMBOL(backquote_comma_flag, PACKAGE_SYS, "+BQ-COMMA-FLAG+");
DEFINE_SYMBOL(backquote_at_flag, PACKAGE_SYS, "+BQ-AT-FLAG+");
DEFINE_SYMBOL(backquote_dot_flag, PACKAGE_SYS, "+BQ-DOT-FLAG+");
DEFINE_SYMBOL(backquote_vector_flag, PACKAGE_SYS, "+BQ-VECTOR-FLAG+");

DEFINE_SYMBOL(backquote_macro, PACKAGE_SYS, "BACKQUOTE-MACRO");
DEFINE_SYMBOL(comma_macro, PACKAGE_SYS, "COMMA-MACRO");

// reader.lisp
DEFINE_SYMBOL(sharp_equal_circle_table, PACKAGE_SYS, "*SHARP-EQUAL-CIRCLE-TABLE*");
DEFINE_SYMBOL(sharp_equal_alist, PACKAGE_SYS, "*SHARP-EQUAL-ALIST*");
DEFINE_SYMBOL(sharp_sharp_alist, PACKAGE_SYS, "*SHARP-SHARP-ALIST*");

DEFINE_SYMBOL(method_fast_function, PACKAGE_SYS, "METHOD-FAST-FUNCTION");

// MOP
DEFINE_SYMBOL(accessor_method_slot_definition, PACKAGE_MOP, "ACCESSOR-METHOD-SLOT-DEFINITION");
DEFINE_SYMBOL(add_dependent, PACKAGE_MOP, "ADD-DEPENDENT");
DEFINE_SYMBOL(add_direct_method, PACKAGE_MOP, "ADD-DIRECT-METHOD");
DEFINE_SYMBOL(add_direct_subclass, PACKAGE_MOP, "ADD-DIRECT-SUBCLASS");
DEFINE_SYMBOL(class_default_initargs, PACKAGE_MOP, "CLASS-DEFAULT-INITARGS");
DEFINE_SYMBOL(class_direct_default_initargs, PACKAGE_MOP, "CLASS-DIRECT-DEFAULT-INITARGS");
DEFINE_SYMBOL(class_direct_slots, PACKAGE_MOP, "CLASS-DIRECT-SLOTS");
DEFINE_SYMBOL(class_direct_subclasses, PACKAGE_MOP, "CLASS-DIRECT-SUBCLASSES");
DEFINE_SYMBOL(class_direct_superclasses, PACKAGE_MOP, "CLASS-DIRECT-SUPERCLASSES");
DEFINE_SYMBOL(class_finalized_p, PACKAGE_MOP, "CLASS-FINALIZED-P");
DEFINE_SYMBOL(class_precedence_list, PACKAGE_MOP, "CLASS-PRECEDENCE-LIST");
DEFINE_SYMBOL(class_prototype, PACKAGE_MOP, "CLASS-PROTOTYPE");
DEFINE_SYMBOL(class_slots, PACKAGE_MOP, "CLASS-SLOTS");
DEFINE_SYMBOL(compute_applicable_methods_using_classes, PACKAGE_MOP, "COMPUTE-APPLICABLE-METHODS-USING-CLASSES");
DEFINE_SYMBOL(compute_class_precedence_list, PACKAGE_MOP, "COMPUTE-CLASS-PRECEDENCE-LIST");
DEFINE_SYMBOL(compute_default_initargs, PACKAGE_MOP, "COMPUTE-DEFAULT-INITARGS");
DEFINE_SYMBOL(compute_discriminating_function, PACKAGE_MOP, "COMPUTE-DISCRIMINATING-FUNCTION");
DEFINE_SYMBOL(compute_effective_method, PACKAGE_MOP, "COMPUTE-EFFECTIVE-METHOD");
DEFINE_SYMBOL(compute_effective_slot_definition, PACKAGE_MOP, "COMPUTE-EFFECTIVE-SLOT-DEFINITION");
DEFINE_SYMBOL(compute_slots, PACKAGE_MOP, "COMPUTE-SLOTS");
DEFINE_SYMBOL(direct_slot_definition, PACKAGE_MOP, "DIRECT-SLOT-DEFINITION");
DEFINE_SYMBOL(direct_slot_definition_class, PACKAGE_MOP, "DIRECT-SLOT-DEFINITION-CLASS");
DEFINE_SYMBOL(effective_slot_definition, PACKAGE_MOP, "EFFECTIVE-SLOT-DEFINITION");
DEFINE_SYMBOL(effective_slot_definition_class, PACKAGE_MOP, "EFFECTIVE-SLOT-DEFINITION-CLASS");
DEFINE_SYMBOL(ensure_class, PACKAGE_MOP, "ENSURE-CLASS");
DEFINE_SYMBOL(ensure_class_using_class, PACKAGE_MOP, "ENSURE-CLASS-USING-CLASS");
DEFINE_SYMBOL(ensure_generic_function_using_class, PACKAGE_MOP, "ENSURE-GENERIC-FUNCTION-USING-CLASS");
DEFINE_SYMBOL(eql_specializer, PACKAGE_MOP, "EQL-SPECIALIZER");
DEFINE_SYMBOL(eql_specializer_object, PACKAGE_MOP, "EQL-SPECIALIZER-OBJECT");
DEFINE_SYMBOL(extract_lambda_list, PACKAGE_MOP, "EXTRACT-LAMBDA-LIST");
DEFINE_SYMBOL(extract_specializer_names, PACKAGE_MOP, "EXTRACT-SPECIALIZER-NAMES");
DEFINE_SYMBOL(finalize_inheritance, PACKAGE_MOP, "FINALIZE-INHERITANCE");
DEFINE_SYMBOL(find_method_combination, PACKAGE_MOP, "FIND-METHOD-COMBINATION");
DEFINE_SYMBOL(forward_referenced_class, PACKAGE_MOP, "FORWARD-REFERENCED-CLASS");
DEFINE_SYMBOL(funcallable_standard_class, PACKAGE_MOP, "FUNCALLABLE-STANDARD-CLASS");
DEFINE_SYMBOL(funcallable_standard_instance_access, PACKAGE_MOP, "FUNCALLABLE-STANDARD-INSTANCE-ACCESS");
DEFINE_SYMBOL(funcallable_standard_object, PACKAGE_MOP, "FUNCALLABLE-STANDARD-OBJECT");
DEFINE_SYMBOL(generic_function_argument_precedence_order, PACKAGE_MOP, "GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER");
DEFINE_SYMBOL(generic_function_declarations, PACKAGE_MOP, "GENERIC-FUNCTION-DECLARATIONS");
DEFINE_SYMBOL(generic_function_lambda_list, PACKAGE_MOP, "GENERIC-FUNCTION-LAMBDA-LIST");
DEFINE_SYMBOL(generic_function_method_class, PACKAGE_MOP, "GENERIC-FUNCTION-METHOD-CLASS");
DEFINE_SYMBOL(generic_function_method_combination, PACKAGE_MOP, "GENERIC-FUNCTION-METHOD-COMBINATION");
DEFINE_SYMBOL(generic_function_methods, PACKAGE_MOP, "GENERIC-FUNCTION-METHODS");
DEFINE_SYMBOL(generic_function_name, PACKAGE_MOP, "GENERIC-FUNCTION-NAME");
DEFINE_SYMBOL(intern_eql_specializer, PACKAGE_MOP, "INTERN-EQL-SPECIALIZER");
DEFINE_SYMBOL(make_method_lambda, PACKAGE_MOP, "MAKE-METHOD-LAMBDA");
DEFINE_SYMBOL(map_dependents, PACKAGE_MOP, "MAP-DEPENDENTS");
DEFINE_SYMBOL(metaobject, PACKAGE_MOP, "METAOBJECT");
DEFINE_SYMBOL(method_function, PACKAGE_MOP, "METHOD-FUNCTION");
DEFINE_SYMBOL(method_generic_function, PACKAGE_MOP, "METHOD-GENERIC-FUNCTION");
DEFINE_SYMBOL(method_lambda_list, PACKAGE_MOP, "METHOD-LAMBDA-LIST");
DEFINE_SYMBOL(method_specializers, PACKAGE_MOP, "METHOD-SPECIALIZERS");
DEFINE_SYMBOL(reader_method_class, PACKAGE_MOP, "READER-METHOD-CLASS");
DEFINE_SYMBOL(remove_dependent, PACKAGE_MOP, "REMOVE-DEPENDENT");
DEFINE_SYMBOL(remove_direct_method, PACKAGE_MOP, "REMOVE-DIRECT-METHOD");
DEFINE_SYMBOL(remove_direct_subclass, PACKAGE_MOP, "REMOVE-DIRECT-SUBCLASS");
DEFINE_SYMBOL(set_funcallable_instance_function, PACKAGE_MOP, "SET-FUNCALLABLE-INSTANCE-FUNCTION");
DEFINE_SYMBOL(slot_boundp_using_class, PACKAGE_MOP, "SLOT-BOUNDP-USING-CLASS");
DEFINE_SYMBOL(slot_definition, PACKAGE_MOP, "SLOT-DEFINITION");
DEFINE_SYMBOL(slot_definition_allocation, PACKAGE_MOP, "SLOT-DEFINITION-ALLOCATION");
DEFINE_SYMBOL(slot_definition_initargs, PACKAGE_MOP, "SLOT-DEFINITION-INITARGS");
DEFINE_SYMBOL(slot_definition_initform, PACKAGE_MOP, "SLOT-DEFINITION-INITFORM");
DEFINE_SYMBOL(slot_definition_initfunction, PACKAGE_MOP, "SLOT-DEFINITION-INITFUNCTION");
DEFINE_SYMBOL(slot_definition_location, PACKAGE_MOP, "SLOT-DEFINITION-LOCATION");
DEFINE_SYMBOL(slot_definition_name, PACKAGE_MOP, "SLOT-DEFINITION-NAME");
DEFINE_SYMBOL(slot_definition_readers, PACKAGE_MOP, "SLOT-DEFINITION-READERS");
DEFINE_SYMBOL(slot_definition_type, PACKAGE_MOP, "SLOT-DEFINITION-TYPE");
DEFINE_SYMBOL(slot_definition_writers, PACKAGE_MOP, "SLOT-DEFINITION-WRITERS");
DEFINE_SYMBOL(slot_makunbound_using_class, PACKAGE_MOP, "SLOT-MAKUNBOUND-USING-CLASS");
DEFINE_SYMBOL(slot_value_using_class, PACKAGE_MOP, "SLOT-VALUE-USING-CLASS");
DEFINE_SYMBOL(specializer, PACKAGE_MOP, "SPECIALIZER");
DEFINE_SYMBOL(specializer_direct_generic_functions, PACKAGE_MOP, "SPECIALIZER-DIRECT-GENERIC-FUNCTIONS");
DEFINE_SYMBOL(specializer_direct_methods, PACKAGE_MOP, "SPECIALIZER-DIRECT-METHODS");
DEFINE_SYMBOL(standard_accessor_method, PACKAGE_MOP, "STANDARD-ACCESSOR-METHOD");
DEFINE_SYMBOL(standard_direct_slot_definition, PACKAGE_MOP, "STANDARD-DIRECT-SLOT-DEFINITION");
DEFINE_SYMBOL(standard_effective_slot_definition, PACKAGE_MOP, "STANDARD-EFFECTIVE-SLOT-DEFINITION");
DEFINE_SYMBOL(standard_instance_access, PACKAGE_MOP, "STANDARD-INSTANCE-ACCESS");
DEFINE_SYMBOL(standard_reader_method, PACKAGE_MOP, "STANDARD-READER-METHOD");
DEFINE_SYMBOL(standard_slot_definition, PACKAGE_MOP, "STANDARD-SLOT-DEFINITION");
DEFINE_SYMBOL(standard_writer_method, PACKAGE_MOP, "STANDARD-WRITER-METHOD");
DEFINE_SYMBOL(update_dependent, PACKAGE_MOP, "UPDATE-DEPENDENT");
DEFINE_SYMBOL(validate_superclass, PACKAGE_MOP, "VALIDATE-SUPERCLASS");
DEFINE_SYMBOL(writer_method_class, PACKAGE_MOP, "WRITER-METHOD-CLASS");

// REVIEW
DEFINE_SYMBOL(standard_method_combination, PACKAGE_EXT, "STANDARD-METHOD-COMBINATION");
DEFINE_SYMBOL(short_method_combination, PACKAGE_EXT, "SHORT-METHOD-COMBINATION");
DEFINE_SYMBOL(long_method_combination, PACKAGE_EXT, "LONG-METHOD-COMBINATION");

// profiler
DEFINE_SYMBOL(max_samples, PACKAGE_PROFILER, "*MAX-SAMPLES*");
DEFINE_SYMBOL(sample_interval, PACKAGE_PROFILER, "*SAMPLE-INTERVAL*");
DEFINE_SYMBOL(sample_count, PACKAGE_PROFILER, "SAMPLE-COUNT");
DEFINE_SYMBOL(samples, PACKAGE_PROFILER, "*SAMPLES*");
DEFINE_SYMBOL(sampling_mode, PACKAGE_PROFILER, "*SAMPLING-MODE*");
DEFINE_SYMBOL(start_profiler, PACKAGE_PROFILER, "START-PROFILER");
DEFINE_SYMBOL(stop_profiler, PACKAGE_PROFILER, "STOP-PROFILER");

// Gray streams
// classes
DEFINE_SYMBOL(fundamental_stream, PACKAGE_EXT, "FUNDAMENTAL-STREAM");
DEFINE_SYMBOL(fundamental_input_stream, PACKAGE_EXT, "FUNDAMENTAL-INPUT-STREAM");
DEFINE_SYMBOL(fundamental_output_stream, PACKAGE_EXT, "FUNDAMENTAL-OUTPUT-STREAM");
DEFINE_SYMBOL(fundamental_character_stream, PACKAGE_EXT, "FUNDAMENTAL-CHARACTER-STREAM");
DEFINE_SYMBOL(fundamental_binary_stream, PACKAGE_EXT, "FUNDAMENTAL-BINARY-STREAM");
DEFINE_SYMBOL(fundamental_character_input_stream, PACKAGE_EXT, "FUNDAMENTAL-CHARACTER-INPUT-STREAM");
DEFINE_SYMBOL(fundamental_character_output_stream, PACKAGE_EXT, "FUNDAMENTAL-CHARACTER-OUTPUT-STREAM");
DEFINE_SYMBOL(fundamental_binary_input_stream, PACKAGE_EXT, "FUNDAMENTAL-BINARY-INPUT-STREAM");
DEFINE_SYMBOL(fundamental_binary_output_stream, PACKAGE_EXT, "FUNDAMENTAL-BINARY-OUTPUT-STREAM");
// character input
DEFINE_SYMBOL(stream_read_char, PACKAGE_EXT, "STREAM-READ-CHAR");
DEFINE_SYMBOL(stream_unread_char, PACKAGE_EXT, "STREAM-UNREAD-CHAR");
DEFINE_SYMBOL(stream_read_char_no_hang, PACKAGE_EXT, "STREAM-READ-CHAR-NO-HANG");
DEFINE_SYMBOL(stream_peek_char, PACKAGE_EXT, "STREAM-PEEK-CHAR");
DEFINE_SYMBOL(stream_listen, PACKAGE_EXT, "STREAM-LISTEN");
DEFINE_SYMBOL(stream_read_line, PACKAGE_EXT, "STREAM-READ-LINE");
DEFINE_SYMBOL(stream_clear_input, PACKAGE_EXT, "STREAM-CLEAR-INPUT");
// character output
DEFINE_SYMBOL(stream_write_char, PACKAGE_EXT, "STREAM-WRITE-CHAR");
DEFINE_SYMBOL(stream_line_column, PACKAGE_EXT, "STREAM-LINE-COLUMN");
DEFINE_SYMBOL(stream_start_line_p, PACKAGE_EXT, "STREAM-START-LINE-P");
DEFINE_SYMBOL(stream_write_string, PACKAGE_EXT, "STREAM-WRITE-STRING");
DEFINE_SYMBOL(stream_terpri, PACKAGE_EXT, "STREAM-TERPRI");
DEFINE_SYMBOL(stream_fresh_line, PACKAGE_EXT, "STREAM-FRESH-LINE");
DEFINE_SYMBOL(stream_finish_output, PACKAGE_EXT, "STREAM-FINISH-OUTPUT");
DEFINE_SYMBOL(stream_force_output, PACKAGE_EXT, "STREAM-FORCE-OUTPUT");
DEFINE_SYMBOL(stream_clear_output, PACKAGE_EXT, "STREAM-CLEAR-OUTPUT");
DEFINE_SYMBOL(stream_advance_to_column, PACKAGE_EXT, "STREAM-ADVANCE-TO-COLUMN");
// binary streams
DEFINE_SYMBOL(stream_read_byte, PACKAGE_EXT, "STREAM-READ-BYTE");
DEFINE_SYMBOL(stream_write_byte, PACKAGE_EXT, "STREAM-WRITE-BYTE");

// top-level
DEFINE_SYMBOL(top_level_read_eval_print_loop, PACKAGE_TPL, "*TOP-LEVEL-READ-EVAL-PRINT-LOOP*");

// keywords
DEFINE_KEYWORD(abort, "ABORT");
DEFINE_KEYWORD(absolute, "ABSOLUTE");
DEFINE_KEYWORD(active, "ACTIVE");
DEFINE_KEYWORD(allow_other_keys, "ALLOW-OTHER-KEYS");
DEFINE_KEYWORD(ansi_cl, "ANSI-CL");
DEFINE_KEYWORD(append, "APPEND");
DEFINE_KEYWORD(back, "BACK");
#if defined(__FreeBSD__) || defined(__NetBSD)
DEFINE_KEYWORD(bsd, "BSD");
#endif
DEFINE_KEYWORD(capitalize, "CAPITALIZE");
DEFINE_KEYWORD(case, "CASE");
DEFINE_KEYWORD(common, "COMMON");
DEFINE_KEYWORD(common_lisp, "COMMON-LISP");
DEFINE_KEYWORD(cpu, "CPU");
DEFINE_KEYWORD(datum, "DATUM");
DEFINE_KEYWORD(default, "DEFAULT");
DEFINE_KEYWORD(defaults, "DEFAULTS");
DEFINE_KEYWORD(device, "DEVICE");
DEFINE_KEYWORD(directory, "DIRECTORY");
DEFINE_KEYWORD(downcase, "DOWNCASE");
DEFINE_KEYWORD(element_type, "ELEMENT-TYPE");
DEFINE_KEYWORD(end, "END");
DEFINE_KEYWORD(execute, "EXECUTE");
DEFINE_KEYWORD(expected_type, "EXPECTED-TYPE");
DEFINE_KEYWORD(external, "EXTERNAL");
DEFINE_KEYWORD(format_arguments, "FORMAT-ARGUMENTS");
DEFINE_KEYWORD(format_control, "FORMAT-CONTROL");
#ifdef __FreeBSD__
DEFINE_KEYWORD(freebsd, "FREEBSD");
#endif
DEFINE_KEYWORD(host, "HOST");
DEFINE_KEYWORD(inherited, "INHERITED");
DEFINE_KEYWORD(initial_element, "INITIAL-ELEMENT");
DEFINE_KEYWORD(instance, "INSTANCE");
DEFINE_KEYWORD(internal, "INTERNAL");
DEFINE_KEYWORD(internet, "INTERNET");
DEFINE_KEYWORD(input, "INPUT");
DEFINE_KEYWORD(invert, "INVERT");
DEFINE_KEYWORD(io, "IO");
#ifdef __linux__
DEFINE_KEYWORD(linux, "LINUX");
#endif
DEFINE_KEYWORD(little_endian, "LITTLE-ENDIAN");
DEFINE_KEYWORD(local, "LOCAL");
DEFINE_KEYWORD(name, "NAME");
#ifdef __NetBSD__
DEFINE_KEYWORD(netbsd, "NETBSD");
#endif
DEFINE_KEYWORD(new_version, "NEW-VERSION");
DEFINE_KEYWORD(newest, "NEWEST");
DEFINE_KEYWORD(object, "OBJECT");
DEFINE_KEYWORD(operands, "OPERANDS");
DEFINE_KEYWORD(operation, "OPERATION");
DEFINE_KEYWORD(output, "OUTPUT");
DEFINE_KEYWORD(package, "PACKAGE");
DEFINE_KEYWORD(passive, "PASSIVE");
DEFINE_KEYWORD(pathname, "PATHNAME");
DEFINE_KEYWORD(preserve, "PRESERVE");
DEFINE_KEYWORD(relative, "RELATIVE");
DEFINE_KEYWORD(start, "START");
DEFINE_KEYWORD(stream, "STREAM");
DEFINE_KEYWORD(supersede, "SUPERSEDE");
DEFINE_KEYWORD(time, "TIME");
DEFINE_KEYWORD(type, "TYPE");
#if defined(__linux__) || defined(__FreeBSD__) || defined(__NetBSD__)
DEFINE_KEYWORD(unix, "UNIX");
#endif
DEFINE_KEYWORD(unspecific, "UNSPECIFIC");
DEFINE_KEYWORD(up, "UP");
DEFINE_KEYWORD(upcase, "UPCASE");
DEFINE_KEYWORD(version, "VERSION");
DEFINE_KEYWORD(wild, "WILD");
DEFINE_KEYWORD(wild_inferiors, "WILD-INFERIORS");
#ifdef WIN32
DEFINE_KEYWORD(windows, "WINDOWS");
#endif
DEFINE_KEYWORD(xcl, "XCL");
DEFINE_KEYWORD(x86, "X86");
DEFINE_KEYWORD(x86_64, "X86-64");
