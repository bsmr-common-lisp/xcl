// Primitives.hpp
//
// Copyright (C) 2006-2009 Peter Graves <peter@armedbear.org>
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#ifndef __PRIMITIVES_HPP
#define __PRIMITIVES_HPP

extern Value CL_abs(Value arg);
extern Value CL_acons(Value key, Value datum, Value alist);
extern Value CL_add(unsigned int numargs, Value args[]);
extern Value CL_adjustable_array_p(Value arg);
extern Value CL_alpha_char_p(Value character);
extern Value CL_alphanumericp(Value character);
extern Value CL_and(Value args, Environment * env, Thread * thread);
extern Value CL_append(unsigned int numargs, Value args[]);
extern Value CL_apply(unsigned int numargs, Value args[]);
// extern Value CL_apropos(unsigned int numargs, Value args[]);
extern Value CL_apropos_list(unsigned int numargs, Value args[]);
extern Value CL_aref(unsigned int numargs, Value args[]);
extern Value CL_array_dimension(Value arg1, Value arg2);
extern Value CL_array_dimensions(Value arg);
extern Value CL_array_displacement(Value arg);
extern Value CL_array_element_type(Value arg);
extern Value CL_array_has_fill_pointer_p(Value arg);
extern Value CL_array_in_bounds_p(unsigned int numargs, Value args[]);
extern Value CL_array_rank(Value arg);
extern Value CL_array_row_major_index(unsigned int numargs, Value args[]);
extern Value CL_array_total_size(Value arg);
extern Value CL_arrayp(Value arg);
extern Value CL_arithmetic_error_operands(Value arg);
extern Value CL_arithmetic_error_operation(Value arg);
extern Value CL_ash(Value arg1, Value arg2);
// extern Value CL_asin(Value arg);
extern Value CL_atan(unsigned int numargs, Value args[]);
extern Value CL_atom(Value arg);
extern Value CL_bit_vector_p(Value arg);
extern Value CL_block(Value args, Environment * env, Thread * thread);
extern Value CL_both_case_p(Value arg);
extern Value CL_boundp(Value symbol);
extern Value CL_broadcast_stream_streams(Value arg);
extern Value CL_byte(Value size, Value position);
extern Value CL_byte_position(Value bytespec);
extern Value CL_byte_size(Value bytespec);
extern Value CL_caaar(Value arg);
extern Value CL_caadr(Value arg);
extern Value CL_caar(Value arg);
extern Value CL_cadar(Value arg);
extern Value CL_caddr(Value arg);
extern Value CL_cadr(Value arg);
extern Value CL_car(Value arg);
extern Value CL_case(Value args, Environment * env, Thread * thread);
extern Value CL_catch(Value args, Environment * env, Thread * thread);
extern Value CL_cdaar(Value arg);
extern Value CL_cdadr(Value arg);
extern Value CL_cdar(Value arg);
extern Value CL_cddar(Value arg);
extern Value CL_cdddr(Value arg);
extern Value CL_cddr(Value arg);
extern Value CL_cdr(Value arg);
extern Value CL_ceiling(unsigned int numargs, Value args[]);
extern Value CL_cell_error_name(Value arg);
extern Value CL_char(Value string, Value index);
extern Value CL_char_code(Value arg);
extern Value CL_char_downcase(Value arg);
extern Value CL_char_equal(unsigned int numargs, Value args[]);
extern Value CL_char_e(unsigned int numargs, Value args[]);
extern Value CL_char_ge(unsigned int numargs, Value args[]);
extern Value CL_char_greaterp(unsigned int numargs, Value args[]);
extern Value CL_char_gt(unsigned int numargs, Value args[]);
extern Value CL_char_int(Value arg);
extern Value CL_char_le(unsigned int numargs, Value args[]);
extern Value CL_char_lessp(unsigned int numargs, Value args[]);
extern Value CL_char_lt(unsigned int numargs, Value args[]);
extern Value CL_char_name(Value arg);
extern Value CL_char_ne(unsigned int numargs, Value args[]);
extern Value CL_char_not_equal(unsigned int numargs, Value args[]);
extern Value CL_char_not_greaterp(unsigned int numargs, Value args[]);
extern Value CL_char_not_lessp(unsigned int numargs, Value args[]);
extern Value CL_char_upcase(Value arg);
extern Value CL_character(Value arg);
extern Value CL_characterp(Value arg);
extern Value CL_class_of(Value obj);
extern Value CL_clear_input(unsigned int numargs, Value args[]);
extern Value CL_clear_output(unsigned int numargs, Value args[]);
extern Value CL_clrhash(Value hash_table);
extern Value CL_code_char(Value code);
extern Value CL_compiled_function_p(Value arg);
extern Value CL_complex(unsigned int numargs, Value args[]);
extern Value CL_complexp(Value arg);
extern Value CL_concatenated_stream_streams(Value arg);
extern Value CL_cond(Value args, Environment * env, Thread * thread);
extern Value CL_cons(Value arg1, Value arg2);
extern Value CL_consp(Value arg);
extern Value CL_constantp(unsigned int numargs, Value args[]);
extern Value CL_copy_list(Value arg);
extern Value CL_copy_readtable(unsigned int numargs, Value args[]);
extern Value CL_copy_structure(Value structure);
extern Value CL_copy_tree(Value arg);
extern Value CL_cis(Value arg);
extern Value CL_close(unsigned int numargs, Value args[]);
extern Value CL_cos(Value arg);
extern Value CL_decode_float(Value arg);
extern Value CL_defmacro(Value args, Environment * env, Thread * thread);
extern Value CL_defparameter(Value args, Environment * env, Thread * thread);
extern Value CL_defun(Value args, Environment * env, Thread * thread);
extern Value CL_delete_file(Value arg);
extern Value CL_defvar(Value args, Environment * env, Thread * thread);
extern Value CL_denominator (Value arg);
extern Value CL_digit_char(unsigned int numargs, Value args[]);
extern Value CL_digit_char_p(unsigned int numargs, Value args[]);
extern Value CL_directory_namestring(Value arg);
extern Value CL_divide(unsigned int numargs, Value args[]);
extern Value CL_do(Value args, Environment * env, Thread * thread);
extern Value CL_do_star(Value args, Environment * env, Thread * thread);
extern Value CL_dolist(Value args, Environment * env, Thread * thread);
extern Value CL_dotimes(Value args, Environment * env, Thread * thread);
extern Value CL_ecase(Value args, Environment * env, Thread * thread);
extern Value CL_echo_stream_input_stream(Value arg);
extern Value CL_echo_stream_output_stream(Value arg);
extern Value CL_elt(Value sequence, Value index);
extern Value CL_endp(Value arg);
extern Value CL_eq(Value arg1, Value arg2);
extern Value CL_eql(Value arg1, Value arg2);
extern Value CL_equal(Value first, Value second);
extern Value CL_equalp(Value first, Value second);
extern Value CL_equals(unsigned int numargs, Value args[]);
extern Value CL_error(unsigned int numargs, Value args[]);
extern Value CL_eval(Value form);
extern Value CL_eval_when(Value args, Environment * env, Thread * thread);
extern Value CL_evenp(Value arg);
extern Value CL_export(unsigned int numargs, Value args[]);
extern Value CL_exp(Value arg);
extern Value CL_expt(Value base, Value power);
extern Value CL_fboundp(Value name);
extern Value CL_fdefinition(Value name);
extern Value CL_file_error_pathname(Value arg);
extern Value CL_file_length(Value arg);
extern Value CL_file_namestring(Value arg);
extern Value CL_file_position(unsigned int numargs, Value args[]);
extern Value CL_file_string_length(Value arg1, Value arg2);
extern Value CL_file_write_date(Value arg);
extern Value CL_fill_pointer(Value arg);
extern Value CL_find_class(unsigned int numargs, Value args[]);
extern Value CL_find_package(Value name);
extern Value CL_find_symbol(unsigned int numargs, Value args[]);
extern Value CL_finish_output(unsigned int numargs, Value args[]);
extern Value CL_first(Value arg);
extern Value CL_flet(Value args, Environment * env, Thread * thread);
extern Value CL_float(unsigned int numargs, Value args[]);
extern Value CL_float_digits(Value arg);
extern Value CL_float_radix(Value arg);
extern Value CL_float_sign(unsigned int numargs, Value args[]);
extern Value CL_floatp(Value arg);
extern Value CL_floor(unsigned int numargs, Value args[]);
extern Value CL_fmakunbound(Value symbol);
extern Value CL_force_output(unsigned int numargs, Value args[]);
extern Value CL_fourth(Value arg);
extern Value CL_fresh_line(unsigned int numargs, Value args[]);
extern Value CL_funcall(unsigned int numargs, Value args[]);
extern Value CL_function(Value args, Environment * env, Thread * thread);
extern Value CL_function_lambda_expression(Value function);
extern Value CL_functionp(Value arg);
extern Value CL_ge(unsigned int numargs, Value args[]);
extern Value CL_gensym(unsigned int numargs, Value args[]);
extern Value CL_get(unsigned int numargs, Value args[]);
extern Value CL_get_dispatch_macro_character(unsigned int numargs, Value args[]);
extern Value CL_get_internal_real_time();
extern Value CL_get_internal_run_time();
extern Value CL_get_macro_character(unsigned int numargs, Value args[]);
extern Value CL_get_output_stream_string(Value arg);
extern Value CL_get_properties(Value plist, Value indicator_list);
extern Value CL_get_universal_time();
extern Value CL_getf(unsigned int numargs, Value args[]);
extern Value CL_gethash(unsigned int numargs, Value args[]);
extern Value CL_go(Value args, Environment * env, Thread * thread);
extern Value CL_graphic_char_p(Value arg);
extern Value CL_gt(unsigned int numargs, Value args[]);
extern Value CL_hash_table_count(Value arg);
extern Value CL_hash_table_p(Value arg);
extern Value CL_hash_table_rehash_size(Value arg);
extern Value CL_hash_table_rehash_threshold(Value arg);
extern Value CL_hash_table_size(Value arg);
extern Value CL_hash_table_test(Value arg);
extern Value CL_host_namestring(Value arg);
extern Value CL_identity(Value arg);
extern Value CL_if(Value args, Environment * env, Thread * thread);
extern Value CL_imagpart(Value arg);
extern Value CL_import(unsigned int numargs, Value args[]);
extern Value CL_input_stream_p(Value arg);
extern Value CL_integer_decode_float(Value arg);
extern Value CL_integer_length(Value arg);
extern Value CL_integerp(Value arg);
extern Value CL_interactive_stream_p(Value arg);
extern Value CL_intern(unsigned int numargs, Value args[]);
extern Value CL_isqrt(Value arg);
extern Value CL_keywordp(Value arg);
extern Value CL_labels(Value args, Environment * env, Thread * thread);
extern Value CL_lambda(Value args, Environment * env, Thread * thread);
extern Value CL_last(unsigned int numargs, Value args[]);
extern Value CL_le(unsigned int numargs, Value args[]);
extern Value CL_length(Value arg);
extern Value CL_let(Value args, Environment * env, Thread * thread);
extern Value CL_let_star(Value args, Environment * env, Thread * thread);
extern Value CL_lisp_implementation_type();
extern Value CL_lisp_implementation_version();
extern Value CL_list(unsigned int numargs, Value args[]);
extern Value CL_list_all_packages();
extern Value CL_list_star(unsigned int numargs, Value args[]);
extern Value CL_listen(unsigned int numargs, Value args[]);
extern Value CL_listp(Value arg);
extern Value CL_load(Value arg);
extern Value CL_load_time_value(Value args, Environment * env, Thread * thread);
extern Value CL_locally(Value args, Environment * env, Thread * thread);
extern Value CL_log(unsigned int numargs, Value args[]);
extern Value CL_logand(unsigned int numargs, Value args[]);
extern Value CL_logandc1(Value v1, Value v2);
extern Value CL_logandc2(Value v1, Value v2);
extern Value CL_logbitp(Value arg1, Value arg2);
extern Value CL_logcount(Value arg);
extern Value CL_logeqv(unsigned int numargs, Value args[]);
extern Value CL_logior(unsigned int numargs, Value args[]);
extern Value CL_lognand(Value arg1, Value arg2);
extern Value CL_lognor(Value arg1, Value arg2);
extern Value CL_lognot(Value arg);
extern Value CL_logorc1(Value v1, Value v2);
extern Value CL_logorc2(Value v1, Value v2);
extern Value CL_logtest(Value v1, Value v2);
extern Value CL_long_site_name();
extern Value CL_logxor(unsigned int numargs, Value args[]);
extern Value CL_lower_case_p(Value arg);
extern Value CL_lt(unsigned int numargs, Value args[]);
extern Value CL_machine_instance();
extern Value CL_machine_type();
extern Value CL_machine_version();
extern Value CL_macro_function(unsigned int numargs, Value args[]);
extern Value CL_macroexpand(unsigned int numargs, Value args[]);
extern Value CL_macroexpand_1(unsigned int numargs, Value args[]);
extern Value CL_macrolet(Value args, Environment * env, Thread * thread);
extern Value CL_make_broadcast_stream(unsigned int numargs, Value args[]);
extern Value CL_make_concatenated_stream(unsigned int numargs, Value args[]);
extern Value CL_make_condition(unsigned int numargs, Value args[]);
extern Value CL_make_dispatch_macro_character(unsigned int numargs, Value args[]);
extern Value CL_make_echo_stream(Value arg1, Value arg2);
extern Value CL_make_pathname(unsigned int numargs, Value args[]);
extern Value CL_make_random_state(unsigned int numargs, Value args[]);
extern Value CL_make_string_input_stream(unsigned int numargs, Value args[]);
extern Value CL_make_symbol(Value arg);
extern Value CL_make_synonym_stream(Value arg);
extern Value CL_make_two_way_stream(Value arg1, Value arg2);
extern Value CL_makunbound(Value symbol);
extern Value CL_mapc(unsigned int numargs, Value args[]);
extern Value CL_mapcar(unsigned int numargs, Value args[]);
extern Value CL_maphash(Value function, Value hash_table);
extern Value CL_max(unsigned int numargs, Value args[]);
extern Value CL_merge_pathnames(unsigned int numargs, Value args[]);
extern Value CL_min(unsigned int numargs, Value args[]);
extern Value CL_minusp(Value arg);
extern Value CL_mod(Value number, Value divisor);
extern Value CL_multiple_value_bind(Value args, Environment * env, Thread * thread);
extern Value CL_multiple_value_call(Value args, Environment * env, Thread * thread);
extern Value CL_multiple_value_list(Value args, Environment * env, Thread * thread);
extern Value CL_multiple_value_prog1(Value args, Environment * env, Thread * thread);
extern Value CL_multiply(unsigned int numargs, Value args[]);
extern Value CL_name_char(Value arg);
extern Value CL_namestring(Value arg);
extern Value CL_nconc(unsigned int numargs, Value args[]);
extern Value CL_not(Value arg);
extern Value CL_not_equals(unsigned int numargs, Value args[]);
extern Value CL_nreconc(Value list, Value tail);
extern Value CL_nreverse(Value arg);
extern Value CL_nth(Value index, Value list);
extern Value CL_nthcdr(Value index, Value list);
extern Value CL_null(Value arg);
extern Value CL_numberp(Value arg);
extern Value CL_numerator(Value arg);
extern Value CL_oddp(Value arg);
extern Value CL_one_minus(Value arg);
extern Value CL_one_plus(Value arg);
extern Value CL_open_stream_p(Value arg);
extern Value CL_or(Value args, Environment * env, Thread * thread);
extern Value CL_output_stream_p(Value arg);
extern Value CL_package_error_package(Value arg);
extern Value CL_package_name(Value arg);
extern Value CL_package_nicknames(Value arg);
extern Value CL_package_shadowing_symbols(Value arg);
extern Value CL_package_use_list(Value arg);
extern Value CL_package_used_by_list(Value arg);
extern Value CL_packagep(Value arg);
extern Value CL_pathname(Value arg);
extern Value CL_pathname_device(unsigned int numargs, Value args[]);
extern Value CL_pathname_directory(unsigned int numargs, Value args[]);
extern Value CL_pathname_host(unsigned int numargs, Value args[]);
extern Value CL_pathname_name(unsigned int numargs, Value args[]);
extern Value CL_pathname_type(unsigned int numargs, Value args[]);
extern Value CL_pathname_version(Value arg);
extern Value CL_pathnamep(Value arg);
extern Value CL_peek_char(unsigned int numargs, Value args[]);
extern Value CL_plusp(Value arg);
extern Value CL_prin1(unsigned int numargs, Value args[]);
extern Value CL_prin1_to_string(Value arg);
extern Value CL_princ(unsigned int numargs, Value args[]);
extern Value CL_princ_to_string(Value arg);
extern Value CL_print(unsigned int numargs, Value args[]);
extern Value CL_print_not_readable_object(Value arg);
extern Value CL_probe_file(Value pathspec);
extern Value CL_progn(Value args, Environment * env, Thread * thread);
extern Value CL_progv(Value args, Environment * env, Thread * thread);
extern Value CL_quote(Value args, Environment * env, Thread * thread);
extern Value CL_random(unsigned int numargs, Value args[]);
extern Value CL_random_state_p(Value arg);
extern Value CL_rational(Value arg);
extern Value CL_rationalize(Value arg);
extern Value CL_rationalp(Value arg);
extern Value CL_read(unsigned int numargs, Value args[]);
extern Value CL_read_char(unsigned int numargs, Value args[]);
extern Value CL_read_char_no_hang(unsigned int numargs, Value args[]);
extern Value CL_read_delimited_list(unsigned int numargs, Value args[]);
extern Value CL_read_line(unsigned int numargs, Value args[]);
extern Value CL_read_preserving_whitespace(unsigned int numargs, Value args[]);
extern Value CL_readtable_case(Value arg);
extern Value CL_readtablep(Value arg);
extern Value CL_realp(Value arg);
extern Value CL_realpart(Value arg);
extern Value CL_rem(Value number, Value divisor);
extern Value CL_remhash(Value key, Value hash_table);
extern Value CL_remprop(Value arg1, Value arg2);
extern Value CL_rename_file(Value arg1, Value arg2);
extern Value CL_rename_package(unsigned int numargs, Value args[]);
extern Value CL_rest(Value arg);
extern Value CL_restart_name(Value arg);
extern Value CL_return(Value args, Environment * env, Thread * thread) __attribute__ ((noreturn));
extern Value CL_return_from(Value args, Environment * env, Thread * thread) __attribute__ ((noreturn));
extern Value CL_reverse(Value arg);
extern Value CL_room(unsigned int numargs, Value args[]);
extern Value CL_row_major_aref(Value array, Value index);
extern Value CL_rplaca(Value cons, Value object);
extern Value CL_rplacd(Value cons, Value object);
extern Value CL_schar(Value string, Value index);
extern Value CL_second(Value arg);
extern Value CL_set(Value name, Value value);
extern Value CL_set_dispatch_macro_character(unsigned int numargs, Value args[]);
extern Value CL_set_macro_character(unsigned int numargs, Value args[]);
extern Value CL_set_syntax_from_char(unsigned int numargs, Value args[]);
extern Value CL_setq(Value args, Environment * env, Thread * thread);
extern Value CL_shadow(unsigned int numargs, Value args[]);
extern Value CL_shadowing_import(unsigned int numargs, Value args[]);
extern Value CL_short_site_name();
extern Value CL_signum(Value arg);
extern Value CL_simple_bit_vector_p(Value arg);
extern Value CL_simple_condition_format_arguments(Value arg);
extern Value CL_simple_condition_format_control(Value arg);
extern Value CL_simple_string_p(Value arg);
extern Value CL_simple_vector_p(Value arg);
extern Value CL_sin(Value arg);
extern Value CL_sleep(Value arg);
extern Value CL_software_type();
extern Value CL_software_version();
extern Value CL_special_operator_p(Value arg);
extern Value CL_sqrt(Value arg);
extern Value CL_standard_char_p(Value arg);
extern Value CL_stream_element_type(Value arg);
extern Value CL_stream_error_stream(Value arg);
extern Value CL_stream_external_format(Value arg);
extern Value CL_streamp(Value arg);
extern Value CL_string(Value arg);
extern Value CL_stringp(Value arg);
extern Value CL_subseq(unsigned int numargs, Value args[]);
extern Value CL_subtract(unsigned int numargs, Value args[]);
extern Value CL_svref(Value arg1, Value arg2);
extern Value CL_sxhash(Value arg);
extern Value CL_symbol_function(Value arg);
extern Value CL_symbol_macrolet(Value args, Environment * env, Thread * thread);
extern Value CL_symbol_name(Value arg);
extern Value CL_symbol_package(Value arg);
extern Value CL_symbol_plist(Value arg);
extern Value CL_symbol_value(Value arg);
extern Value CL_symbolp(Value arg);
extern Value CL_synonym_stream_symbol(Value arg);
extern Value CL_tagbody(Value args, Environment * env, Thread * thread);
extern Value CL_tan(Value arg);
extern Value CL_terpri(unsigned int numargs, Value args[]);
extern Value CL_the(Value args, Environment * env, Thread * thread);
extern Value CL_third(Value arg);
extern Value CL_throw(Value args, Environment * env, Thread * thread) __attribute__ ((noreturn));
extern Value CL_truename(Value arg);
extern Value CL_truncate(unsigned int numargs, Value args[]);
extern Value CL_two_way_stream_input_stream(Value arg);
extern Value CL_two_way_stream_output_stream(Value arg);
extern Value CL_type_error_datum(Value arg);
extern Value CL_type_error_expected_type(Value arg);
extern Value CL_type_of(Value obj);
extern Value CL_unbound_slot_instance(Value arg);
extern Value CL_unexport(unsigned int numargs, Value args[]);
extern Value CL_unintern(unsigned int numargs, Value args[]);
extern Value CL_unless(Value args, Environment * env, Thread * thread);
extern Value CL_unread_char(unsigned int numargs, Value args[]);
extern Value CL_unuse_package(unsigned int numargs, Value args[]);
extern Value CL_unwind_protect(Value args, Environment * env, Thread * thread);
extern Value CL_upper_case_p(Value arg);
extern Value CL_use_package(unsigned int numargs, Value args[]);
extern Value CL_user_homedir_pathname(unsigned int numargs, Value args[]);
extern Value CL_values(unsigned int numargs, Value args[]);
extern Value CL_values_list(Value list);
extern Value CL_vector(unsigned int numargs, Value args[]);
extern Value CL_vector_pop(Value vector);
extern Value CL_vector_push(Value new_element, Value vector);
extern Value CL_vector_push_extend(unsigned int numargs, Value args[]);
extern Value CL_vectorp(Value arg);
extern Value CL_when(Value args, Environment * env, Thread * thread);
extern Value CL_wild_pathname_p(unsigned int numargs, Value args[]);
extern Value CL_write_char(unsigned int numargs, Value args[]);
extern Value CL_zerop(Value arg);
extern Value EXT_accept_connection(Value arg);
extern Value EXT_assq(Value item, Value alist);
extern Value EXT_assql(Value item, Value alist);
extern Value EXT_autoload(unsigned int numargs, Value args[]);
extern Value EXT_autoload_macro(unsigned int numargs, Value args[]);
extern Value EXT_autoloadp(Value symbol);
extern Value EXT_aver(Value args, Environment * env, Thread * thread);
extern Value EXT_backtrace();
extern Value EXT_backtrace_as_list(unsigned int numargs, Value args[]);
extern Value EXT_bignump(Value arg);
extern Value EXT_chdir(Value arg);
extern Value EXT_classp(Value arg);
extern Value EXT_closurep(Value arg);
extern Value EXT_closure_environment(Value arg);
extern Value EXT_condition_broadcast(Value arg);
extern Value EXT_condition_notify(Value arg);
extern Value EXT_condition_wait(Value arg1, Value arg2);
extern Value EXT_copy_string(Value arg);
extern Value EXT_current_directory();
extern Value EXT_current_thread();
extern Value EXT_environment_variables(Value arg);
extern Value EXT_exit();
extern Value EXT_file_directory_p(Value arg);
extern Value EXT_fixnump(Value arg);
extern Value EXT_gc();
extern Value EXT_get_mutex(unsigned int numargs, Value args[]);
extern Value EXT_getenv(Value arg);
extern Value EXT_getpid();
extern Value EXT_local_port(Value arg);
extern Value EXT_make_condition_variable();
extern Value EXT_make_slime_input_stream(Value arg1, Value arg2);
extern Value EXT_make_slime_output_stream(Value arg);
extern Value EXT_memq(Value item, Value list);
extern Value EXT_memql(Value item, Value list);
extern Value EXT_neq(Value arg1, Value arg2);
extern Value EXT_probe_directory(Value arg);
extern Value EXT_quit();
extern Value EXT_release_mutex(Value arg);
extern Value EXT_reset();
extern Value EXT_resolve(Value arg);
extern Value EXT_sequencep(Value arg);
extern Value EXT_special_variable_p(Value arg);
extern Value EXT_subclassp(Value arg1, Value arg2);
extern Value EXT_thread_name(Value arg);
extern Value EXT_threadp(Value arg);
extern Value MOP_set_funcallable_instance_function(Value arg1, Value arg2);
extern Value SYS_address_of(Value arg);
extern Value SYS_adjust_array_internal(unsigned int numargs, Value args[]);
extern Value SYS_allocate_funcallable_standard_instance(Value arg);
extern Value SYS_allocate_instance_funcallable_standard_class();
extern Value SYS_allocate_instance_standard_class();
extern Value SYS_allocate_instance_standard_generic_function(Value arg);
extern Value SYS_allocate_standard_instance(Value arg);
extern Value SYS_aset(unsigned int numargs, Value args[]);
extern Value SYS_atan_1(Value arg);
extern Value SYS_autocompile(Value arg1);
extern Value SYS_builtin_typep(Value object, Value type_specifier);
extern Value SYS_canonicalize_logical_host(Value arg);
extern Value SYS_ceiling_1(Value number);
extern Value SYS_ceiling_2(Value number, Value divisor);
extern Value SYS_check_fixnum_bounds(Value arg1, Value arg2, Value arg3);
extern Value SYS_check_subsequence(Value arg1, Value arg2, Value arg3);
extern Value SYS_class_name_internal(Value arg);
extern Value SYS_coerce_to_function(Value value);
extern Value SYS_compiled_function_constants(Value arg);
extern Value SYS_concatenate_to_string(Value sequences);
extern Value SYS_conditionp(Value arg);
extern Value SYS_copy_structure_slot_definition(Value arg);
extern Value SYS_create_new_file(Value namestring);
extern Value SYS_default_time_zone();
extern Value SYS_defconstant_internal(Value name, Value initial_value);
extern Value SYS_defpackage_internal(unsigned int numargs, Value args[]);
extern Value SYS_defparameter_internal(Value name, Value initial_value, Value doc, Value docp);
extern Value SYS_defun_internal(Value name, Value function);
extern Value SYS_defvar_internal(Value name);
extern Value SYS_delete_package_internal(Value arg);
extern Value SYS_designator_input_stream(Value arg);
extern Value SYS_designator_list(Value arg);
extern Value SYS_designator_output_stream(Value arg);
extern Value SYS_documentation_internal(Value object, Value doctype);
extern Value SYS_double_float_add_internal(Value arg1, Value arg2);
extern Value SYS_double_float_high_bits(Value arg);
extern Value SYS_double_float_low_bits(Value arg);
extern Value SYS_double_float_p(Value arg);
extern Value SYS_double_float_subtract_internal(Value arg1, Value arg2);
extern Value SYS_environment_add_function_definition(Value env, Value name, Value value);
extern Value SYS_environment_add_macro_definition(Value env, Value name, Value value);
extern Value SYS_environment_empty_p(Value arg);
extern Value SYS_equals_2(Value arg1, Value arg2);
extern Value SYS_error_not_cons(Value datum);
extern Value SYS_error_not_list(Value datum);
extern Value SYS_error_not_simple_bit_vector(Value datum);
extern Value SYS_error_not_vector(Value datum);
extern Value SYS_fasl_read_backquote(Value streamarg, Value ignored);
extern Value SYS_fasl_read_comma(Value streamarg, Value ignored);
extern Value SYS_fasl_read_comment(Value streamarg, Value character);
extern Value SYS_fasl_read_dispatch_char(Value streamarg, Value character);
extern Value SYS_fasl_read_list(Value streamarg, Value character);
extern Value SYS_fasl_read_quote(Value streamarg, Value ignored);
extern Value SYS_fasl_read_right_paren(Value streamarg, Value ignored);
extern Value SYS_fasl_read_string(Value streamarg, Value character);
extern Value SYS_fasl_sharp_a(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_b(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_backslash(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_c(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_colon(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_dollar(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_dot(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_illegal(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_left_paren(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_o(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_p(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_percent(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_quote(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_r(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_s(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_star(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_vertical_bar(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fasl_sharp_x(Value streamarg, Value subchar, Value numarg);
extern Value SYS_fast_mapc2(Value arg1, Value arg2);
extern Value SYS_fast_mapcar2(Value arg1, Value arg2);
extern Value SYS_fdefinition_block_name(Value arg);
extern Value SYS_find_class_1(Value arg);
extern Value SYS_find_eql(Value item, Value sequence);
extern Value SYS_fixnum_typep(Value object, Value low, Value high);
extern Value SYS_float_string(Value arg);
extern Value SYS_floor_1(Value arg);
extern Value SYS_floor_2(Value arg1, Value arg2);
extern Value SYS_funcallable_instance_function(Value arg);
extern Value SYS_function_arity(Value arg);
extern Value SYS_function_call_count(Value arg);
extern Value SYS_function_code(Value arg);
extern Value SYS_function_code_size(Value arg);
extern Value SYS_function_name(Value arg);
extern Value SYS_function_plist(Value arg);
extern Value SYS_gc_total_bytes();
extern Value SYS_gc_total_cons_cells();
extern Value SYS_gcd_2(Value arg1, Value arg2);
extern Value SYS_ge_2(Value arg1, Value arg2);
extern Value SYS_get2(Value symbol, Value indicator);
extern Value SYS_get3(Value symbol, Value indicator, Value default_value);
extern Value SYS_get_process_times();
extern Value SYS_gethash2(Value arg1, Value arg2);
extern Value SYS_gethash2_1(Value arg1, Value arg2);
extern Value SYS_gethash3(Value arg1, Value arg2, Value arg3);
extern Value SYS_gt_2(Value arg1, Value arg2);
extern Value SYS_hash_table_entries(Value arg);
extern Value SYS_heap_free();
extern Value SYS_heap_size();
extern Value SYS_heap_used();
extern Value SYS_in_package_internal(Value arg);
extern Value SYS_incq(Value args, Environment * env, Thread * thread);
extern Value SYS_init_fasl(Value arg);
extern Value SYS_int3();
extern Value SYS_interactive_eval(Value form);
extern Value SYS_interrupt_lisp();
extern Value SYS_intersection_eql(Value list1, Value list2);
extern Value SYS_iref(Value arg1, Value arg2);
extern Value SYS_iset(Value arg1, Value arg2, Value arg3);
extern Value SYS_kernel_function_p(Value arg);
extern Value SYS_lambda_expression_p(Value arg);
extern Value SYS_lambda_list_names(Value arg);
extern Value SYS_last1(Value arg);
extern Value SYS_layout_class(Value arg);
extern Value SYS_layout_invalid_p(Value arg);
extern Value SYS_layout_slot_location(Value arg1, Value arg2);
extern Value SYS_layout_slot_names(Value arg);
extern Value SYS_le_2(Value arg1, Value arg2);
extern Value SYS_length_eql(Value arg1, Value arg2);
extern Value SYS_list1(Value arg);
extern Value SYS_list2(Value arg1, Value arg2);
extern Value SYS_list3(Value arg1, Value arg2, Value arg3);
extern Value SYS_list4(Value arg1, Value arg2, Value arg3, Value arg4);
extern Value SYS_list5(Value arg1, Value arg2, Value arg3, Value arg4, Value arg5);
extern Value SYS_list_delete_eq(Value item, Value list);
extern Value SYS_list_delete_eql(Value item, Value list);
extern Value SYS_list_directory(Value arg);
extern Value SYS_list_find_eq(Value item, Value list);
extern Value SYS_list_find_eql(Value item, Value list);
extern Value SYS_list_position_eql(Value arg1, Value arg2);
extern Value SYS_load_stream(Value streamarg, Value pathname, Value verbose, Value print);
extern Value SYS_load_system_file(Value arg);
extern Value SYS_logical_pathname_p(Value arg);
extern Value SYS_lt_2(Value arg1, Value arg2);
extern Value SYS_make_array_internal(unsigned int numargs, Value args[]);
extern Value SYS_make_code_vector(Value size);
extern Value SYS_make_closure_template_function(Value arg1, Value arg2, Value arg3, Value arg4, Value arg5);
extern Value SYS_make_compiled_function(Value arg1, Value arg2, Value arg3, Value arg4, Value arg5);
extern Value SYS_make_condition_internal(Value type, Value initargs);
extern Value SYS_make_environment(unsigned int numargs, Value args[]);
extern Value SYS_make_file_stream(Value pathname, Value namestring, Value element_type, Value direction, Value if_exists);
extern Value SYS_make_fill_pointer_output_stream(Value arg);
extern Value SYS_make_hash_table_internal(Value test, Value size,
                                          Value rehash_size,
                                          Value rehash_threshold);
extern Value SYS_make_instances_obsolete_internal(Value arg);
extern Value SYS_make_keyword(Value arg);
extern Value SYS_make_layout(Value arg1, Value arg2, Value arg3);
extern Value SYS_make_list_internal(Value arg1, Value arg2);
extern Value SYS_make_logical_pathname(Value arg);
extern Value SYS_make_macro(Value name, Value expander);
extern Value SYS_make_mutex_internal(Value name);
extern Value SYS_make_package_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_make_primitive(Value arg1, Value arg2, Value arg3, Value arg4);
extern Value SYS_make_restart_internal(Value name, Value function, Value report_function,
                                       Value interactive_function, Value test_function);
extern Value SYS_make_simple_bit_vector(Value arg);
extern Value SYS_make_simple_vector(Value arg);
extern Value SYS_make_socket_internal(unsigned int numargs, Value args[]);
extern Value SYS_make_string_internal(Value size, Value initial_element, Value element_type);
extern Value SYS_make_string_output_stream_internal(Value arg);
extern Value SYS_make_structure_class(Value name, Value include, Value slots);
extern Value SYS_make_structure_slot_definition_internal(Value name, Value index, Value reader,
                                                         Value initform, Value type, Value read_only);
extern Value SYS_make_thread_internal(Value arg1, Value arg2);
extern Value SYS_mapc2(Value arg1, Value arg2);
extern Value SYS_mapcar2(Value arg1, Value arg2);
extern Value SYS_maybe_load_system_file(Value arg);
extern Value SYS_member_internal(Value item, Value list, Value key, Value test,
                                 Value test_not);
extern Value SYS_mkdir(Value arg);
extern Value SYS_not_equals_2(Value arg1, Value arg2);
extern Value SYS_nstring_capitalize_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_nstring_downcase_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_nstring_upcase_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_package_external_symbols(Value arg);
extern Value SYS_package_inherited_symbols(Value arg);
extern Value SYS_package_internal_symbols(Value arg);
extern Value SYS_package_symbols(Value arg);
extern Value SYS_parse_body(unsigned int numargs, Value args[]);
extern Value SYS_parse_namestring_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_position_eql(Value arg1, Value arg2);
extern Value SYS_primitive_format(unsigned int numargs, Value args[]);
extern Value SYS_profiler_sample_count();
extern Value SYS_psxhash(Value arg);
extern Value SYS_proclaim_special(Value arg);
extern Value SYS_put(unsigned int numargs, Value args[]);
extern Value SYS_putf(Value plist, Value indicator, Value new_value);
extern Value SYS_puthash(unsigned int numargs, Value args[]);
extern Value SYS_puthash3(Value arg1, Value arg2, Value arg3);
extern Value SYS_puthash4(Value arg1, Value arg2, Value arg3, Value arg4);
extern Value SYS_quoted_form_p(Value form);
extern Value SYS_ratiop(Value arg);
extern Value SYS_read_8_bits(Value arg1, Value arg2, Value arg3);
extern Value SYS_read_backquote(Value stream, Value ignored);
extern Value SYS_read_comma(Value stream, Value ignored);
extern Value SYS_read_comment(Value stream, Value character);
extern Value SYS_read_dispatch_char(Value stream, Value ignored);
extern Value SYS_read_from_string_internal(Value arg1, Value arg2, Value arg3,
                                           Value arg4, Value arg5, Value arg6);
extern Value SYS_read_list(Value stream, Value character);
extern Value SYS_read_quote(Value stream, Value ignored);
extern Value SYS_read_right_paren(Value stream, Value ignored);
extern Value SYS_read_string(Value stream, Value ignored);
extern Value SYS_real_acos(Value arg);
extern Value SYS_real_acosh(Value arg);
extern Value SYS_real_asin(Value arg);
extern Value SYS_real_asinh(Value arg);
extern Value SYS_real_atanh(Value arg);
extern Value SYS_real_cosh(Value arg);
extern Value SYS_real_sinh(Value arg);
extern Value SYS_real_tanh(Value arg);
extern Value SYS_record_source_information(Value name);
extern Value SYS_require_boolean(Value arg);
extern Value SYS_require_character(Value arg);
extern Value SYS_require_cons(Value arg);
extern Value SYS_require_fixnum(Value arg);
extern Value SYS_require_hash_table(Value arg);
extern Value SYS_require_integer(Value arg);
extern Value SYS_require_keyword(Value arg);
extern Value SYS_require_list(Value arg);
extern Value SYS_require_number(Value arg);
extern Value SYS_require_simple_string(Value arg);
extern Value SYS_require_simple_vector(Value arg);
extern Value SYS_require_stream(Value arg);
extern Value SYS_require_string(Value arg);
extern Value SYS_require_structure_type(Value object, Value type_name);
extern Value SYS_require_symbol(Value arg);
extern Value SYS_require_ub32(Value arg);
extern Value SYS_require_vector(Value arg);
extern Value SYS_restart_function(Value arg);
extern Value SYS_restart_interactive_function(Value arg);
extern Value SYS_restart_report_function(Value arg);
extern Value SYS_restart_test_function(Value arg);
extern Value SYS_row_major_aset(Value array, Value index, Value new_element);
extern Value SYS_run_shell_command_internal(Value arg);
extern Value SYS_mref_32(Value address, Value offset);
extern Value SYS_mref_32_signed(Value address, Value offset);
#ifdef __x86_64__
extern Value SYS_mref_64(Value address, Value offset);
#endif
extern Value SYS_mref_8(Value address, Value offset);
extern Value SYS_mref_8_signed(Value address, Value offset);
extern Value SYS_sbit1(Value arg1, Value arg2);
extern Value SYS_set_char(Value string, Value index, Value character);
extern Value SYS_set_charpos(Value stream, Value position);
extern Value SYS_set_documentation_internal(Value object, Value doctype, Value new_value);
extern Value SYS_set_fdefinition(Value name, Value function);
extern Value SYS_set_fill_pointer(Value arg1, Value arg2);
extern Value SYS_set_find_class(Value arg1, Value arg2);
extern Value SYS_set_function_call_count(Value arg1, Value arg2);
extern Value SYS_set_function_code_size(Value arg1, Value arg2);
extern Value SYS_set_function_plist(Value function, Value plist);
extern Value SYS_set_macro_function(unsigned int numargs, Value args[]);
extern Value SYS_set_nth(Value index, Value list, Value new_value);
extern Value SYS_set_readtable_case(Value arg1, Value arg2);
extern Value SYS_set_sbit1(Value arg1, Value arg2, Value arg3);
extern Value SYS_set_schar(Value string, Value index, Value character);
extern Value SYS_set_slot_index(Value slotdef, Value index);
extern Value SYS_set_slot_initform(Value slotdef, Value initform);
extern Value SYS_set_slot_reader(Value slotdef, Value reader);
extern Value SYS_set_std_instance_layout(Value arg1, Value arg2);
extern Value SYS_set_std_instance_slot_value(Value arg1, Value arg2, Value arg3);
extern Value SYS_set_symbol_function(Value symbol, Value function);
extern Value SYS_set_symbol_global_value(Value symbol, Value value);
extern Value SYS_set_symbol_plist(Value symbol, Value plist);
extern Value SYS_setcar(Value cons, Value object);
extern Value SYS_setcdr(Value cons, Value object);
extern Value SYS_setelt(Value sequence, Value index, Value new_value);
extern Value SYS_setf_function_name_p(Value arg);
extern Value SYS_sharp_a(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_b(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_backslash(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_c(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_colon(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_dot(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_illegal(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_left_paren(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_o(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_p(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_quote(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_r(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_s(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_star(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_vertical_bar(Value stream, Value subchar, Value numarg);
extern Value SYS_sharp_x(Value stream, Value subchar, Value numarg);
extern Value SYS_simple_array_p(Value arg);
extern Value SYS_simple_bit_vector_bit_and(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_andc1(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_andc2(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_eqv(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_ior(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_nand(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_nor(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_not(Value arg1, Value arg2);
extern Value SYS_simple_bit_vector_bit_orc1(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_orc2(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_bit_xor(Value arg1, Value arg2, Value arg3);
extern Value SYS_simple_bit_vector_fill(Value arg1, Value arg2);
extern Value SYS_single_float_bits(Value arg);
extern Value SYS_single_float_p(Value arg);
extern Value SYS_slot_index(Value slotdef);
extern Value SYS_slot_initform(Value slotdef);
extern Value SYS_slot_name(Value slotdef);
extern Value SYS_slot_read_only_p(Value slotdef);
extern Value SYS_slot_reader(Value slotdef);
extern Value SYS_slot_type(Value slotdef);
extern Value SYS_special_bindings();
extern Value SYS_standard_object_p(Value arg);
extern Value SYS_start_profiler(Value max_depth);
extern Value SYS_std_instance_layout(Value arg);
extern Value SYS_std_instance_slot_value(Value arg1, Value arg2);
extern Value SYS_stop_profiler();
extern Value SYS_stream_charpos_internal(Value stream);
extern Value SYS_stream_close_internal(Value arg);
extern Value SYS_stream_fresh_line_internal(Value arg);
extern Value SYS_stream_princ_internal(Value stream, Value object);
extern Value SYS_stream_read_byte_function(Value arg);
extern Value SYS_stream_set_charpos_internal(Value stream, Value position);
extern Value SYS_stream_terpri_internal(Value arg);
extern Value SYS_stream_write_char_internal(Value arg1, Value arg2);
extern Value SYS_stream_write_object_internal(Value stream, Value object);
extern Value SYS_stream_write_string_internal(Value arg1, Value arg2, Value arg3, Value arg4);
extern Value SYS_string_capitalize_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_string_cmp(Value first, Value second, Value third,Value fourth, Value fifth, Value sixth);
extern Value SYS_string_compare(Value first, Value second, Value third,Value fourth, Value fifth, Value sixth);
extern Value SYS_string_downcase_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_string_find(Value arg1, Value arg2);
extern Value SYS_string_input_stream_current(Value arg);
extern Value SYS_string_upcase_internal(Value arg1, Value arg2, Value arg3);
extern Value SYS_structure_object_p(Value arg);
extern Value SYS_structure_ref(Value structure, Value index);
extern Value SYS_structure_set(Value structure, Value index, Value new_value);
extern Value SYS_structure_typep(Value object, Value type_name);
extern Value SYS_subseq2(Value arg1, Value arg2);
extern Value SYS_subseq3(Value arg1, Value arg2, Value arg3);
extern Value SYS_subsetp_eql(Value arg1, Value arg2);
extern Value SYS_svset(Value arg1, Value arg2, Value arg3);
extern Value SYS_swap_slots(Value arg1, Value arg2);
extern Value SYS_symbol_flags(Value arg);
extern Value SYS_symbol_global_value(Value arg);
extern Value SYS_trace_redefined_update(Value name, Value function);
extern Value SYS_truly_the(Value args, Environment * env, Thread * thread);
extern Value SYS_truncate_1(Value number);
extern Value SYS_truncate_2(Value number, Value divisor);
extern Value SYS_two_arg_append(Value arg1, Value arg2);
extern Value SYS_two_arg_char_e(Value arg1, Value arg2);
extern Value SYS_two_arg_char_equal(Value arg1, Value arg2);
extern Value SYS_two_arg_char_ge(Value arg1, Value arg2);
extern Value SYS_two_arg_char_gt(Value arg1, Value arg2);
extern Value SYS_two_arg_char_le(Value arg1, Value arg2);
extern Value SYS_two_arg_char_lt(Value arg1, Value arg2);
extern Value SYS_two_arg_char_ne(Value arg1, Value arg2);
extern Value SYS_two_arg_logand(Value v1, Value v2);
extern Value SYS_two_arg_logior(Value v1, Value v2);
extern Value SYS_two_arg_logxor(Value v1, Value v2);
extern Value SYS_two_arg_max(Value arg1, Value arg2);
extern Value SYS_two_arg_min(Value arg1, Value arg2);
extern Value SYS_two_arg_minus(Value v1, Value v2);
extern Value SYS_two_arg_plus(Value v1, Value v2);
extern Value SYS_two_arg_slash(Value v1, Value v2);
extern Value SYS_two_arg_star(Value v1, Value v2);
extern Value SYS_type_error_internal(Value datum, Value expected_type);
extern Value SYS_untraced_function(Value name);
extern Value SYS_upgraded_array_element_type_internal(Value arg);
#ifdef __x86_64__
extern Value SYS_value_to_ub64(Value arg);
#else
extern Value SYS_value_to_ub32(Value arg);
#endif
extern Value SYS_vector2(Value arg1, Value arg2);
extern Value SYS_vector3(Value arg1, Value arg2, Value arg3);
extern Value SYS_vector_data(Value arg);
extern Value SYS_vector_length(Value arg);
extern Value SYS_vector_length_internal(Value arg);
extern Value SYS_vector_position_eql(Value arg1, Value arg2);
extern Value SYS_vector_push_extend_2(Value arg1, Value arg2);
extern Value SYS_vector_push_extend_3(Value arg1, Value arg2, Value arg3);
extern Value SYS_vector_ref(Value vector, Value index);
extern Value SYS_vector_set(Value vector, Value index, Value new_element);
extern Value SYS_whitespacep(Value arg);
extern Value SYS_write_8_bits(Value byte, Value stream);
extern Value SYS_write_to_string_internal(Value arg);
extern Value SYS_xcaddr(Value arg);
extern Value SYS_xcadr(Value arg);
extern Value SYS_xcar(Value arg);
extern Value SYS_xcddr(Value arg);
extern Value SYS_xcdr(Value arg);
extern Value SYS_xclass_precedence_list(Value arg);
extern Value SYS_xgethash2_1(Value arg1, Value arg2);
extern Value SYS_xinspected_parts(Value arg);
extern Value SYS_xlist_length(Value arg);
extern Value SYS_xmake_structure(Value name, Value values_list, Value numslots);
extern Value SYS_xrplaca(Value cons, Value object);
extern Value SYS_xrplacd(Value cons, Value object);
extern Value SYS_xsbit1(Value arg1, Value arg2);
extern Value SYS_xschar(Value string, Value index);
extern Value SYS_xsetcar(Value cons, Value object);
extern Value SYS_xsetcdr(Value cons, Value object);
extern Value SYS_xstandard_char_p(Value arg);
extern Value SYS_xsvref(Value arg1, Value arg2);
extern Value SYS_xsvset(Value arg1, Value arg2, Value arg3);
extern Value SYS_xvector_ref(Value vector, Value index);
extern Value SYS_xvector_set(Value vector, Value index, Value new_element);
extern Value SYS_xwrite_8_bits(Value byte, Value stream);
extern Value SYS_xxmake_structure(Value types, Value numslots);

#endif // primitives.hpp
